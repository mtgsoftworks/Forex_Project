2025-05-07 06:08:55.666 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:08:56.392 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:08:56.393 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:08:56.417 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.
2025-05-07 06:08:56.442 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:08:56.443 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:08:56.453 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 06:08:57.028 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:08:57.040 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:08:57.043 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:08:57.043 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:08:57.098 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:08:57.099 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1202 ms
2025-05-07 06:08:57.146 [Coordinator] [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
2025-05-07 06:08:57.149 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-07 06:08:57.168 [Coordinator] [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2025-05-07 06:09:04.986 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:09:05.631 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:09:05.632 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:09:05.656 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 JPA repository interfaces.
2025-05-07 06:09:05.677 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:09:05.678 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:09:05.689 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 06:09:06.103 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:09:06.113 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:09:06.115 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:09:06.115 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:09:06.159 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:09:06.160 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 974 ms
2025-05-07 06:09:06.199 [Coordinator] [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
2025-05-07 06:09:06.201 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-07 06:09:06.220 [Coordinator] [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2025-05-07 06:09:14.878 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:09:15.490 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:09:15.491 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:09:15.510 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 JPA repository interfaces.
2025-05-07 06:09:15.529 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:09:15.531 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:09:15.538 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 06:09:15.999 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:09:16.009 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:09:16.010 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:09:16.011 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:09:16.054 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:09:16.055 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 983 ms
2025-05-07 06:09:16.103 [Coordinator] [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
2025-05-07 06:09:16.105 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-07 06:09:16.123 [Coordinator] [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2025-05-07 06:12:46.505 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:12:47.227 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:12:47.229 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:12:47.249 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
2025-05-07 06:12:47.271 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:12:47.272 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:12:47.282 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 06:12:47.803 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:12:47.815 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:12:47.822 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:12:47.823 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:12:47.869 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:12:47.869 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1120 ms
2025-05-07 06:12:48.127 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-07 06:12:48.182 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-07 06:12:48.213 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-07 06:12:48.460 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 06:12:48.534 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-07 06:12:48.796 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-07 06:12:48.799 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 06:12:49.071 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-07 06:12:49.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-07 06:12:49.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-07 06:12:49.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-07 06:12:49.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-07 06:12:49.074 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-07 06:12:49.074 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-07 06:12:49.074 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-07 06:12:49.477 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-07 06:12:49.489 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-07 06:13:05.129 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:13:05.839 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:13:05.840 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:13:05.860 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
2025-05-07 06:13:05.876 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:13:05.876 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:13:05.885 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 06:13:06.365 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:13:06.375 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:13:06.377 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:13:06.377 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:13:06.427 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:13:06.428 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1056 ms
2025-05-07 06:13:06.683 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-07 06:13:06.728 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-07 06:13:06.757 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-07 06:13:06.942 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 06:13:07.000 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-07 06:13:07.234 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-07 06:13:07.237 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 06:13:07.523 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-07 06:13:07.525 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-07 06:13:07.525 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-07 06:13:07.525 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-07 06:13:07.526 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-07 06:13:07.526 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-07 06:13:07.526 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-07 06:13:07.526 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-07 06:13:07.972 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-07 06:13:07.989 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-07 06:13:58.197 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 06:13:58.197 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-07 06:13:58.199 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-05-07 06:13:58.295 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 06:13:59.011 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.723920|34.678219|2025-05-07T06:13:58.054997800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.723920|34.678219|2025-05-07T06:13:58.054997800, timestamp=null), recordMetadata=forex_topic-0@0]
2025-05-07 06:18:32.083 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 06:18:32.104 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.121144|35.224383|2025-05-07T06:18:32.076369900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.121144|35.224383|2025-05-07T06:18:32.076369900, timestamp=null), recordMetadata=forex_topic-0@1]
2025-05-07 06:18:47.073 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 06:18:47.093 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.113692|35.175786|2025-05-07T06:18:47.030043100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.113692|35.175786|2025-05-07T06:18:47.030043100, timestamp=null), recordMetadata=forex_topic-0@2]
2025-05-07 06:18:52.136 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_GBPUSD
2025-05-07 06:18:52.142 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_GBPUSD|0.801301|0.819098|2025-05-07T06:18:52.122340200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_GBPUSD|0.801301|0.819098|2025-05-07T06:18:52.122340200, timestamp=null), recordMetadata=forex_topic-0@3]
2025-05-07 06:18:52.791 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_GBPUSD
2025-05-07 06:18:52.797 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_GBPUSD|0.797062|0.817283|2025-05-07T06:18:52.775348800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_GBPUSD|0.797062|0.817283|2025-05-07T06:18:52.775348800, timestamp=null), recordMetadata=forex_topic-0@4]
2025-05-07 06:37:04.780 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:37:05.675 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:37:05.678 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:37:05.699 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.
2025-05-07 06:37:05.722 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:37:05.722 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:37:05.730 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 06:37:06.250 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:37:06.262 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:37:06.264 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:37:06.264 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:37:06.317 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:37:06.317 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1253 ms
2025-05-07 06:37:06.575 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-07 06:37:06.635 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-07 06:37:06.702 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-07 06:37:06.963 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 06:37:07.033 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-07 06:37:07.287 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-07 06:37:07.291 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 06:37:07.610 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-07 06:37:07.611 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-07 06:37:07.611 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-07 06:37:07.611 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-07 06:37:07.611 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-07 06:37:07.612 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-07 06:37:07.612 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-07 06:37:07.612 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-07 06:37:08.061 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-07 06:37:08.072 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-07 06:37:31.079 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 06:37:31.080 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-07 06:37:31.081 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-07 06:37:31.176 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_GBPUSD
2025-05-07 06:37:31.703 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_GBPUSD|0.792793|0.822719|2025-05-07T06:37:31.004783400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_GBPUSD|0.792793|0.822719|2025-05-07T06:37:31.004783400, timestamp=null), recordMetadata=forex_topic-0@5]
2025-05-07 06:37:35.596 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 06:37:35.609 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.057452|1.063027|2025-05-07T06:37:35.579650100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.057452|1.063027|2025-05-07T06:37:35.579650100, timestamp=null), recordMetadata=forex_topic-0@6]
2025-05-07 06:37:39.899 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 06:37:39.909 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.044909|1.059430|2025-05-07T06:37:39.860543100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.044909|1.059430|2025-05-07T06:37:39.860543100, timestamp=null), recordMetadata=forex_topic-0@7]
2025-05-07 06:39:20.154 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:39:21.003 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:39:21.005 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:39:21.026 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
2025-05-07 06:39:21.043 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:39:21.044 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:39:21.053 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 06:39:21.615 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:39:21.627 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:39:21.629 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:39:21.630 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:39:21.677 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:39:21.683 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1209 ms
2025-05-07 06:39:21.959 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-07 06:39:21.999 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-07 06:39:22.025 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-07 06:39:22.231 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 06:39:22.308 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-07 06:39:22.588 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-07 06:39:22.592 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 06:39:22.889 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-07 06:39:22.890 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-07 06:39:22.891 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-07 06:39:22.891 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-07 06:39:22.891 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-07 06:39:22.891 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-07 06:39:22.891 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-07 06:39:22.892 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-07 06:39:23.358 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-07 06:39:23.379 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-07 06:40:06.628 [Coordinator] [http-nio-8090-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 06:40:06.628 [Coordinator] [http-nio-8090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-07 06:40:06.629 [Coordinator] [http-nio-8090-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-07 06:40:06.721 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:07.275 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.916164|34.735970|2025-05-07T06:40:06.529777400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.916164|34.735970|2025-05-07T06:40:06.529777400, timestamp=null), recordMetadata=forex_topic-0@8]
2025-05-07 06:40:08.302 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:08.309 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.719044|35.274649|2025-05-07T06:40:08.285557500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.719044|35.274649|2025-05-07T06:40:08.285557500, timestamp=null), recordMetadata=forex_topic-0@9]
2025-05-07 06:40:09.326 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:09.331 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.161193|35.270396|2025-05-07T06:40:09.309803100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.161193|35.270396|2025-05-07T06:40:09.309803100, timestamp=null), recordMetadata=forex_topic-0@10]
2025-05-07 06:40:10.357 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:10.363 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.981666|34.934221|2025-05-07T06:40:10.340643500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.981666|34.934221|2025-05-07T06:40:10.340643500, timestamp=null), recordMetadata=forex_topic-0@11]
2025-05-07 06:40:11.388 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:11.394 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.092548|34.839609|2025-05-07T06:40:11.370743400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.092548|34.839609|2025-05-07T06:40:11.370743400, timestamp=null), recordMetadata=forex_topic-0@12]
2025-05-07 06:40:12.416 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:12.424 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.735793|34.853227|2025-05-07T06:40:12.399671900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.735793|34.853227|2025-05-07T06:40:12.399671900, timestamp=null), recordMetadata=forex_topic-0@13]
2025-05-07 06:40:13.452 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:13.457 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.030802|34.667695|2025-05-07T06:40:13.435860500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.030802|34.667695|2025-05-07T06:40:13.435860500, timestamp=null), recordMetadata=forex_topic-0@14]
2025-05-07 06:40:14.478 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:14.487 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.105861|34.941739|2025-05-07T06:40:14.460760600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.105861|34.941739|2025-05-07T06:40:14.460760600, timestamp=null), recordMetadata=forex_topic-0@15]
2025-05-07 06:40:15.517 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:15.522 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.861486|35.157043|2025-05-07T06:40:15.500998900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.861486|35.157043|2025-05-07T06:40:15.500998900, timestamp=null), recordMetadata=forex_topic-0@16]
2025-05-07 06:40:16.549 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:16.560 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.909350|35.240731|2025-05-07T06:40:16.530733400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.909350|35.240731|2025-05-07T06:40:16.530733400, timestamp=null), recordMetadata=forex_topic-0@17]
2025-05-07 06:40:17.589 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:17.596 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.897486|34.874436|2025-05-07T06:40:17.571094100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.897486|34.874436|2025-05-07T06:40:17.571094100, timestamp=null), recordMetadata=forex_topic-0@18]
2025-05-07 06:40:18.626 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:18.632 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.802099|34.985591|2025-05-07T06:40:18.609214900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.802099|34.985591|2025-05-07T06:40:18.609214900, timestamp=null), recordMetadata=forex_topic-0@19]
2025-05-07 06:40:19.662 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:19.670 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.100588|35.312503|2025-05-07T06:40:19.645096800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.100588|35.312503|2025-05-07T06:40:19.645096800, timestamp=null), recordMetadata=forex_topic-0@20]
2025-05-07 06:40:20.687 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:20.692 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.041693|34.794117|2025-05-07T06:40:20.671434400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.041693|34.794117|2025-05-07T06:40:20.671434400, timestamp=null), recordMetadata=forex_topic-0@21]
2025-05-07 06:40:21.711 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:21.718 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.210340|35.098570|2025-05-07T06:40:21.693742 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.210340|35.098570|2025-05-07T06:40:21.693742, timestamp=null), recordMetadata=forex_topic-0@22]
2025-05-07 06:40:22.744 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:22.748 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.120409|34.685745|2025-05-07T06:40:22.726225400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.120409|34.685745|2025-05-07T06:40:22.726225400, timestamp=null), recordMetadata=forex_topic-0@23]
2025-05-07 06:40:23.768 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:23.772 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.822856|35.260361|2025-05-07T06:40:23.752307 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.822856|35.260361|2025-05-07T06:40:23.752307, timestamp=null), recordMetadata=forex_topic-0@24]
2025-05-07 06:40:24.792 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:24.796 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.754265|34.699619|2025-05-07T06:40:24.774386400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.754265|34.699619|2025-05-07T06:40:24.774386400, timestamp=null), recordMetadata=forex_topic-0@25]
2025-05-07 06:40:25.814 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:25.818 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.927823|35.317260|2025-05-07T06:40:25.797509800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.927823|35.317260|2025-05-07T06:40:25.797509800, timestamp=null), recordMetadata=forex_topic-0@26]
2025-05-07 06:40:26.840 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:26.844 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.300990|34.811810|2025-05-07T06:40:26.823885900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.300990|34.811810|2025-05-07T06:40:26.823885900, timestamp=null), recordMetadata=forex_topic-0@27]
2025-05-07 06:40:27.865 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:27.870 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.208916|35.147031|2025-05-07T06:40:27.847708500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.208916|35.147031|2025-05-07T06:40:27.847708500, timestamp=null), recordMetadata=forex_topic-0@28]
2025-05-07 06:40:28.894 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:28.900 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.017279|35.156589|2025-05-07T06:40:28.877184500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.017279|35.156589|2025-05-07T06:40:28.877184500, timestamp=null), recordMetadata=forex_topic-0@29]
2025-05-07 06:40:29.919 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:29.925 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.140945|34.680869|2025-05-07T06:40:29.902933 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.140945|34.680869|2025-05-07T06:40:29.902933, timestamp=null), recordMetadata=forex_topic-0@30]
2025-05-07 06:40:30.954 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:30.958 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.334491|35.233129|2025-05-07T06:40:30.937669900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.334491|35.233129|2025-05-07T06:40:30.937669900, timestamp=null), recordMetadata=forex_topic-0@31]
2025-05-07 06:40:31.976 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:31.998 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.336525|34.904611|2025-05-07T06:40:31.959916600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.336525|34.904611|2025-05-07T06:40:31.959916600, timestamp=null), recordMetadata=forex_topic-0@32]
2025-05-07 06:40:33.024 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:33.034 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.691964|35.127339|2025-05-07T06:40:33.007441800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.691964|35.127339|2025-05-07T06:40:33.007441800, timestamp=null), recordMetadata=forex_topic-0@33]
2025-05-07 06:40:34.056 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:34.062 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.745682|34.790677|2025-05-07T06:40:34.039748800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.745682|34.790677|2025-05-07T06:40:34.039748800, timestamp=null), recordMetadata=forex_topic-0@34]
2025-05-07 06:40:35.079 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:35.084 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.098444|35.298752|2025-05-07T06:40:35.063080700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.098444|35.298752|2025-05-07T06:40:35.063080700, timestamp=null), recordMetadata=forex_topic-0@35]
2025-05-07 06:40:36.107 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:36.110 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.313744|35.153979|2025-05-07T06:40:36.089878300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.313744|35.153979|2025-05-07T06:40:36.089878300, timestamp=null), recordMetadata=forex_topic-0@36]
2025-05-07 06:40:37.137 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:37.141 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.774643|35.174490|2025-05-07T06:40:37.121074900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.774643|35.174490|2025-05-07T06:40:37.121074900, timestamp=null), recordMetadata=forex_topic-0@37]
2025-05-07 06:40:38.160 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:38.166 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.316021|34.815556|2025-05-07T06:40:38.144370300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.316021|34.815556|2025-05-07T06:40:38.144370300, timestamp=null), recordMetadata=forex_topic-0@38]
2025-05-07 06:40:39.183 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:39.188 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.683722|34.856272|2025-05-07T06:40:39.166139200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.683722|34.856272|2025-05-07T06:40:39.166139200, timestamp=null), recordMetadata=forex_topic-0@39]
2025-05-07 06:40:40.210 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:40.220 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.812199|34.870102|2025-05-07T06:40:40.194041200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.812199|34.870102|2025-05-07T06:40:40.194041200, timestamp=null), recordMetadata=forex_topic-0@40]
2025-05-07 06:40:41.250 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:41.261 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.321563|34.682291|2025-05-07T06:40:41.234659400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.321563|34.682291|2025-05-07T06:40:41.234659400, timestamp=null), recordMetadata=forex_topic-0@41]
2025-05-07 06:40:42.289 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 06:40:42.292 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.099031|34.987833|2025-05-07T06:40:42.272578300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.099031|34.987833|2025-05-07T06:40:42.272578300, timestamp=null), recordMetadata=forex_topic-0@42]
2025-05-07 06:56:11.380 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 06:56:12.358 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:56:12.359 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 06:56:12.379 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
2025-05-07 06:56:12.400 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 06:56:12.401 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 06:56:12.411 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-07 06:56:12.982 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 06:56:12.994 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 06:56:12.996 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 06:56:12.996 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 06:56:13.046 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 06:56:13.048 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1309 ms
2025-05-07 06:56:13.368 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-07 06:56:13.413 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-07 06:56:13.450 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-07 06:56:13.696 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 06:56:13.771 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-07 06:56:14.036 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-07 06:56:14.039 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 06:56:14.373 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-07 06:56:14.375 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-07 06:56:14.375 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-07 06:56:14.376 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-07 06:56:14.376 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-07 06:56:14.376 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-07 06:56:14.376 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-07 06:56:14.377 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-07 06:56:15.014 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-07 06:56:15.030 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-07 06:58:29.696 [Coordinator] [http-nio-8090-exec-4] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 06:58:29.696 [Coordinator] [http-nio-8090-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-07 06:58:29.697 [Coordinator] [http-nio-8090-exec-4] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-07 06:58:29.788 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 06:58:30.823 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.048976|1.065843|2025-05-07T06:58:29.613427600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.048976|1.065843|2025-05-07T06:58:29.613427600, timestamp=null), recordMetadata=forex_topic-0@43]
2025-05-07 07:00:02.758 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:02.763 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.199506|34.845010|2025-05-07T07:00:02.706639400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.199506|34.845010|2025-05-07T07:00:02.706639400, timestamp=null), recordMetadata=forex_topic-0@44]
2025-05-07 07:00:03.788 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:03.793 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.156085|34.788079|2025-05-07T07:00:03.771292100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.156085|34.788079|2025-05-07T07:00:03.771292100, timestamp=null), recordMetadata=forex_topic-0@45]
2025-05-07 07:00:04.816 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:04.824 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.076860|35.107151|2025-05-07T07:00:04.798199700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.076860|35.107151|2025-05-07T07:00:04.798199700, timestamp=null), recordMetadata=forex_topic-0@46]
2025-05-07 07:00:05.853 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:05.858 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.180300|34.744011|2025-05-07T07:00:05.837200900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.180300|34.744011|2025-05-07T07:00:05.837200900, timestamp=null), recordMetadata=forex_topic-0@47]
2025-05-07 07:00:06.879 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:06.886 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.707047|35.221286|2025-05-07T07:00:06.862732700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.707047|35.221286|2025-05-07T07:00:06.862732700, timestamp=null), recordMetadata=forex_topic-0@48]
2025-05-07 07:00:07.908 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:07.913 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.889043|35.014691|2025-05-07T07:00:07.891449700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.889043|35.014691|2025-05-07T07:00:07.891449700, timestamp=null), recordMetadata=forex_topic-0@49]
2025-05-07 07:00:08.935 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:08.941 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.258914|35.347362|2025-05-07T07:00:08.919033 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.258914|35.347362|2025-05-07T07:00:08.919033, timestamp=null), recordMetadata=forex_topic-0@50]
2025-05-07 07:00:09.962 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:09.979 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.298018|34.742874|2025-05-07T07:00:09.945069400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.298018|34.742874|2025-05-07T07:00:09.945069400, timestamp=null), recordMetadata=forex_topic-0@51]
2025-05-07 07:00:11.006 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:11.014 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.123108|35.336676|2025-05-07T07:00:10.989252800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.123108|35.336676|2025-05-07T07:00:10.989252800, timestamp=null), recordMetadata=forex_topic-0@52]
2025-05-07 07:00:12.033 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:12.042 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.004163|34.704444|2025-05-07T07:00:12.015671400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.004163|34.704444|2025-05-07T07:00:12.015671400, timestamp=null), recordMetadata=forex_topic-0@53]
2025-05-07 07:00:13.061 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:13.065 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.675898|35.203078|2025-05-07T07:00:13.045378800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.675898|35.203078|2025-05-07T07:00:13.045378800, timestamp=null), recordMetadata=forex_topic-0@54]
2025-05-07 07:00:14.087 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:14.092 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.029700|35.266865|2025-05-07T07:00:14.071908600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.029700|35.266865|2025-05-07T07:00:14.071908600, timestamp=null), recordMetadata=forex_topic-0@55]
2025-05-07 07:00:15.118 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:15.127 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.728717|35.312215|2025-05-07T07:00:15.099885200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.728717|35.312215|2025-05-07T07:00:15.099885200, timestamp=null), recordMetadata=forex_topic-0@56]
2025-05-07 07:00:16.156 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:16.160 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.204837|35.032546|2025-05-07T07:00:16.139370100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.204837|35.032546|2025-05-07T07:00:16.139370100, timestamp=null), recordMetadata=forex_topic-0@57]
2025-05-07 07:00:17.182 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:17.188 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.681019|35.336602|2025-05-07T07:00:17.165602100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.681019|35.336602|2025-05-07T07:00:17.165602100, timestamp=null), recordMetadata=forex_topic-0@58]
2025-05-07 07:00:18.210 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:18.215 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.835317|34.973831|2025-05-07T07:00:18.195002400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.835317|34.973831|2025-05-07T07:00:18.195002400, timestamp=null), recordMetadata=forex_topic-0@59]
2025-05-07 07:00:19.238 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:19.244 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.024071|35.197626|2025-05-07T07:00:19.221424100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.024071|35.197626|2025-05-07T07:00:19.221424100, timestamp=null), recordMetadata=forex_topic-0@60]
2025-05-07 07:00:20.267 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:20.274 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.101691|34.738100|2025-05-07T07:00:20.251122300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.101691|34.738100|2025-05-07T07:00:20.251122300, timestamp=null), recordMetadata=forex_topic-0@61]
2025-05-07 07:00:21.299 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:21.304 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.744600|35.260811|2025-05-07T07:00:21.281857 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.744600|35.260811|2025-05-07T07:00:21.281857, timestamp=null), recordMetadata=forex_topic-0@62]
2025-05-07 07:00:22.327 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:22.331 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.709099|35.195121|2025-05-07T07:00:22.309695400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.709099|35.195121|2025-05-07T07:00:22.309695400, timestamp=null), recordMetadata=forex_topic-0@63]
2025-05-07 07:00:23.352 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:23.356 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.949755|35.167774|2025-05-07T07:00:23.334798700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.949755|35.167774|2025-05-07T07:00:23.334798700, timestamp=null), recordMetadata=forex_topic-0@64]
2025-05-07 07:00:24.373 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:24.377 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.829479|34.814331|2025-05-07T07:00:24.356255 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.829479|34.814331|2025-05-07T07:00:24.356255, timestamp=null), recordMetadata=forex_topic-0@65]
2025-05-07 07:00:25.405 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:25.409 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.758623|35.277250|2025-05-07T07:00:25.387695200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.758623|35.277250|2025-05-07T07:00:25.387695200, timestamp=null), recordMetadata=forex_topic-0@66]
2025-05-07 07:00:26.432 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:26.437 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.272596|34.897099|2025-05-07T07:00:26.415355600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.272596|34.897099|2025-05-07T07:00:26.415355600, timestamp=null), recordMetadata=forex_topic-0@67]
2025-05-07 07:00:27.460 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:27.470 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.820586|34.948405|2025-05-07T07:00:27.443083400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.820586|34.948405|2025-05-07T07:00:27.443083400, timestamp=null), recordMetadata=forex_topic-0@68]
2025-05-07 07:00:28.498 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:28.503 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.847891|35.248331|2025-05-07T07:00:28.480386700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.847891|35.248331|2025-05-07T07:00:28.480386700, timestamp=null), recordMetadata=forex_topic-0@69]
2025-05-07 07:00:29.536 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:29.539 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.847096|34.932390|2025-05-07T07:00:29.518348100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.847096|34.932390|2025-05-07T07:00:29.518348100, timestamp=null), recordMetadata=forex_topic-0@70]
2025-05-07 07:00:30.561 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:30.566 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.876089|34.952916|2025-05-07T07:00:30.545166800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.876089|34.952916|2025-05-07T07:00:30.545166800, timestamp=null), recordMetadata=forex_topic-0@71]
2025-05-07 07:00:31.592 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:31.596 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.120973|35.142655|2025-05-07T07:00:31.575598800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.120973|35.142655|2025-05-07T07:00:31.575598800, timestamp=null), recordMetadata=forex_topic-0@72]
2025-05-07 07:00:32.622 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:32.626 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.737680|34.925534|2025-05-07T07:00:32.605325300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.737680|34.925534|2025-05-07T07:00:32.605325300, timestamp=null), recordMetadata=forex_topic-0@73]
2025-05-07 07:00:33.645 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:33.654 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.916140|34.951020|2025-05-07T07:00:33.627662 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.916140|34.951020|2025-05-07T07:00:33.627662, timestamp=null), recordMetadata=forex_topic-0@74]
2025-05-07 07:00:34.674 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:34.679 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.844771|34.927260|2025-05-07T07:00:34.657108400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.844771|34.927260|2025-05-07T07:00:34.657108400, timestamp=null), recordMetadata=forex_topic-0@75]
2025-05-07 07:00:35.696 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:35.700 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.200717|34.904832|2025-05-07T07:00:35.680236500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.200717|34.904832|2025-05-07T07:00:35.680236500, timestamp=null), recordMetadata=forex_topic-0@76]
2025-05-07 07:00:36.724 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:36.729 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.053502|34.789171|2025-05-07T07:00:36.707864100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.053502|34.789171|2025-05-07T07:00:36.707864100, timestamp=null), recordMetadata=forex_topic-0@77]
2025-05-07 07:00:37.756 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:37.761 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.987724|35.080771|2025-05-07T07:00:37.739499600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.987724|35.080771|2025-05-07T07:00:37.739499600, timestamp=null), recordMetadata=forex_topic-0@78]
2025-05-07 07:00:38.783 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:38.786 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.256107|35.151816|2025-05-07T07:00:38.766374400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.256107|35.151816|2025-05-07T07:00:38.766374400, timestamp=null), recordMetadata=forex_topic-0@79]
2025-05-07 07:00:39.812 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:39.816 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.040146|35.282926|2025-05-07T07:00:39.795177100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.040146|35.282926|2025-05-07T07:00:39.795177100, timestamp=null), recordMetadata=forex_topic-0@80]
2025-05-07 07:00:40.840 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:40.846 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.904890|34.719931|2025-05-07T07:00:40.822729600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.904890|34.719931|2025-05-07T07:00:40.822729600, timestamp=null), recordMetadata=forex_topic-0@81]
2025-05-07 07:00:41.871 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:41.877 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.810930|35.156753|2025-05-07T07:00:41.855390 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.810930|35.156753|2025-05-07T07:00:41.855390, timestamp=null), recordMetadata=forex_topic-0@82]
2025-05-07 07:00:42.899 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:42.904 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.084771|35.344192|2025-05-07T07:00:42.881472200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.084771|35.344192|2025-05-07T07:00:42.881472200, timestamp=null), recordMetadata=forex_topic-0@83]
2025-05-07 07:00:43.926 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:43.931 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.263498|35.326361|2025-05-07T07:00:43.909071 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.263498|35.326361|2025-05-07T07:00:43.909071, timestamp=null), recordMetadata=forex_topic-0@84]
2025-05-07 07:00:44.951 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:44.963 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.106757|35.076070|2025-05-07T07:00:44.934789500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.106757|35.076070|2025-05-07T07:00:44.934789500, timestamp=null), recordMetadata=forex_topic-0@85]
2025-05-07 07:00:45.989 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:45.995 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.814675|34.970278|2025-05-07T07:00:45.971372200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.814675|34.970278|2025-05-07T07:00:45.971372200, timestamp=null), recordMetadata=forex_topic-0@86]
2025-05-07 07:00:47.017 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:47.072 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.081567|35.198013|2025-05-07T07:00:47.000139 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.081567|35.198013|2025-05-07T07:00:47.000139, timestamp=null), recordMetadata=forex_topic-0@87]
2025-05-07 07:00:47.866 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 07:00:47.871 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.056890|1.078971|2025-05-07T07:00:47.863602500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.056890|1.078971|2025-05-07T07:00:47.863602500, timestamp=null), recordMetadata=forex_topic-0@88]
2025-05-07 07:00:48.090 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:48.098 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.829448|34.830449|2025-05-07T07:00:48.073854500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.829448|34.830449|2025-05-07T07:00:48.073854500, timestamp=null), recordMetadata=forex_topic-0@89]
2025-05-07 07:00:48.524 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 07:00:48.534 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.040703|1.063160|2025-05-07T07:00:48.508943400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.040703|1.063160|2025-05-07T07:00:48.508943400, timestamp=null), recordMetadata=forex_topic-0@90]
2025-05-07 07:00:49.112 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:49.117 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.150842|35.109189|2025-05-07T07:00:49.097451300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.150842|35.109189|2025-05-07T07:00:49.097451300, timestamp=null), recordMetadata=forex_topic-0@91]
2025-05-07 07:00:49.143 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 07:00:49.151 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.049349|1.060661|2025-05-07T07:00:49.130533300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.049349|1.060661|2025-05-07T07:00:49.130533300, timestamp=null), recordMetadata=forex_topic-0@92]
2025-05-07 07:00:49.714 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 07:00:49.719 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.049369|1.072707|2025-05-07T07:00:49.707379500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.049369|1.072707|2025-05-07T07:00:49.707379500, timestamp=null), recordMetadata=forex_topic-0@93]
2025-05-07 07:00:50.136 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:50.147 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.195777|35.000675|2025-05-07T07:00:50.118934300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.195777|35.000675|2025-05-07T07:00:50.118934300, timestamp=null), recordMetadata=forex_topic-0@94]
2025-05-07 07:00:50.260 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_EURUSD
2025-05-07 07:00:50.274 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_EURUSD|1.042061|1.071944|2025-05-07T07:00:50.247829600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_EURUSD|1.042061|1.071944|2025-05-07T07:00:50.247829600, timestamp=null), recordMetadata=forex_topic-0@95]
2025-05-07 07:00:51.175 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:51.179 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.122751|34.846949|2025-05-07T07:00:51.157688300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.122751|34.846949|2025-05-07T07:00:51.157688300, timestamp=null), recordMetadata=forex_topic-0@96]
2025-05-07 07:00:52.202 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:52.209 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.837701|34.664050|2025-05-07T07:00:52.185210800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.837701|34.664050|2025-05-07T07:00:52.185210800, timestamp=null), recordMetadata=forex_topic-0@97]
2025-05-07 07:00:53.239 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:53.244 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.859501|35.345932|2025-05-07T07:00:53.223776700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.859501|35.345932|2025-05-07T07:00:53.223776700, timestamp=null), recordMetadata=forex_topic-0@98]
2025-05-07 07:00:54.271 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:54.278 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.866293|35.344160|2025-05-07T07:00:54.253972100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.866293|35.344160|2025-05-07T07:00:54.253972100, timestamp=null), recordMetadata=forex_topic-0@99]
2025-05-07 07:00:55.300 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:55.307 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.936144|34.680388|2025-05-07T07:00:55.284164200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.936144|34.680388|2025-05-07T07:00:55.284164200, timestamp=null), recordMetadata=forex_topic-0@100]
2025-05-07 07:00:56.324 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:56.331 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.300539|34.901905|2025-05-07T07:00:56.308339300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.300539|34.901905|2025-05-07T07:00:56.308339300, timestamp=null), recordMetadata=forex_topic-0@101]
2025-05-07 07:00:57.354 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:57.367 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.753252|35.100826|2025-05-07T07:00:57.337357100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.753252|35.100826|2025-05-07T07:00:57.337357100, timestamp=null), recordMetadata=forex_topic-0@102]
2025-05-07 07:00:58.386 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:58.391 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.874012|35.248760|2025-05-07T07:00:58.369983100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.874012|35.248760|2025-05-07T07:00:58.369983100, timestamp=null), recordMetadata=forex_topic-0@103]
2025-05-07 07:00:59.412 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:00:59.417 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.040456|34.863499|2025-05-07T07:00:59.395996600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.040456|34.863499|2025-05-07T07:00:59.395996600, timestamp=null), recordMetadata=forex_topic-0@104]
2025-05-07 07:01:00.442 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:00.446 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.018247|34.658142|2025-05-07T07:01:00.426042300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.018247|34.658142|2025-05-07T07:01:00.426042300, timestamp=null), recordMetadata=forex_topic-0@105]
2025-05-07 07:01:01.471 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:01.477 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.773476|34.660501|2025-05-07T07:01:01.454285700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.773476|34.660501|2025-05-07T07:01:01.454285700, timestamp=null), recordMetadata=forex_topic-0@106]
2025-05-07 07:01:02.503 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:02.508 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.760029|35.139265|2025-05-07T07:01:02.487720500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.760029|35.139265|2025-05-07T07:01:02.487720500, timestamp=null), recordMetadata=forex_topic-0@107]
2025-05-07 07:01:03.533 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:03.537 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.904221|35.089424|2025-05-07T07:01:03.516971400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.904221|35.089424|2025-05-07T07:01:03.516971400, timestamp=null), recordMetadata=forex_topic-0@108]
2025-05-07 07:01:04.560 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:04.566 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.667309|34.892428|2025-05-07T07:01:04.544030900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.667309|34.892428|2025-05-07T07:01:04.544030900, timestamp=null), recordMetadata=forex_topic-0@109]
2025-05-07 07:01:05.587 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:05.592 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.251683|35.054530|2025-05-07T07:01:05.572160200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.251683|35.054530|2025-05-07T07:01:05.572160200, timestamp=null), recordMetadata=forex_topic-0@110]
2025-05-07 07:01:06.619 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:06.622 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.967298|34.791203|2025-05-07T07:01:06.602302600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.967298|34.791203|2025-05-07T07:01:06.602302600, timestamp=null), recordMetadata=forex_topic-0@111]
2025-05-07 07:01:07.648 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:07.654 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.020747|35.266318|2025-05-07T07:01:07.631801800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.020747|35.266318|2025-05-07T07:01:07.631801800, timestamp=null), recordMetadata=forex_topic-0@112]
2025-05-07 07:01:08.676 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:08.681 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.220286|35.135256|2025-05-07T07:01:08.659986500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.220286|35.135256|2025-05-07T07:01:08.659986500, timestamp=null), recordMetadata=forex_topic-0@113]
2025-05-07 07:01:09.705 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:09.710 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.666753|34.803112|2025-05-07T07:01:09.688838200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.666753|34.803112|2025-05-07T07:01:09.688838200, timestamp=null), recordMetadata=forex_topic-0@114]
2025-05-07 07:01:10.733 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:10.737 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.784059|34.787815|2025-05-07T07:01:10.716341300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.784059|34.787815|2025-05-07T07:01:10.716341300, timestamp=null), recordMetadata=forex_topic-0@115]
2025-05-07 07:01:11.761 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:11.766 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.805493|35.216988|2025-05-07T07:01:11.745793800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.805493|35.216988|2025-05-07T07:01:11.745793800, timestamp=null), recordMetadata=forex_topic-0@116]
2025-05-07 07:01:12.787 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:12.791 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.866284|34.853850|2025-05-07T07:01:12.770818800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.866284|34.853850|2025-05-07T07:01:12.770818800, timestamp=null), recordMetadata=forex_topic-0@117]
2025-05-07 07:01:13.816 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:13.821 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.221553|35.106842|2025-05-07T07:01:13.799647100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.221553|35.106842|2025-05-07T07:01:13.799647100, timestamp=null), recordMetadata=forex_topic-0@118]
2025-05-07 07:01:14.846 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:01:14.852 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.196073|35.269009|2025-05-07T07:01:14.830113200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.196073|35.269009|2025-05-07T07:01:14.830113200, timestamp=null), recordMetadata=forex_topic-0@119]
2025-05-07 07:04:17.522 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 07:04:18.934 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 07:04:18.937 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 07:04:18.966 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
2025-05-07 07:04:19.002 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 07:04:19.004 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 07:04:19.016 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-05-07 07:04:19.753 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 07:04:19.769 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 07:04:19.772 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 07:04:19.772 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 07:04:19.853 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 07:04:19.855 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1959 ms
2025-05-07 07:04:20.237 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-07 07:04:20.303 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-07 07:04:20.361 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-07 07:04:20.622 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 07:04:20.729 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-07 07:04:21.080 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-07 07:04:21.087 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 07:04:21.498 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-07 07:04:21.500 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-07 07:04:21.500 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-07 07:04:21.501 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-07 07:04:21.501 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-07 07:04:21.501 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-07 07:04:21.501 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-07 07:04:21.501 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-07 07:04:22.277 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-07 07:04:22.296 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-07 07:05:27.373 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 07:05:27.373 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-07 07:05:27.375 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-07 07:05:27.547 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:28.678 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.087966|35.234126|2025-05-07T07:05:27.198539500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.087966|35.234126|2025-05-07T07:05:27.198539500, timestamp=null), recordMetadata=forex_topic-0@0]
2025-05-07 07:05:29.656 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:29.666 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.907165|34.880200|2025-05-07T07:05:29.637504600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.907165|34.880200|2025-05-07T07:05:29.637504600, timestamp=null), recordMetadata=forex_topic-0@1]
2025-05-07 07:05:30.684 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:30.692 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.706557|35.075421|2025-05-07T07:05:30.666453500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.706557|35.075421|2025-05-07T07:05:30.666453500, timestamp=null), recordMetadata=forex_topic-0@2]
2025-05-07 07:05:31.730 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:31.745 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.154343|34.746952|2025-05-07T07:05:31.706536100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.154343|34.746952|2025-05-07T07:05:31.706536100, timestamp=null), recordMetadata=forex_topic-0@3]
2025-05-07 07:05:32.766 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:32.773 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.090039|35.349317|2025-05-07T07:05:32.748638500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.090039|35.349317|2025-05-07T07:05:32.748638500, timestamp=null), recordMetadata=forex_topic-0@4]
2025-05-07 07:05:33.807 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:33.816 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.960275|35.221803|2025-05-07T07:05:33.787604 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.960275|35.221803|2025-05-07T07:05:33.787604, timestamp=null), recordMetadata=forex_topic-0@5]
2025-05-07 07:05:34.839 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:34.839 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:05:34.846 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.727939|34.828812|2025-05-07T07:05:34.734422500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.727939|34.828812|2025-05-07T07:05:34.734422500, timestamp=null), recordMetadata=forex_topic-0@6]
2025-05-07 07:05:34.858 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.835264|34.863009|2025-05-07T07:05:34.819054700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.835264|34.863009|2025-05-07T07:05:34.819054700, timestamp=null), recordMetadata=forex_topic-0@7]
2025-05-07 07:05:35.755 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.781602|34.845911|2025-05-07T07:05:34.819054700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.781602|34.845911|2025-05-07T07:05:34.819054700, timestamp=null), recordMetadata=forex_topic-0@8]
2025-05-07 07:05:35.760 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.781602|34.845911|2025-05-07T07:05:34.819054700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.781602|34.845911|2025-05-07T07:05:34.819054700, timestamp=null), recordMetadata=forex_topic-0@9]
2025-05-07 07:05:36.712 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:05:36.732 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.300845|35.169131|2025-05-07T07:05:36.696503700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.300845|35.169131|2025-05-07T07:05:36.696503700, timestamp=null), recordMetadata=forex_topic-0@10]
2025-05-07 07:05:36.767 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.068055|35.016070|2025-05-07T07:05:34.819054700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.068055|35.016070|2025-05-07T07:05:34.819054700, timestamp=null), recordMetadata=forex_topic-0@11]
2025-05-07 07:05:36.774 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:36.783 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.770520|34.789963|2025-05-07T07:05:36.754996 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.770520|34.789963|2025-05-07T07:05:36.754996, timestamp=null), recordMetadata=forex_topic-0@12]
2025-05-07 07:05:36.818 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.035683|34.979547|2025-05-07T07:05:36.754996 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.035683|34.979547|2025-05-07T07:05:36.754996, timestamp=null), recordMetadata=forex_topic-0@13]
2025-05-07 07:05:37.845 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:37.845 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:05:37.856 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.682436|34.803088|2025-05-07T07:05:37.832889500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.682436|34.803088|2025-05-07T07:05:37.832889500, timestamp=null), recordMetadata=forex_topic-0@14]
2025-05-07 07:05:37.877 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.335203|35.214878|2025-05-07T07:05:37.827279400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.335203|35.214878|2025-05-07T07:05:37.827279400, timestamp=null), recordMetadata=forex_topic-0@15]
2025-05-07 07:05:37.909 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.008820|35.008983|2025-05-07T07:05:37.827279400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.008820|35.008983|2025-05-07T07:05:37.827279400, timestamp=null), recordMetadata=forex_topic-0@16]
2025-05-07 07:05:37.911 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.008820|35.008983|2025-05-07T07:05:37.827279400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.008820|35.008983|2025-05-07T07:05:37.827279400, timestamp=null), recordMetadata=forex_topic-0@17]
2025-05-07 07:05:38.548 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:05:38.575 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.759274|34.707575|2025-05-07T07:05:38.532662900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.759274|34.707575|2025-05-07T07:05:38.532662900, timestamp=null), recordMetadata=forex_topic-0@18]
2025-05-07 07:05:38.601 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.047239|34.961227|2025-05-07T07:05:37.827279400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.047239|34.961227|2025-05-07T07:05:37.827279400, timestamp=null), recordMetadata=forex_topic-0@19]
2025-05-07 07:05:38.937 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:38.957 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.000037|35.324609|2025-05-07T07:05:38.919031700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.000037|35.324609|2025-05-07T07:05:38.919031700, timestamp=null), recordMetadata=forex_topic-0@20]
2025-05-07 07:05:38.996 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.879656|35.016092|2025-05-07T07:05:38.919031700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.879656|35.016092|2025-05-07T07:05:38.919031700, timestamp=null), recordMetadata=forex_topic-0@21]
2025-05-07 07:05:39.187 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:05:39.194 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.221875|34.652859|2025-05-07T07:05:39.171305800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.221875|34.652859|2025-05-07T07:05:39.171305800, timestamp=null), recordMetadata=forex_topic-0@22]
2025-05-07 07:05:39.241 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.110956|34.988734|2025-05-07T07:05:38.919031700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.110956|34.988734|2025-05-07T07:05:38.919031700, timestamp=null), recordMetadata=forex_topic-0@23]
2025-05-07 07:05:40.026 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:40.037 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.150475|35.218821|2025-05-07T07:05:40.008188100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.150475|35.218821|2025-05-07T07:05:40.008188100, timestamp=null), recordMetadata=forex_topic-0@24]
2025-05-07 07:05:40.107 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.186175|34.935840|2025-05-07T07:05:40.008188100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.186175|34.935840|2025-05-07T07:05:40.008188100, timestamp=null), recordMetadata=forex_topic-0@25]
2025-05-07 07:05:41.155 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:41.234 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.241452|34.934136|2025-05-07T07:05:41.117886300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.241452|34.934136|2025-05-07T07:05:41.117886300, timestamp=null), recordMetadata=forex_topic-0@26]
2025-05-07 07:05:41.285 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.231664|34.793497|2025-05-07T07:05:41.117886300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.231664|34.793497|2025-05-07T07:05:41.117886300, timestamp=null), recordMetadata=forex_topic-0@27]
2025-05-07 07:05:42.352 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:42.361 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.216337|34.757427|2025-05-07T07:05:42.298876400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.216337|34.757427|2025-05-07T07:05:42.298876400, timestamp=null), recordMetadata=forex_topic-0@28]
2025-05-07 07:05:42.402 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.219106|34.705143|2025-05-07T07:05:42.298876400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.219106|34.705143|2025-05-07T07:05:42.298876400, timestamp=null), recordMetadata=forex_topic-0@29]
2025-05-07 07:05:43.422 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:43.427 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.782655|35.115271|2025-05-07T07:05:43.404474700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.782655|35.115271|2025-05-07T07:05:43.404474700, timestamp=null), recordMetadata=forex_topic-0@30]
2025-05-07 07:05:43.463 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.002265|34.884065|2025-05-07T07:05:43.404474700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.002265|34.884065|2025-05-07T07:05:43.404474700, timestamp=null), recordMetadata=forex_topic-0@31]
2025-05-07 07:05:44.507 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:44.516 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.839608|34.894567|2025-05-07T07:05:44.471735900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.839608|34.894567|2025-05-07T07:05:44.471735900, timestamp=null), recordMetadata=forex_topic-0@32]
2025-05-07 07:05:44.614 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.030742|34.773713|2025-05-07T07:05:44.471735900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.030742|34.773713|2025-05-07T07:05:44.471735900, timestamp=null), recordMetadata=forex_topic-0@33]
2025-05-07 07:05:45.632 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:45.640 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.226815|35.026572|2025-05-07T07:05:45.616305700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.226815|35.026572|2025-05-07T07:05:45.616305700, timestamp=null), recordMetadata=forex_topic-0@34]
2025-05-07 07:05:45.661 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.224345|34.839716|2025-05-07T07:05:45.616305700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.224345|34.839716|2025-05-07T07:05:45.616305700, timestamp=null), recordMetadata=forex_topic-0@35]
2025-05-07 07:05:46.677 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:46.682 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.810029|34.701347|2025-05-07T07:05:46.660921 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.810029|34.701347|2025-05-07T07:05:46.660921, timestamp=null), recordMetadata=forex_topic-0@36]
2025-05-07 07:05:46.702 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.015952|34.677103|2025-05-07T07:05:46.660921 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.015952|34.677103|2025-05-07T07:05:46.660921, timestamp=null), recordMetadata=forex_topic-0@37]
2025-05-07 07:05:47.720 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:47.725 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.128540|35.118609|2025-05-07T07:05:47.703820900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.128540|35.118609|2025-05-07T07:05:47.703820900, timestamp=null), recordMetadata=forex_topic-0@38]
2025-05-07 07:05:47.745 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.175208|34.885734|2025-05-07T07:05:47.703820900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.175208|34.885734|2025-05-07T07:05:47.703820900, timestamp=null), recordMetadata=forex_topic-0@39]
2025-05-07 07:05:48.762 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:48.767 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.231846|35.044543|2025-05-07T07:05:48.745206900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.231846|35.044543|2025-05-07T07:05:48.745206900, timestamp=null), recordMetadata=forex_topic-0@40]
2025-05-07 07:05:48.785 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.226860|34.848701|2025-05-07T07:05:48.745206900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.226860|34.848701|2025-05-07T07:05:48.745206900, timestamp=null), recordMetadata=forex_topic-0@41]
2025-05-07 07:05:49.807 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:49.812 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.971855|35.000785|2025-05-07T07:05:49.790461900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.971855|35.000785|2025-05-07T07:05:49.790461900, timestamp=null), recordMetadata=forex_topic-0@42]
2025-05-07 07:05:49.834 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.096865|34.826822|2025-05-07T07:05:49.790461900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.096865|34.826822|2025-05-07T07:05:49.790461900, timestamp=null), recordMetadata=forex_topic-0@43]
2025-05-07 07:05:50.850 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:50.856 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.753952|34.753768|2025-05-07T07:05:50.832904500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.753952|34.753768|2025-05-07T07:05:50.832904500, timestamp=null), recordMetadata=forex_topic-0@44]
2025-05-07 07:05:50.883 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.987914|34.703313|2025-05-07T07:05:50.832904500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.987914|34.703313|2025-05-07T07:05:50.832904500, timestamp=null), recordMetadata=forex_topic-0@45]
2025-05-07 07:05:51.907 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:51.912 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.158803|34.690275|2025-05-07T07:05:51.889752400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.158803|34.690275|2025-05-07T07:05:51.889752400, timestamp=null), recordMetadata=forex_topic-0@46]
2025-05-07 07:05:51.932 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.190339|34.671567|2025-05-07T07:05:51.889752400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.190339|34.671567|2025-05-07T07:05:51.889752400, timestamp=null), recordMetadata=forex_topic-0@47]
2025-05-07 07:05:52.960 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:52.965 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.700709|34.722564|2025-05-07T07:05:52.943667 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.700709|34.722564|2025-05-07T07:05:52.943667, timestamp=null), recordMetadata=forex_topic-0@48]
2025-05-07 07:05:52.986 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.961292|34.687711|2025-05-07T07:05:52.943667 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.961292|34.687711|2025-05-07T07:05:52.943667, timestamp=null), recordMetadata=forex_topic-0@49]
2025-05-07 07:05:54.009 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:54.017 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.071906|34.875963|2025-05-07T07:05:53.992080800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.071906|34.875963|2025-05-07T07:05:53.992080800, timestamp=null), recordMetadata=forex_topic-0@50]
2025-05-07 07:05:54.041 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.146891|34.764411|2025-05-07T07:05:53.992080800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.146891|34.764411|2025-05-07T07:05:53.992080800, timestamp=null), recordMetadata=forex_topic-0@51]
2025-05-07 07:05:55.066 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:55.072 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.020605|35.109449|2025-05-07T07:05:55.048907900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.020605|35.109449|2025-05-07T07:05:55.048907900, timestamp=null), recordMetadata=forex_topic-0@52]
2025-05-07 07:05:55.096 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.121240|34.881154|2025-05-07T07:05:55.048907900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.121240|34.881154|2025-05-07T07:05:55.048907900, timestamp=null), recordMetadata=forex_topic-0@53]
2025-05-07 07:05:56.126 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:56.131 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.239399|35.139546|2025-05-07T07:05:56.107390 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.239399|35.139546|2025-05-07T07:05:56.107390, timestamp=null), recordMetadata=forex_topic-0@54]
2025-05-07 07:05:56.156 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.230637|34.896203|2025-05-07T07:05:56.107390 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.230637|34.896203|2025-05-07T07:05:56.107390, timestamp=null), recordMetadata=forex_topic-0@55]
2025-05-07 07:05:57.172 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:57.177 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.736196|34.687682|2025-05-07T07:05:57.155354200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.736196|34.687682|2025-05-07T07:05:57.155354200, timestamp=null), recordMetadata=forex_topic-0@56]
2025-05-07 07:05:57.199 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.979036|34.670271|2025-05-07T07:05:57.155354200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.979036|34.670271|2025-05-07T07:05:57.155354200, timestamp=null), recordMetadata=forex_topic-0@57]
2025-05-07 07:05:58.228 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:58.232 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.049016|35.207104|2025-05-07T07:05:58.210834400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.049016|35.207104|2025-05-07T07:05:58.210834400, timestamp=null), recordMetadata=forex_topic-0@58]
2025-05-07 07:05:58.255 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.135445|34.929982|2025-05-07T07:05:58.210834400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.135445|34.929982|2025-05-07T07:05:58.210834400, timestamp=null), recordMetadata=forex_topic-0@59]
2025-05-07 07:05:59.284 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:05:59.290 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.736329|34.847075|2025-05-07T07:05:59.267496500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.736329|34.847075|2025-05-07T07:05:59.267496500, timestamp=null), recordMetadata=forex_topic-0@60]
2025-05-07 07:05:59.309 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.979102|34.749967|2025-05-07T07:05:59.267496500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.979102|34.749967|2025-05-07T07:05:59.267496500, timestamp=null), recordMetadata=forex_topic-0@61]
2025-05-07 07:06:00.329 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:00.334 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.244343|35.057490|2025-05-07T07:06:00.312967500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.244343|35.057490|2025-05-07T07:06:00.312967500, timestamp=null), recordMetadata=forex_topic-0@62]
2025-05-07 07:06:00.354 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.233109|34.855175|2025-05-07T07:06:00.312967500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.233109|34.855175|2025-05-07T07:06:00.312967500, timestamp=null), recordMetadata=forex_topic-0@63]
2025-05-07 07:06:01.370 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:01.376 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.940403|34.777670|2025-05-07T07:06:01.353543200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.940403|34.777670|2025-05-07T07:06:01.353543200, timestamp=null), recordMetadata=forex_topic-0@64]
2025-05-07 07:06:01.400 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.081139|34.715265|2025-05-07T07:06:01.353543200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.081139|34.715265|2025-05-07T07:06:01.353543200, timestamp=null), recordMetadata=forex_topic-0@65]
2025-05-07 07:06:02.429 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:02.436 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.037094|35.188766|2025-05-07T07:06:02.412175500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.037094|35.188766|2025-05-07T07:06:02.412175500, timestamp=null), recordMetadata=forex_topic-0@66]
2025-05-07 07:06:02.463 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.129485|34.920813|2025-05-07T07:06:02.412175500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.129485|34.920813|2025-05-07T07:06:02.412175500, timestamp=null), recordMetadata=forex_topic-0@67]
2025-05-07 07:06:03.486 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:03.493 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.684509|34.963424|2025-05-07T07:06:03.469044300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.684509|34.963424|2025-05-07T07:06:03.469044300, timestamp=null), recordMetadata=forex_topic-0@68]
2025-05-07 07:06:03.517 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.953192|34.808142|2025-05-07T07:06:03.469044300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.953192|34.808142|2025-05-07T07:06:03.469044300, timestamp=null), recordMetadata=forex_topic-0@69]
2025-05-07 07:06:04.542 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:04.623 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.919391|34.740723|2025-05-07T07:06:04.525733800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.919391|34.740723|2025-05-07T07:06:04.525733800, timestamp=null), recordMetadata=forex_topic-0@70]
2025-05-07 07:06:04.681 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.070633|34.696791|2025-05-07T07:06:04.525733800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.070633|34.696791|2025-05-07T07:06:04.525733800, timestamp=null), recordMetadata=forex_topic-0@71]
2025-05-07 07:06:05.668 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:05.672 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.990530|34.784255|2025-05-07T07:06:05.650218800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.990530|34.784255|2025-05-07T07:06:05.650218800, timestamp=null), recordMetadata=forex_topic-0@72]
2025-05-07 07:06:05.694 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.106203|34.718557|2025-05-07T07:06:05.650218800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.106203|34.718557|2025-05-07T07:06:05.650218800, timestamp=null), recordMetadata=forex_topic-0@73]
2025-05-07 07:06:06.712 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:06.716 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.201988|34.890143|2025-05-07T07:06:06.695095600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.201988|34.890143|2025-05-07T07:06:06.695095600, timestamp=null), recordMetadata=forex_topic-0@74]
2025-05-07 07:06:06.736 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.211932|34.771501|2025-05-07T07:06:06.695095600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.211932|34.771501|2025-05-07T07:06:06.695095600, timestamp=null), recordMetadata=forex_topic-0@75]
2025-05-07 07:06:07.764 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:07.768 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.781861|35.066916|2025-05-07T07:06:07.748424200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.781861|35.066916|2025-05-07T07:06:07.748424200, timestamp=null), recordMetadata=forex_topic-0@76]
2025-05-07 07:06:07.786 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.001868|34.859888|2025-05-07T07:06:07.748424200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.001868|34.859888|2025-05-07T07:06:07.748424200, timestamp=null), recordMetadata=forex_topic-0@77]
2025-05-07 07:06:08.810 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:08.818 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.137604|35.276003|2025-05-07T07:06:08.792208600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.137604|35.276003|2025-05-07T07:06:08.792208600, timestamp=null), recordMetadata=forex_topic-0@78]
2025-05-07 07:06:08.864 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.179739|34.964431|2025-05-07T07:06:08.792208600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.179739|34.964431|2025-05-07T07:06:08.792208600, timestamp=null), recordMetadata=forex_topic-0@79]
2025-05-07 07:06:09.887 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:09.897 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.263177|34.939093|2025-05-07T07:06:09.871216600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.263177|34.939093|2025-05-07T07:06:09.871216600, timestamp=null), recordMetadata=forex_topic-0@80]
2025-05-07 07:06:09.921 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.242526|34.795976|2025-05-07T07:06:09.871216600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.242526|34.795976|2025-05-07T07:06:09.871216600, timestamp=null), recordMetadata=forex_topic-0@81]
2025-05-07 07:06:10.947 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:10.995 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.172879|34.974233|2025-05-07T07:06:10.930958100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.172879|34.974233|2025-05-07T07:06:10.930958100, timestamp=null), recordMetadata=forex_topic-0@82]
2025-05-07 07:06:11.020 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.197377|34.813546|2025-05-07T07:06:10.930958100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.197377|34.813546|2025-05-07T07:06:10.930958100, timestamp=null), recordMetadata=forex_topic-0@83]
2025-05-07 07:06:12.041 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:12.049 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.306715|35.327007|2025-05-07T07:06:12.022925700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.306715|35.327007|2025-05-07T07:06:12.022925700, timestamp=null), recordMetadata=forex_topic-0@84]
2025-05-07 07:06:12.083 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.264295|34.989933|2025-05-07T07:06:12.022925700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.264295|34.989933|2025-05-07T07:06:12.022925700, timestamp=null), recordMetadata=forex_topic-0@85]
2025-05-07 07:06:13.110 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:13.117 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.928190|34.825892|2025-05-07T07:06:13.095190900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.928190|34.825892|2025-05-07T07:06:13.095190900, timestamp=null), recordMetadata=forex_topic-0@86]
2025-05-07 07:06:13.143 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.075032|34.739376|2025-05-07T07:06:13.095190900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.075032|34.739376|2025-05-07T07:06:13.095190900, timestamp=null), recordMetadata=forex_topic-0@87]
2025-05-07 07:06:14.176 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:14.183 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.783841|35.094460|2025-05-07T07:06:14.156142200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.783841|35.094460|2025-05-07T07:06:14.156142200, timestamp=null), recordMetadata=forex_topic-0@88]
2025-05-07 07:06:14.216 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.002858|34.873660|2025-05-07T07:06:14.156142200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.002858|34.873660|2025-05-07T07:06:14.156142200, timestamp=null), recordMetadata=forex_topic-0@89]
2025-05-07 07:06:15.233 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:15.237 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.251427|35.128807|2025-05-07T07:06:15.216474200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.251427|35.128807|2025-05-07T07:06:15.216474200, timestamp=null), recordMetadata=forex_topic-0@90]
2025-05-07 07:06:15.275 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.236651|34.890833|2025-05-07T07:06:15.216474200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.236651|34.890833|2025-05-07T07:06:15.216474200, timestamp=null), recordMetadata=forex_topic-0@91]
2025-05-07 07:06:16.293 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:16.342 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.188197|35.150921|2025-05-07T07:06:16.276267500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.188197|35.150921|2025-05-07T07:06:16.276267500, timestamp=null), recordMetadata=forex_topic-0@92]
2025-05-07 07:06:16.374 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.205036|34.901890|2025-05-07T07:06:16.276267500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.205036|34.901890|2025-05-07T07:06:16.276267500, timestamp=null), recordMetadata=forex_topic-0@93]
2025-05-07 07:06:17.391 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:17.395 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.970041|35.330721|2025-05-07T07:06:17.374190700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.970041|35.330721|2025-05-07T07:06:17.374190700, timestamp=null), recordMetadata=forex_topic-0@94]
2025-05-07 07:06:17.412 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.095958|34.991790|2025-05-07T07:06:17.374190700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.095958|34.991790|2025-05-07T07:06:17.374190700, timestamp=null), recordMetadata=forex_topic-0@95]
2025-05-07 07:06:18.435 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:18.440 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.855513|34.657646|2025-05-07T07:06:18.419399200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.855513|34.657646|2025-05-07T07:06:18.419399200, timestamp=null), recordMetadata=forex_topic-0@96]
2025-05-07 07:06:18.457 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.038694|34.655253|2025-05-07T07:06:18.419399200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.038694|34.655253|2025-05-07T07:06:18.419399200, timestamp=null), recordMetadata=forex_topic-0@97]
2025-05-07 07:06:19.478 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:19.484 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.215048|34.711924|2025-05-07T07:06:19.461741400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.215048|34.711924|2025-05-07T07:06:19.461741400, timestamp=null), recordMetadata=forex_topic-0@98]
2025-05-07 07:06:19.496 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.218461|34.682392|2025-05-07T07:06:19.461741400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.218461|34.682392|2025-05-07T07:06:19.461741400, timestamp=null), recordMetadata=forex_topic-0@99]
2025-05-07 07:06:20.517 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:20.522 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.115224|34.934212|2025-05-07T07:06:20.500748300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.115224|34.934212|2025-05-07T07:06:20.500748300, timestamp=null), recordMetadata=forex_topic-0@100]
2025-05-07 07:06:20.535 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.168549|34.793536|2025-05-07T07:06:20.500748300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.168549|34.793536|2025-05-07T07:06:20.500748300, timestamp=null), recordMetadata=forex_topic-0@101]
2025-05-07 07:06:21.558 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:21.563 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.291363|35.217092|2025-05-07T07:06:21.541906 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.291363|35.217092|2025-05-07T07:06:21.541906, timestamp=null), recordMetadata=forex_topic-0@102]
2025-05-07 07:06:21.581 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.256619|34.934975|2025-05-07T07:06:21.541906 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.256619|34.934975|2025-05-07T07:06:21.541906, timestamp=null), recordMetadata=forex_topic-0@103]
2025-05-07 07:06:22.602 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:22.606 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.130291|34.813047|2025-05-07T07:06:22.585596900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.130291|34.813047|2025-05-07T07:06:22.585596900, timestamp=null), recordMetadata=forex_topic-0@104]
2025-05-07 07:06:22.624 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.176083|34.732953|2025-05-07T07:06:22.585596900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.176083|34.732953|2025-05-07T07:06:22.585596900, timestamp=null), recordMetadata=forex_topic-0@105]
2025-05-07 07:06:23.649 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:23.653 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.860749|35.089730|2025-05-07T07:06:23.631603200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.860749|35.089730|2025-05-07T07:06:23.631603200, timestamp=null), recordMetadata=forex_topic-0@106]
2025-05-07 07:06:23.668 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.041312|34.871295|2025-05-07T07:06:23.631603200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.041312|34.871295|2025-05-07T07:06:23.631603200, timestamp=null), recordMetadata=forex_topic-0@107]
2025-05-07 07:06:24.694 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:24.698 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.034204|34.806620|2025-05-07T07:06:24.677591100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.034204|34.806620|2025-05-07T07:06:24.677591100, timestamp=null), recordMetadata=forex_topic-0@108]
2025-05-07 07:06:24.713 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.128040|34.729740|2025-05-07T07:06:24.677591100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.128040|34.729740|2025-05-07T07:06:24.677591100, timestamp=null), recordMetadata=forex_topic-0@109]
2025-05-07 07:06:25.735 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:25.740 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.806811|34.978148|2025-05-07T07:06:25.717786500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.806811|34.978148|2025-05-07T07:06:25.717786500, timestamp=null), recordMetadata=forex_topic-0@110]
2025-05-07 07:06:25.758 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.014343|34.815504|2025-05-07T07:06:25.717786500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.014343|34.815504|2025-05-07T07:06:25.717786500, timestamp=null), recordMetadata=forex_topic-0@111]
2025-05-07 07:06:26.776 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:26.781 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.897898|34.940922|2025-05-07T07:06:26.760334400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.897898|34.940922|2025-05-07T07:06:26.760334400, timestamp=null), recordMetadata=forex_topic-0@112]
2025-05-07 07:06:26.795 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.059887|34.796890|2025-05-07T07:06:26.760334400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.059887|34.796890|2025-05-07T07:06:26.760334400, timestamp=null), recordMetadata=forex_topic-0@113]
2025-05-07 07:06:27.822 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:27.826 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.165914|34.919262|2025-05-07T07:06:27.805614800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.165914|34.919262|2025-05-07T07:06:27.805614800, timestamp=null), recordMetadata=forex_topic-0@114]
2025-05-07 07:06:27.851 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.193895|34.786061|2025-05-07T07:06:27.805614800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.193895|34.786061|2025-05-07T07:06:27.805614800, timestamp=null), recordMetadata=forex_topic-0@115]
2025-05-07 07:06:28.880 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:28.885 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.814363|34.969727|2025-05-07T07:06:28.863706500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.814363|34.969727|2025-05-07T07:06:28.863706500, timestamp=null), recordMetadata=forex_topic-0@116]
2025-05-07 07:06:28.900 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.018119|34.811293|2025-05-07T07:06:28.863706500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.018119|34.811293|2025-05-07T07:06:28.863706500, timestamp=null), recordMetadata=forex_topic-0@117]
2025-05-07 07:06:29.929 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:29.937 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.053529|35.065854|2025-05-07T07:06:29.911982700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.053529|35.065854|2025-05-07T07:06:29.911982700, timestamp=null), recordMetadata=forex_topic-0@118]
2025-05-07 07:06:29.951 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.137702|34.859357|2025-05-07T07:06:29.911982700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.137702|34.859357|2025-05-07T07:06:29.911982700, timestamp=null), recordMetadata=forex_topic-0@119]
2025-05-07 07:06:30.974 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:30.979 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.855040|34.916807|2025-05-07T07:06:30.957256400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.855040|34.916807|2025-05-07T07:06:30.957256400, timestamp=null), recordMetadata=forex_topic-0@120]
2025-05-07 07:06:30.997 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.038457|34.784833|2025-05-07T07:06:30.957256400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.038457|34.784833|2025-05-07T07:06:30.957256400, timestamp=null), recordMetadata=forex_topic-0@121]
2025-05-07 07:06:32.014 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:32.021 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.032453|35.004007|2025-05-07T07:06:31.997721100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.032453|35.004007|2025-05-07T07:06:31.997721100, timestamp=null), recordMetadata=forex_topic-0@122]
2025-05-07 07:06:32.035 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.127164|34.828433|2025-05-07T07:06:31.997721100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.127164|34.828433|2025-05-07T07:06:31.997721100, timestamp=null), recordMetadata=forex_topic-0@123]
2025-05-07 07:06:33.063 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:33.067 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.789592|34.697887|2025-05-07T07:06:33.046998100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.789592|34.697887|2025-05-07T07:06:33.046998100, timestamp=null), recordMetadata=forex_topic-0@124]
2025-05-07 07:06:33.082 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.005734|34.675373|2025-05-07T07:06:33.046998100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.005734|34.675373|2025-05-07T07:06:33.046998100, timestamp=null), recordMetadata=forex_topic-0@125]
2025-05-07 07:06:34.107 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:34.115 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.017508|35.110515|2025-05-07T07:06:34.090095500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.017508|35.110515|2025-05-07T07:06:34.090095500, timestamp=null), recordMetadata=forex_topic-0@126]
2025-05-07 07:06:34.134 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.119692|34.881687|2025-05-07T07:06:34.090095500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.119692|34.881687|2025-05-07T07:06:34.090095500, timestamp=null), recordMetadata=forex_topic-0@127]
2025-05-07 07:06:35.152 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:35.157 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.789476|34.850583|2025-05-07T07:06:35.135815300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.789476|34.850583|2025-05-07T07:06:35.135815300, timestamp=null), recordMetadata=forex_topic-0@128]
2025-05-07 07:06:35.174 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.005675|34.751721|2025-05-07T07:06:35.135815300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.005675|34.751721|2025-05-07T07:06:35.135815300, timestamp=null), recordMetadata=forex_topic-0@129]
2025-05-07 07:06:36.198 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:06:36.205 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.070719|35.224940|2025-05-07T07:06:36.181756900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.070719|35.224940|2025-05-07T07:06:36.181756900, timestamp=null), recordMetadata=forex_topic-0@130]
2025-05-07 07:06:36.219 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.146297|34.938900|2025-05-07T07:06:36.181756900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.146297|34.938900|2025-05-07T07:06:36.181756900, timestamp=null), recordMetadata=forex_topic-0@131]
2025-05-07 07:08:14.046 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-07 07:08:15.103 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 07:08:15.105 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-07 07:08:15.128 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
2025-05-07 07:08:15.146 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-07 07:08:15.147 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-07 07:08:15.155 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-07 07:08:15.720 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-07 07:08:15.734 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-07 07:08:15.736 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-07 07:08:15.737 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-07 07:08:15.780 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-07 07:08:15.782 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1409 ms
2025-05-07 07:08:16.063 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-07 07:08:16.108 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-07 07:08:16.136 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-07 07:08:16.363 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-07 07:08:16.420 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-07 07:08:16.677 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-07 07:08:16.683 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-07 07:08:17.013 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-07 07:08:17.015 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-07 07:08:17.015 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-07 07:08:17.016 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-07 07:08:17.016 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-07 07:08:17.016 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-07 07:08:17.016 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-07 07:08:17.016 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-07 07:08:17.533 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-07 07:08:17.553 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-07 07:09:32.124 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-07 07:09:32.124 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-07 07:09:32.126 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-07 07:09:32.214 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:32.764 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.994958|35.163170|2025-05-07T07:09:32.046045300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.994958|35.163170|2025-05-07T07:09:32.046045300, timestamp=null), recordMetadata=forex_topic-0@0]
2025-05-07 07:09:33.772 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:33.780 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.762633|35.129856|2025-05-07T07:09:33.755221800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.762633|35.129856|2025-05-07T07:09:33.755221800, timestamp=null), recordMetadata=forex_topic-0@1]
2025-05-07 07:09:34.802 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:34.807 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.792383|35.015894|2025-05-07T07:09:34.785760500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.792383|35.015894|2025-05-07T07:09:34.785760500, timestamp=null), recordMetadata=forex_topic-0@2]
2025-05-07 07:09:35.828 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:35.833 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.000826|35.200439|2025-05-07T07:09:35.811855100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.000826|35.200439|2025-05-07T07:09:35.811855100, timestamp=null), recordMetadata=forex_topic-0@3]
2025-05-07 07:09:36.117 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:09:36.122 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.883309|35.122632|2025-05-07T07:09:36.065582700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.883309|35.122632|2025-05-07T07:09:36.065582700, timestamp=null), recordMetadata=forex_topic-0@4]
2025-05-07 07:09:36.601 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.942067|35.161536|2025-05-07T07:09:35.811855100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.942067|35.161536|2025-05-07T07:09:35.811855100, timestamp=null), recordMetadata=forex_topic-0@5]
2025-05-07 07:09:36.852 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:36.857 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.869350|35.282027|2025-05-07T07:09:36.834966800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.869350|35.282027|2025-05-07T07:09:36.834966800, timestamp=null), recordMetadata=forex_topic-0@6]
2025-05-07 07:09:36.879 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.876329|35.202330|2025-05-07T07:09:36.834966800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.876329|35.202330|2025-05-07T07:09:36.834966800, timestamp=null), recordMetadata=forex_topic-0@7]
2025-05-07 07:09:37.177 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:09:37.182 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.932350|34.713624|2025-05-07T07:09:37.163133100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.932350|34.713624|2025-05-07T07:09:37.163133100, timestamp=null), recordMetadata=forex_topic-0@8]
2025-05-07 07:09:37.203 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.900850|34.997825|2025-05-07T07:09:36.834966800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.900850|34.997825|2025-05-07T07:09:36.834966800, timestamp=null), recordMetadata=forex_topic-0@9]
2025-05-07 07:09:37.858 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:09:37.865 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.875669|34.986315|2025-05-07T07:09:37.844868600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.875669|34.986315|2025-05-07T07:09:37.844868600, timestamp=null), recordMetadata=forex_topic-0@10]
2025-05-07 07:09:37.883 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.872509|35.134171|2025-05-07T07:09:36.834966800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.872509|35.134171|2025-05-07T07:09:36.834966800, timestamp=null), recordMetadata=forex_topic-0@11]
2025-05-07 07:09:37.905 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:37.909 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.092120|34.915289|2025-05-07T07:09:37.887724100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.092120|34.915289|2025-05-07T07:09:37.887724100, timestamp=null), recordMetadata=forex_topic-0@12]
2025-05-07 07:09:37.932 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.983895|34.950802|2025-05-07T07:09:37.887724100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.983895|34.950802|2025-05-07T07:09:37.887724100, timestamp=null), recordMetadata=forex_topic-0@13]
2025-05-07 07:09:38.530 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:09:38.535 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.108033|34.992200|2025-05-07T07:09:38.515655300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.108033|34.992200|2025-05-07T07:09:38.515655300, timestamp=null), recordMetadata=forex_topic-0@14]
2025-05-07 07:09:38.557 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.100077|34.953744|2025-05-07T07:09:37.887724100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.100077|34.953744|2025-05-07T07:09:37.887724100, timestamp=null), recordMetadata=forex_topic-0@15]
2025-05-07 07:09:38.948 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:38.954 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.099881|35.261065|2025-05-07T07:09:38.931114300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.099881|35.261065|2025-05-07T07:09:38.931114300, timestamp=null), recordMetadata=forex_topic-0@16]
2025-05-07 07:09:38.976 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.103957|35.126632|2025-05-07T07:09:38.931114300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.103957|35.126632|2025-05-07T07:09:38.931114300, timestamp=null), recordMetadata=forex_topic-0@17]
2025-05-07 07:09:39.150 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:09:39.154 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.137050|35.042645|2025-05-07T07:09:39.135905300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.137050|35.042645|2025-05-07T07:09:39.135905300, timestamp=null), recordMetadata=forex_topic-0@18]
2025-05-07 07:09:39.170 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.118466|35.151855|2025-05-07T07:09:38.931114300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.118466|35.151855|2025-05-07T07:09:38.931114300, timestamp=null), recordMetadata=forex_topic-0@19]
2025-05-07 07:09:40.006 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:40.011 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.719230|34.816377|2025-05-07T07:09:39.989727700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.719230|34.816377|2025-05-07T07:09:39.989727700, timestamp=null), recordMetadata=forex_topic-0@20]
2025-05-07 07:09:40.031 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.928140|34.929511|2025-05-07T07:09:39.989727700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.928140|34.929511|2025-05-07T07:09:39.989727700, timestamp=null), recordMetadata=forex_topic-0@21]
2025-05-07 07:09:41.053 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:41.057 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.957888|34.898453|2025-05-07T07:09:41.036089800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.957888|34.898453|2025-05-07T07:09:41.036089800, timestamp=null), recordMetadata=forex_topic-0@22]
2025-05-07 07:09:41.075 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.047469|34.970549|2025-05-07T07:09:41.036089800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.047469|34.970549|2025-05-07T07:09:41.036089800, timestamp=null), recordMetadata=forex_topic-0@23]
2025-05-07 07:09:42.100 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:42.119 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.811922|34.712563|2025-05-07T07:09:42.081429800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.811922|34.712563|2025-05-07T07:09:42.081429800, timestamp=null), recordMetadata=forex_topic-0@24]
2025-05-07 07:09:42.143 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.974486|34.877604|2025-05-07T07:09:42.081429800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.974486|34.877604|2025-05-07T07:09:42.081429800, timestamp=null), recordMetadata=forex_topic-0@25]
2025-05-07 07:09:43.170 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:43.175 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.202689|35.080706|2025-05-07T07:09:43.153002900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.202689|35.080706|2025-05-07T07:09:43.153002900, timestamp=null), recordMetadata=forex_topic-0@26]
2025-05-07 07:09:43.195 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.169870|35.061675|2025-05-07T07:09:43.153002900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.169870|35.061675|2025-05-07T07:09:43.153002900, timestamp=null), recordMetadata=forex_topic-0@27]
2025-05-07 07:09:44.212 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:44.217 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.662169|34.814013|2025-05-07T07:09:44.195769 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.662169|34.814013|2025-05-07T07:09:44.195769, timestamp=null), recordMetadata=forex_topic-0@28]
2025-05-07 07:09:44.236 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.899610|34.928329|2025-05-07T07:09:44.195769 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.899610|34.928329|2025-05-07T07:09:44.195769, timestamp=null), recordMetadata=forex_topic-0@29]
2025-05-07 07:09:45.258 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:45.263 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.218283|34.841923|2025-05-07T07:09:45.242104400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.218283|34.841923|2025-05-07T07:09:45.242104400, timestamp=null), recordMetadata=forex_topic-0@30]
2025-05-07 07:09:45.279 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.177666|34.942284|2025-05-07T07:09:45.242104400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.177666|34.942284|2025-05-07T07:09:45.242104400, timestamp=null), recordMetadata=forex_topic-0@31]
2025-05-07 07:09:46.298 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:46.303 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.310767|35.204422|2025-05-07T07:09:46.282416 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.310767|35.204422|2025-05-07T07:09:46.282416, timestamp=null), recordMetadata=forex_topic-0@32]
2025-05-07 07:09:46.323 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.223908|35.123533|2025-05-07T07:09:46.282416 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.223908|35.123533|2025-05-07T07:09:46.282416, timestamp=null), recordMetadata=forex_topic-0@33]
2025-05-07 07:09:47.345 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:47.361 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.967442|34.857537|2025-05-07T07:09:47.329254700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.967442|34.857537|2025-05-07T07:09:47.329254700, timestamp=null), recordMetadata=forex_topic-0@34]
2025-05-07 07:09:47.378 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.052246|34.950091|2025-05-07T07:09:47.329254700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.052246|34.950091|2025-05-07T07:09:47.329254700, timestamp=null), recordMetadata=forex_topic-0@35]
2025-05-07 07:09:48.407 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:48.413 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.065393|34.747556|2025-05-07T07:09:48.391412100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.065393|34.747556|2025-05-07T07:09:48.391412100, timestamp=null), recordMetadata=forex_topic-0@36]
2025-05-07 07:09:48.429 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.101222|34.895100|2025-05-07T07:09:48.391412100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.101222|34.895100|2025-05-07T07:09:48.391412100, timestamp=null), recordMetadata=forex_topic-0@37]
2025-05-07 07:09:49.461 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:49.465 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.137319|34.885444|2025-05-07T07:09:49.443894800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.137319|34.885444|2025-05-07T07:09:49.443894800, timestamp=null), recordMetadata=forex_topic-0@38]
2025-05-07 07:09:49.486 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.137185|34.964045|2025-05-07T07:09:49.443894800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.137185|34.964045|2025-05-07T07:09:49.443894800, timestamp=null), recordMetadata=forex_topic-0@39]
2025-05-07 07:09:50.505 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:50.509 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.066374|34.982315|2025-05-07T07:09:50.488801300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.066374|34.982315|2025-05-07T07:09:50.488801300, timestamp=null), recordMetadata=forex_topic-0@40]
2025-05-07 07:09:50.526 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.101712|35.012480|2025-05-07T07:09:50.488801300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.101712|35.012480|2025-05-07T07:09:50.488801300, timestamp=null), recordMetadata=forex_topic-0@41]
2025-05-07 07:09:51.550 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:51.555 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.280201|35.220780|2025-05-07T07:09:51.533060500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.280201|35.220780|2025-05-07T07:09:51.533060500, timestamp=null), recordMetadata=forex_topic-0@42]
2025-05-07 07:09:51.575 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.208625|35.131712|2025-05-07T07:09:51.533060500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.208625|35.131712|2025-05-07T07:09:51.533060500, timestamp=null), recordMetadata=forex_topic-0@43]
2025-05-07 07:09:52.592 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:52.597 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.023944|34.890142|2025-05-07T07:09:52.575691900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.023944|34.890142|2025-05-07T07:09:52.575691900, timestamp=null), recordMetadata=forex_topic-0@44]
2025-05-07 07:09:52.611 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.080497|34.966394|2025-05-07T07:09:52.575691900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.080497|34.966394|2025-05-07T07:09:52.575691900, timestamp=null), recordMetadata=forex_topic-0@45]
2025-05-07 07:09:53.637 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:53.642 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.151192|34.758654|2025-05-07T07:09:53.621274700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.151192|34.758654|2025-05-07T07:09:53.621274700, timestamp=null), recordMetadata=forex_topic-0@46]
2025-05-07 07:09:53.658 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.144121|34.900650|2025-05-07T07:09:53.621274700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.144121|34.900650|2025-05-07T07:09:53.621274700, timestamp=null), recordMetadata=forex_topic-0@47]
2025-05-07 07:09:54.684 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:54.688 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.089603|34.920055|2025-05-07T07:09:54.667947800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.089603|34.920055|2025-05-07T07:09:54.667947800, timestamp=null), recordMetadata=forex_topic-0@48]
2025-05-07 07:09:54.704 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.113327|34.981350|2025-05-07T07:09:54.667947800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.113327|34.981350|2025-05-07T07:09:54.667947800, timestamp=null), recordMetadata=forex_topic-0@49]
2025-05-07 07:09:55.731 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:55.736 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.734035|35.109063|2025-05-07T07:09:55.713564 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.734035|35.109063|2025-05-07T07:09:55.713564, timestamp=null), recordMetadata=forex_topic-0@50]
2025-05-07 07:09:55.751 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.935543|35.075854|2025-05-07T07:09:55.713564 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.935543|35.075854|2025-05-07T07:09:55.713564, timestamp=null), recordMetadata=forex_topic-0@51]
2025-05-07 07:09:56.769 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:56.774 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.334193|35.029898|2025-05-07T07:09:56.753176200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.334193|35.029898|2025-05-07T07:09:56.753176200, timestamp=null), recordMetadata=forex_topic-0@52]
2025-05-07 07:09:56.790 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.235621|35.036271|2025-05-07T07:09:56.753176200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.235621|35.036271|2025-05-07T07:09:56.753176200, timestamp=null), recordMetadata=forex_topic-0@53]
2025-05-07 07:09:57.809 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:57.814 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.906933|35.079953|2025-05-07T07:09:57.793161400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.906933|35.079953|2025-05-07T07:09:57.793161400, timestamp=null), recordMetadata=forex_topic-0@54]
2025-05-07 07:09:57.830 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.021992|35.061299|2025-05-07T07:09:57.793161400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.021992|35.061299|2025-05-07T07:09:57.793161400, timestamp=null), recordMetadata=forex_topic-0@55]
2025-05-07 07:09:58.851 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:58.855 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.686606|34.947665|2025-05-07T07:09:58.834250800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.686606|34.947665|2025-05-07T07:09:58.834250800, timestamp=null), recordMetadata=forex_topic-0@56]
2025-05-07 07:09:58.872 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.911828|34.995155|2025-05-07T07:09:58.834250800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.911828|34.995155|2025-05-07T07:09:58.834250800, timestamp=null), recordMetadata=forex_topic-0@57]
2025-05-07 07:09:59.893 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:09:59.898 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.772150|34.938093|2025-05-07T07:09:59.876736400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.772150|34.938093|2025-05-07T07:09:59.876736400, timestamp=null), recordMetadata=forex_topic-0@58]
2025-05-07 07:09:59.916 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.954600|34.990369|2025-05-07T07:09:59.876736400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.954600|34.990369|2025-05-07T07:09:59.876736400, timestamp=null), recordMetadata=forex_topic-0@59]
2025-05-07 07:10:00.939 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:00.947 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.959593|35.073806|2025-05-07T07:10:00.922242800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.959593|35.073806|2025-05-07T07:10:00.922242800, timestamp=null), recordMetadata=forex_topic-0@60]
2025-05-07 07:10:00.974 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.048321|35.058225|2025-05-07T07:10:00.922242800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.048321|35.058225|2025-05-07T07:10:00.922242800, timestamp=null), recordMetadata=forex_topic-0@61]
2025-05-07 07:10:01.999 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:02.010 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.316341|34.972909|2025-05-07T07:10:01.981200300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.316341|34.972909|2025-05-07T07:10:01.981200300, timestamp=null), recordMetadata=forex_topic-0@62]
2025-05-07 07:10:02.058 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.226696|35.007777|2025-05-07T07:10:01.981200300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.226696|35.007777|2025-05-07T07:10:01.981200300, timestamp=null), recordMetadata=forex_topic-0@63]
2025-05-07 07:10:02.137 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:02.143 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052251|1.061880|2025-05-07T07:10:02.125123800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052251|1.061880|2025-05-07T07:10:02.125123800, timestamp=null), recordMetadata=forex_topic-0@64]
2025-05-07 07:10:02.170 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.226696|35.007777|2025-05-07T07:10:01.981200300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.226696|35.007777|2025-05-07T07:10:01.981200300, timestamp=null), recordMetadata=forex_topic-0@65]
2025-05-07 07:10:03.076 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:03.087 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.162968|34.725853|2025-05-07T07:10:03.058430500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.162968|34.725853|2025-05-07T07:10:03.058430500, timestamp=null), recordMetadata=forex_topic-0@66]
2025-05-07 07:10:03.123 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.150009|34.884249|2025-05-07T07:10:03.058430500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.150009|34.884249|2025-05-07T07:10:03.058430500, timestamp=null), recordMetadata=forex_topic-0@67]
2025-05-07 07:10:03.199 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:03.204 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.060471|1.071708|2025-05-07T07:10:03.179840200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.060471|1.071708|2025-05-07T07:10:03.179840200, timestamp=null), recordMetadata=forex_topic-0@68]
2025-05-07 07:10:03.232 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.150009|34.884249|2025-05-07T07:10:03.058430500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.150009|34.884249|2025-05-07T07:10:03.058430500, timestamp=null), recordMetadata=forex_topic-0@69]
2025-05-07 07:10:04.138 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:04.155 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.203820|35.207170|2025-05-07T07:10:04.120775600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.203820|35.207170|2025-05-07T07:10:04.120775600, timestamp=null), recordMetadata=forex_topic-0@70]
2025-05-07 07:10:04.184 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.170435|35.124908|2025-05-07T07:10:04.120775600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.170435|35.124908|2025-05-07T07:10:04.120775600, timestamp=null), recordMetadata=forex_topic-0@71]
2025-05-07 07:10:04.264 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:04.282 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056895|1.078098|2025-05-07T07:10:04.244318200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056895|1.078098|2025-05-07T07:10:04.244318200, timestamp=null), recordMetadata=forex_topic-0@72]
2025-05-07 07:10:04.307 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.170435|35.124908|2025-05-07T07:10:04.120775600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.170435|35.124908|2025-05-07T07:10:04.120775600, timestamp=null), recordMetadata=forex_topic-0@73]
2025-05-07 07:10:05.212 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:05.221 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.173580|34.703037|2025-05-07T07:10:05.194830500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.173580|34.703037|2025-05-07T07:10:05.194830500, timestamp=null), recordMetadata=forex_topic-0@74]
2025-05-07 07:10:05.250 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.155315|34.872841|2025-05-07T07:10:05.194830500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.155315|34.872841|2025-05-07T07:10:05.194830500, timestamp=null), recordMetadata=forex_topic-0@75]
2025-05-07 07:10:05.342 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:05.356 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048975|1.073701|2025-05-07T07:10:05.320757400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048975|1.073701|2025-05-07T07:10:05.320757400, timestamp=null), recordMetadata=forex_topic-0@76]
2025-05-07 07:10:05.376 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.155315|34.872841|2025-05-07T07:10:05.194830500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.155315|34.872841|2025-05-07T07:10:05.194830500, timestamp=null), recordMetadata=forex_topic-0@77]
2025-05-07 07:10:06.272 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:06.276 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.279536|34.879118|2025-05-07T07:10:06.256386500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.279536|34.879118|2025-05-07T07:10:06.256386500, timestamp=null), recordMetadata=forex_topic-0@78]
2025-05-07 07:10:06.302 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.208293|34.960881|2025-05-07T07:10:06.256386500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.208293|34.960881|2025-05-07T07:10:06.256386500, timestamp=null), recordMetadata=forex_topic-0@79]
2025-05-07 07:10:06.399 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:06.405 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053440|1.069006|2025-05-07T07:10:06.381582 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053440|1.069006|2025-05-07T07:10:06.381582, timestamp=null), recordMetadata=forex_topic-0@80]
2025-05-07 07:10:06.420 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.208293|34.960881|2025-05-07T07:10:06.256386500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.208293|34.960881|2025-05-07T07:10:06.256386500, timestamp=null), recordMetadata=forex_topic-0@81]
2025-05-07 07:10:07.319 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:07.323 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.897954|34.911470|2025-05-07T07:10:07.302282700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.897954|34.911470|2025-05-07T07:10:07.302282700, timestamp=null), recordMetadata=forex_topic-0@82]
2025-05-07 07:10:07.337 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017502|34.977058|2025-05-07T07:10:07.302282700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017502|34.977058|2025-05-07T07:10:07.302282700, timestamp=null), recordMetadata=forex_topic-0@83]
2025-05-07 07:10:07.443 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:07.446 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.047617|1.064848|2025-05-07T07:10:07.425843800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.047617|1.064848|2025-05-07T07:10:07.425843800, timestamp=null), recordMetadata=forex_topic-0@84]
2025-05-07 07:10:07.464 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017502|34.977058|2025-05-07T07:10:07.302282700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017502|34.977058|2025-05-07T07:10:07.302282700, timestamp=null), recordMetadata=forex_topic-0@85]
2025-05-07 07:10:08.363 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:08.367 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.139288|35.022487|2025-05-07T07:10:08.347919100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.139288|35.022487|2025-05-07T07:10:08.347919100, timestamp=null), recordMetadata=forex_topic-0@86]
2025-05-07 07:10:08.383 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.138169|35.032566|2025-05-07T07:10:08.347919100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.138169|35.032566|2025-05-07T07:10:08.347919100, timestamp=null), recordMetadata=forex_topic-0@87]
2025-05-07 07:10:08.488 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:08.492 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.054418|1.076994|2025-05-07T07:10:08.471022200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.054418|1.076994|2025-05-07T07:10:08.471022200, timestamp=null), recordMetadata=forex_topic-0@88]
2025-05-07 07:10:08.510 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.138169|35.032566|2025-05-07T07:10:08.347919100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.138169|35.032566|2025-05-07T07:10:08.347919100, timestamp=null), recordMetadata=forex_topic-0@89]
2025-05-07 07:10:09.407 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:09.412 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.766325|34.668254|2025-05-07T07:10:09.390893100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.766325|34.668254|2025-05-07T07:10:09.390893100, timestamp=null), recordMetadata=forex_topic-0@90]
2025-05-07 07:10:09.427 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.951688|34.855449|2025-05-07T07:10:09.390893100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.951688|34.855449|2025-05-07T07:10:09.390893100, timestamp=null), recordMetadata=forex_topic-0@91]
2025-05-07 07:10:09.532 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:09.538 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041425|1.064386|2025-05-07T07:10:09.515023700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041425|1.064386|2025-05-07T07:10:09.515023700, timestamp=null), recordMetadata=forex_topic-0@92]
2025-05-07 07:10:09.552 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.951688|34.855449|2025-05-07T07:10:09.390893100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.951688|34.855449|2025-05-07T07:10:09.390893100, timestamp=null), recordMetadata=forex_topic-0@93]
2025-05-07 07:10:10.447 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:10.452 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.002515|34.714203|2025-05-07T07:10:10.430080 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.002515|34.714203|2025-05-07T07:10:10.430080, timestamp=null), recordMetadata=forex_topic-0@94]
2025-05-07 07:10:10.467 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.069782|34.878424|2025-05-07T07:10:10.430080 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.069782|34.878424|2025-05-07T07:10:10.430080, timestamp=null), recordMetadata=forex_topic-0@95]
2025-05-07 07:10:10.571 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:10.579 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051145|1.079262|2025-05-07T07:10:10.553969800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051145|1.079262|2025-05-07T07:10:10.553969800, timestamp=null), recordMetadata=forex_topic-0@96]
2025-05-07 07:10:10.592 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.069782|34.878424|2025-05-07T07:10:10.430080 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.069782|34.878424|2025-05-07T07:10:10.430080, timestamp=null), recordMetadata=forex_topic-0@97]
2025-05-07 07:10:11.494 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:11.499 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.832165|35.048347|2025-05-07T07:10:11.476126400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.832165|35.048347|2025-05-07T07:10:11.476126400, timestamp=null), recordMetadata=forex_topic-0@98]
2025-05-07 07:10:11.514 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.984608|35.045496|2025-05-07T07:10:11.476126400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.984608|35.045496|2025-05-07T07:10:11.476126400, timestamp=null), recordMetadata=forex_topic-0@99]
2025-05-07 07:10:11.616 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:11.622 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.042092|1.065786|2025-05-07T07:10:11.599923 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.042092|1.065786|2025-05-07T07:10:11.599923, timestamp=null), recordMetadata=forex_topic-0@100]
2025-05-07 07:10:11.636 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.984608|35.045496|2025-05-07T07:10:11.476126400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.984608|35.045496|2025-05-07T07:10:11.476126400, timestamp=null), recordMetadata=forex_topic-0@101]
2025-05-07 07:10:12.535 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:12.539 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.029829|34.815661|2025-05-07T07:10:12.518879800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.029829|34.815661|2025-05-07T07:10:12.518879800, timestamp=null), recordMetadata=forex_topic-0@102]
2025-05-07 07:10:12.554 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.083439|34.929153|2025-05-07T07:10:12.518879800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.083439|34.929153|2025-05-07T07:10:12.518879800, timestamp=null), recordMetadata=forex_topic-0@103]
2025-05-07 07:10:12.659 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:12.666 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.046829|1.079193|2025-05-07T07:10:12.642917500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.046829|1.079193|2025-05-07T07:10:12.642917500, timestamp=null), recordMetadata=forex_topic-0@104]
2025-05-07 07:10:12.681 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.083439|34.929153|2025-05-07T07:10:12.518879800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.083439|34.929153|2025-05-07T07:10:12.518879800, timestamp=null), recordMetadata=forex_topic-0@105]
2025-05-07 07:10:13.577 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:13.584 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.923137|35.113342|2025-05-07T07:10:13.560160800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.923137|35.113342|2025-05-07T07:10:13.560160800, timestamp=null), recordMetadata=forex_topic-0@106]
2025-05-07 07:10:13.615 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.030094|35.077993|2025-05-07T07:10:13.560160800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.030094|35.077993|2025-05-07T07:10:13.560160800, timestamp=null), recordMetadata=forex_topic-0@107]
2025-05-07 07:10:13.700 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:13.705 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.054459|1.079614|2025-05-07T07:10:13.684501500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.054459|1.079614|2025-05-07T07:10:13.684501500, timestamp=null), recordMetadata=forex_topic-0@108]
2025-05-07 07:10:13.720 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.030094|35.077993|2025-05-07T07:10:13.560160800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.030094|35.077993|2025-05-07T07:10:13.560160800, timestamp=null), recordMetadata=forex_topic-0@109]
2025-05-07 07:10:14.641 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:14.645 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.751493|35.264675|2025-05-07T07:10:14.624913 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.751493|35.264675|2025-05-07T07:10:14.624913, timestamp=null), recordMetadata=forex_topic-0@110]
2025-05-07 07:10:14.660 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.944272|35.153660|2025-05-07T07:10:14.624913 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.944272|35.153660|2025-05-07T07:10:14.624913, timestamp=null), recordMetadata=forex_topic-0@111]
2025-05-07 07:10:14.752 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:14.755 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.058358|1.079650|2025-05-07T07:10:14.734574900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.058358|1.079650|2025-05-07T07:10:14.734574900, timestamp=null), recordMetadata=forex_topic-0@112]
2025-05-07 07:10:14.769 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.944272|35.153660|2025-05-07T07:10:14.624913 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.944272|35.153660|2025-05-07T07:10:14.624913, timestamp=null), recordMetadata=forex_topic-0@113]
2025-05-07 07:10:15.683 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:15.689 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.872445|35.189163|2025-05-07T07:10:15.666301700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.872445|35.189163|2025-05-07T07:10:15.666301700, timestamp=null), recordMetadata=forex_topic-0@114]
2025-05-07 07:10:15.706 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.004748|35.115904|2025-05-07T07:10:15.666301700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.004748|35.115904|2025-05-07T07:10:15.666301700, timestamp=null), recordMetadata=forex_topic-0@115]
2025-05-07 07:10:15.792 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:15.802 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048149|1.065051|2025-05-07T07:10:15.775909900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048149|1.065051|2025-05-07T07:10:15.775909900, timestamp=null), recordMetadata=forex_topic-0@116]
2025-05-07 07:10:15.819 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.004748|35.115904|2025-05-07T07:10:15.666301700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.004748|35.115904|2025-05-07T07:10:15.666301700, timestamp=null), recordMetadata=forex_topic-0@117]
2025-05-07 07:10:16.726 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:16.731 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.308244|35.108350|2025-05-07T07:10:16.710592900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.308244|35.108350|2025-05-07T07:10:16.710592900, timestamp=null), recordMetadata=forex_topic-0@118]
2025-05-07 07:10:16.758 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.222647|35.075497|2025-05-07T07:10:16.710592900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.222647|35.075497|2025-05-07T07:10:16.710592900, timestamp=null), recordMetadata=forex_topic-0@119]
2025-05-07 07:10:16.835 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:16.840 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.055973|1.070718|2025-05-07T07:10:16.819069300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.055973|1.070718|2025-05-07T07:10:16.819069300, timestamp=null), recordMetadata=forex_topic-0@120]
2025-05-07 07:10:16.855 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.222647|35.075497|2025-05-07T07:10:16.710592900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.222647|35.075497|2025-05-07T07:10:16.710592900, timestamp=null), recordMetadata=forex_topic-0@121]
2025-05-07 07:10:17.772 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:17.777 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.896979|34.770408|2025-05-07T07:10:17.754932200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.896979|34.770408|2025-05-07T07:10:17.754932200, timestamp=null), recordMetadata=forex_topic-0@122]
2025-05-07 07:10:17.797 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017015|34.906526|2025-05-07T07:10:17.754932200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017015|34.906526|2025-05-07T07:10:17.754932200, timestamp=null), recordMetadata=forex_topic-0@123]
2025-05-07 07:10:17.881 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:17.887 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053172|1.077855|2025-05-07T07:10:17.864962200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053172|1.077855|2025-05-07T07:10:17.864962200, timestamp=null), recordMetadata=forex_topic-0@124]
2025-05-07 07:10:17.932 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017015|34.906526|2025-05-07T07:10:17.754932200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017015|34.906526|2025-05-07T07:10:17.754932200, timestamp=null), recordMetadata=forex_topic-0@125]
2025-05-07 07:10:18.816 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:18.820 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.135866|34.842093|2025-05-07T07:10:18.798655100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.135866|34.842093|2025-05-07T07:10:18.798655100, timestamp=null), recordMetadata=forex_topic-0@126]
2025-05-07 07:10:18.839 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.136458|34.942369|2025-05-07T07:10:18.798655100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.136458|34.942369|2025-05-07T07:10:18.798655100, timestamp=null), recordMetadata=forex_topic-0@127]
2025-05-07 07:10:18.922 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:18.927 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.046349|1.062710|2025-05-07T07:10:18.906860800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.046349|1.062710|2025-05-07T07:10:18.906860800, timestamp=null), recordMetadata=forex_topic-0@128]
2025-05-07 07:10:18.939 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.136458|34.942369|2025-05-07T07:10:18.798655100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.136458|34.942369|2025-05-07T07:10:18.798655100, timestamp=null), recordMetadata=forex_topic-0@129]
2025-05-07 07:10:19.856 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:19.864 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.998673|35.204088|2025-05-07T07:10:19.839690500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.998673|35.204088|2025-05-07T07:10:19.839690500, timestamp=null), recordMetadata=forex_topic-0@130]
2025-05-07 07:10:19.895 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.067862|35.123367|2025-05-07T07:10:19.839690500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.067862|35.123367|2025-05-07T07:10:19.839690500, timestamp=null), recordMetadata=forex_topic-0@131]
2025-05-07 07:10:19.965 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:19.977 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041651|1.069072|2025-05-07T07:10:19.948799300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041651|1.069072|2025-05-07T07:10:19.948799300, timestamp=null), recordMetadata=forex_topic-0@132]
2025-05-07 07:10:19.988 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.067862|35.123367|2025-05-07T07:10:19.839690500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.067862|35.123367|2025-05-07T07:10:19.839690500, timestamp=null), recordMetadata=forex_topic-0@133]
2025-05-07 07:10:20.914 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:20.919 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.054926|35.195005|2025-05-07T07:10:20.898664700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.054926|35.195005|2025-05-07T07:10:20.898664700, timestamp=null), recordMetadata=forex_topic-0@134]
2025-05-07 07:10:20.932 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.095988|35.118825|2025-05-07T07:10:20.898664700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.095988|35.118825|2025-05-07T07:10:20.898664700, timestamp=null), recordMetadata=forex_topic-0@135]
2025-05-07 07:10:21.009 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:21.012 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.047794|1.072256|2025-05-07T07:10:20.992844 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.047794|1.072256|2025-05-07T07:10:20.992844, timestamp=null), recordMetadata=forex_topic-0@136]
2025-05-07 07:10:21.026 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.095988|35.118825|2025-05-07T07:10:20.898664700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.095988|35.118825|2025-05-07T07:10:20.898664700, timestamp=null), recordMetadata=forex_topic-0@137]
2025-05-07 07:10:21.958 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:21.961 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.155466|35.080487|2025-05-07T07:10:21.942089500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.155466|35.080487|2025-05-07T07:10:21.942089500, timestamp=null), recordMetadata=forex_topic-0@138]
2025-05-07 07:10:21.976 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.146258|35.061566|2025-05-07T07:10:21.942089500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.146258|35.061566|2025-05-07T07:10:21.942089500, timestamp=null), recordMetadata=forex_topic-0@139]
2025-05-07 07:10:22.051 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:22.057 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.040005|1.079580|2025-05-07T07:10:22.034535400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.040005|1.079580|2025-05-07T07:10:22.034535400, timestamp=null), recordMetadata=forex_topic-0@140]
2025-05-07 07:10:22.073 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.146258|35.061566|2025-05-07T07:10:21.942089500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.146258|35.061566|2025-05-07T07:10:21.942089500, timestamp=null), recordMetadata=forex_topic-0@141]
2025-05-07 07:10:23.007 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:23.010 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.897070|35.076889|2025-05-07T07:10:22.990086700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.897070|35.076889|2025-05-07T07:10:22.990086700, timestamp=null), recordMetadata=forex_topic-0@142]
2025-05-07 07:10:23.027 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017060|35.059767|2025-05-07T07:10:22.990086700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017060|35.059767|2025-05-07T07:10:22.990086700, timestamp=null), recordMetadata=forex_topic-0@143]
2025-05-07 07:10:23.098 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:23.103 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.047581|1.060209|2025-05-07T07:10:23.081531800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.047581|1.060209|2025-05-07T07:10:23.081531800, timestamp=null), recordMetadata=forex_topic-0@144]
2025-05-07 07:10:23.124 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017060|35.059767|2025-05-07T07:10:22.990086700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017060|35.059767|2025-05-07T07:10:22.990086700, timestamp=null), recordMetadata=forex_topic-0@145]
2025-05-07 07:10:24.044 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:24.050 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.838289|35.133876|2025-05-07T07:10:24.028987300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.838289|35.133876|2025-05-07T07:10:24.028987300, timestamp=null), recordMetadata=forex_topic-0@146]
2025-05-07 07:10:24.064 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.987670|35.088261|2025-05-07T07:10:24.028987300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.987670|35.088261|2025-05-07T07:10:24.028987300, timestamp=null), recordMetadata=forex_topic-0@147]
2025-05-07 07:10:24.153 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:24.157 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.060220|1.061487|2025-05-07T07:10:24.137426600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.060220|1.061487|2025-05-07T07:10:24.137426600, timestamp=null), recordMetadata=forex_topic-0@148]
2025-05-07 07:10:24.171 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.987670|35.088261|2025-05-07T07:10:24.028987300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.987670|35.088261|2025-05-07T07:10:24.028987300, timestamp=null), recordMetadata=forex_topic-0@149]
2025-05-07 07:10:25.088 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:25.094 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.249295|35.077113|2025-05-07T07:10:25.070968500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.249295|35.077113|2025-05-07T07:10:25.070968500, timestamp=null), recordMetadata=forex_topic-0@150]
2025-05-07 07:10:25.109 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.193173|35.059879|2025-05-07T07:10:25.070968500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.193173|35.059879|2025-05-07T07:10:25.070968500, timestamp=null), recordMetadata=forex_topic-0@151]
2025-05-07 07:10:25.196 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:25.199 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.057616|1.060867|2025-05-07T07:10:25.180072600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.057616|1.060867|2025-05-07T07:10:25.180072600, timestamp=null), recordMetadata=forex_topic-0@152]
2025-05-07 07:10:25.213 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.193173|35.059879|2025-05-07T07:10:25.070968500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.193173|35.059879|2025-05-07T07:10:25.070968500, timestamp=null), recordMetadata=forex_topic-0@153]
2025-05-07 07:10:26.129 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:26.133 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.320469|35.330823|2025-05-07T07:10:26.113446900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.320469|35.330823|2025-05-07T07:10:26.113446900, timestamp=null), recordMetadata=forex_topic-0@154]
2025-05-07 07:10:26.151 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.228759|35.186734|2025-05-07T07:10:26.113446900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.228759|35.186734|2025-05-07T07:10:26.113446900, timestamp=null), recordMetadata=forex_topic-0@155]
2025-05-07 07:10:26.235 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:26.239 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053060|1.060737|2025-05-07T07:10:26.219845600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053060|1.060737|2025-05-07T07:10:26.219845600, timestamp=null), recordMetadata=forex_topic-0@156]
2025-05-07 07:10:26.253 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.228759|35.186734|2025-05-07T07:10:26.113446900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.228759|35.186734|2025-05-07T07:10:26.113446900, timestamp=null), recordMetadata=forex_topic-0@157]
2025-05-07 07:10:27.171 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:27.175 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.947594|34.880545|2025-05-07T07:10:27.155305900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.947594|34.880545|2025-05-07T07:10:27.155305900, timestamp=null), recordMetadata=forex_topic-0@158]
2025-05-07 07:10:27.192 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.042322|34.961595|2025-05-07T07:10:27.155305900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.042322|34.961595|2025-05-07T07:10:27.155305900, timestamp=null), recordMetadata=forex_topic-0@159]
2025-05-07 07:10:27.281 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:27.285 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053974|1.062557|2025-05-07T07:10:27.264789900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053974|1.062557|2025-05-07T07:10:27.264789900, timestamp=null), recordMetadata=forex_topic-0@160]
2025-05-07 07:10:27.298 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.042322|34.961595|2025-05-07T07:10:27.155305900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.042322|34.961595|2025-05-07T07:10:27.155305900, timestamp=null), recordMetadata=forex_topic-0@161]
2025-05-07 07:10:28.222 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:28.230 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.815970|34.998823|2025-05-07T07:10:28.204378100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.815970|34.998823|2025-05-07T07:10:28.204378100, timestamp=null), recordMetadata=forex_topic-0@162]
2025-05-07 07:10:28.243 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.976510|35.020734|2025-05-07T07:10:28.204378100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.976510|35.020734|2025-05-07T07:10:28.204378100, timestamp=null), recordMetadata=forex_topic-0@163]
2025-05-07 07:10:28.314 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:28.319 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.049341|1.066869|2025-05-07T07:10:28.298461700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.049341|1.066869|2025-05-07T07:10:28.298461700, timestamp=null), recordMetadata=forex_topic-0@164]
2025-05-07 07:10:28.331 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.976510|35.020734|2025-05-07T07:10:28.204378100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.976510|35.020734|2025-05-07T07:10:28.204378100, timestamp=null), recordMetadata=forex_topic-0@165]
2025-05-07 07:10:29.264 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:29.270 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.841389|34.840815|2025-05-07T07:10:29.248031300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.841389|34.840815|2025-05-07T07:10:29.248031300, timestamp=null), recordMetadata=forex_topic-0@166]
2025-05-07 07:10:29.284 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.989220|34.941730|2025-05-07T07:10:29.248031300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.989220|34.941730|2025-05-07T07:10:29.248031300, timestamp=null), recordMetadata=forex_topic-0@167]
2025-05-07 07:10:29.357 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:29.360 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053000|1.060978|2025-05-07T07:10:29.340914700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053000|1.060978|2025-05-07T07:10:29.340914700, timestamp=null), recordMetadata=forex_topic-0@168]
2025-05-07 07:10:29.374 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.989220|34.941730|2025-05-07T07:10:29.248031300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.989220|34.941730|2025-05-07T07:10:29.248031300, timestamp=null), recordMetadata=forex_topic-0@169]
2025-05-07 07:10:30.309 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:30.314 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.212868|35.122997|2025-05-07T07:10:30.293238100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.212868|35.122997|2025-05-07T07:10:30.293238100, timestamp=null), recordMetadata=forex_topic-0@170]
2025-05-07 07:10:30.328 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.174959|35.082821|2025-05-07T07:10:30.293238100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.174959|35.082821|2025-05-07T07:10:30.293238100, timestamp=null), recordMetadata=forex_topic-0@171]
2025-05-07 07:10:30.403 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:30.407 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051620|1.060985|2025-05-07T07:10:30.387311800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051620|1.060985|2025-05-07T07:10:30.387311800, timestamp=null), recordMetadata=forex_topic-0@172]
2025-05-07 07:10:30.422 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.174959|35.082821|2025-05-07T07:10:30.293238100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.174959|35.082821|2025-05-07T07:10:30.293238100, timestamp=null), recordMetadata=forex_topic-0@173]
2025-05-07 07:10:31.352 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:31.359 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.720152|35.326130|2025-05-07T07:10:31.336004600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.720152|35.326130|2025-05-07T07:10:31.336004600, timestamp=null), recordMetadata=forex_topic-0@174]
2025-05-07 07:10:31.371 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.928601|35.184387|2025-05-07T07:10:31.336004600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.928601|35.184387|2025-05-07T07:10:31.336004600, timestamp=null), recordMetadata=forex_topic-0@175]
2025-05-07 07:10:31.445 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:31.452 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056991|1.070049|2025-05-07T07:10:31.429284900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056991|1.070049|2025-05-07T07:10:31.429284900, timestamp=null), recordMetadata=forex_topic-0@176]
2025-05-07 07:10:31.472 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.928601|35.184387|2025-05-07T07:10:31.336004600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.928601|35.184387|2025-05-07T07:10:31.336004600, timestamp=null), recordMetadata=forex_topic-0@177]
2025-05-07 07:10:32.397 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:32.407 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.138467|35.113580|2025-05-07T07:10:32.380036700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.138467|35.113580|2025-05-07T07:10:32.380036700, timestamp=null), recordMetadata=forex_topic-0@178]
2025-05-07 07:10:32.422 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.137759|35.078112|2025-05-07T07:10:32.380036700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.137759|35.078112|2025-05-07T07:10:32.380036700, timestamp=null), recordMetadata=forex_topic-0@179]
2025-05-07 07:10:32.490 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:32.494 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041925|1.070748|2025-05-07T07:10:32.473788900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041925|1.070748|2025-05-07T07:10:32.473788900, timestamp=null), recordMetadata=forex_topic-0@180]
2025-05-07 07:10:32.514 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.137759|35.078112|2025-05-07T07:10:32.380036700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.137759|35.078112|2025-05-07T07:10:32.380036700, timestamp=null), recordMetadata=forex_topic-0@181]
2025-05-07 07:10:33.450 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:33.455 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.943618|35.327868|2025-05-07T07:10:33.434736 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.943618|35.327868|2025-05-07T07:10:33.434736, timestamp=null), recordMetadata=forex_topic-0@182]
2025-05-07 07:10:33.481 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.040334|35.185256|2025-05-07T07:10:33.434736 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.040334|35.185256|2025-05-07T07:10:33.434736, timestamp=null), recordMetadata=forex_topic-0@183]
2025-05-07 07:10:33.528 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:33.532 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048688|1.072955|2025-05-07T07:10:33.512282 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048688|1.072955|2025-05-07T07:10:33.512282, timestamp=null), recordMetadata=forex_topic-0@184]
2025-05-07 07:10:33.544 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.040334|35.185256|2025-05-07T07:10:33.434736 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.040334|35.185256|2025-05-07T07:10:33.434736, timestamp=null), recordMetadata=forex_topic-0@185]
2025-05-07 07:10:34.508 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:34.513 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.262469|34.721935|2025-05-07T07:10:34.492769500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.262469|34.721935|2025-05-07T07:10:34.492769500, timestamp=null), recordMetadata=forex_topic-0@186]
2025-05-07 07:10:34.526 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.199760|34.882290|2025-05-07T07:10:34.492769500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.199760|34.882290|2025-05-07T07:10:34.492769500, timestamp=null), recordMetadata=forex_topic-0@187]
2025-05-07 07:10:34.570 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:34.574 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056376|1.067986|2025-05-07T07:10:34.554433700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056376|1.067986|2025-05-07T07:10:34.554433700, timestamp=null), recordMetadata=forex_topic-0@188]
2025-05-07 07:10:34.586 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.199760|34.882290|2025-05-07T07:10:34.492769500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.199760|34.882290|2025-05-07T07:10:34.492769500, timestamp=null), recordMetadata=forex_topic-0@189]
2025-05-07 07:10:35.553 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:35.558 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.767009|34.797202|2025-05-07T07:10:35.537395500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.767009|34.797202|2025-05-07T07:10:35.537395500, timestamp=null), recordMetadata=forex_topic-0@190]
2025-05-07 07:10:35.573 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.952030|34.919923|2025-05-07T07:10:35.537395500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.952030|34.919923|2025-05-07T07:10:35.537395500, timestamp=null), recordMetadata=forex_topic-0@191]
2025-05-07 07:10:35.614 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:35.619 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051058|1.072640|2025-05-07T07:10:35.598776900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051058|1.072640|2025-05-07T07:10:35.598776900, timestamp=null), recordMetadata=forex_topic-0@192]
2025-05-07 07:10:35.631 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.952030|34.919923|2025-05-07T07:10:35.537395500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.952030|34.919923|2025-05-07T07:10:35.537395500, timestamp=null), recordMetadata=forex_topic-0@193]
2025-05-07 07:10:36.596 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:36.602 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.994596|35.157836|2025-05-07T07:10:36.578114600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.994596|35.157836|2025-05-07T07:10:36.578114600, timestamp=null), recordMetadata=forex_topic-0@194]
2025-05-07 07:10:36.624 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.065823|35.100241|2025-05-07T07:10:36.578114600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.065823|35.100241|2025-05-07T07:10:36.578114600, timestamp=null), recordMetadata=forex_topic-0@195]
2025-05-07 07:10:36.656 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:36.660 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051825|1.063430|2025-05-07T07:10:36.640733300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051825|1.063430|2025-05-07T07:10:36.640733300, timestamp=null), recordMetadata=forex_topic-0@196]
2025-05-07 07:10:36.675 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.065823|35.100241|2025-05-07T07:10:36.578114600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.065823|35.100241|2025-05-07T07:10:36.578114600, timestamp=null), recordMetadata=forex_topic-0@197]
2025-05-07 07:10:37.650 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:37.653 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.162663|34.849974|2025-05-07T07:10:37.633179400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.162663|34.849974|2025-05-07T07:10:37.633179400, timestamp=null), recordMetadata=forex_topic-0@198]
2025-05-07 07:10:37.671 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.149857|34.946309|2025-05-07T07:10:37.633179400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.149857|34.946309|2025-05-07T07:10:37.633179400, timestamp=null), recordMetadata=forex_topic-0@199]
2025-05-07 07:10:37.695 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:37.699 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.043125|1.063945|2025-05-07T07:10:37.678908800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.043125|1.063945|2025-05-07T07:10:37.678908800, timestamp=null), recordMetadata=forex_topic-0@200]
2025-05-07 07:10:37.714 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.149857|34.946309|2025-05-07T07:10:37.633179400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.149857|34.946309|2025-05-07T07:10:37.633179400, timestamp=null), recordMetadata=forex_topic-0@201]
2025-05-07 07:10:38.692 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:38.696 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.263074|35.035751|2025-05-07T07:10:38.676197300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.263074|35.035751|2025-05-07T07:10:38.676197300, timestamp=null), recordMetadata=forex_topic-0@202]
2025-05-07 07:10:38.714 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.200062|35.039198|2025-05-07T07:10:38.676197300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.200062|35.039198|2025-05-07T07:10:38.676197300, timestamp=null), recordMetadata=forex_topic-0@203]
2025-05-07 07:10:38.740 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:38.743 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.050863|1.073636|2025-05-07T07:10:38.722475800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.050863|1.073636|2025-05-07T07:10:38.722475800, timestamp=null), recordMetadata=forex_topic-0@204]
2025-05-07 07:10:38.762 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.200062|35.039198|2025-05-07T07:10:38.676197300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.200062|35.039198|2025-05-07T07:10:38.676197300, timestamp=null), recordMetadata=forex_topic-0@205]
2025-05-07 07:10:39.722 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:39.727 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.069470|35.055063|2025-05-07T07:10:39.720589300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.069470|35.055063|2025-05-07T07:10:39.720589300, timestamp=null), recordMetadata=forex_topic-0@206]
2025-05-07 07:10:39.739 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.103260|35.048854|2025-05-07T07:10:39.720589300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.103260|35.048854|2025-05-07T07:10:39.720589300, timestamp=null), recordMetadata=forex_topic-0@207]
2025-05-07 07:10:39.783 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:39.786 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052814|1.075937|2025-05-07T07:10:39.766555700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052814|1.075937|2025-05-07T07:10:39.766555700, timestamp=null), recordMetadata=forex_topic-0@208]
2025-05-07 07:10:39.798 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.103260|35.048854|2025-05-07T07:10:39.720589300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.103260|35.048854|2025-05-07T07:10:39.720589300, timestamp=null), recordMetadata=forex_topic-0@209]
2025-05-07 07:10:40.768 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:40.780 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.030386|35.152847|2025-05-07T07:10:40.753012200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.030386|35.152847|2025-05-07T07:10:40.753012200, timestamp=null), recordMetadata=forex_topic-0@210]
2025-05-07 07:10:40.794 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.083718|35.097746|2025-05-07T07:10:40.753012200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.083718|35.097746|2025-05-07T07:10:40.753012200, timestamp=null), recordMetadata=forex_topic-0@211]
2025-05-07 07:10:40.814 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:40.817 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048817|1.068533|2025-05-07T07:10:40.798652900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048817|1.068533|2025-05-07T07:10:40.798652900, timestamp=null), recordMetadata=forex_topic-0@212]
2025-05-07 07:10:40.830 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.083718|35.097746|2025-05-07T07:10:40.753012200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.083718|35.097746|2025-05-07T07:10:40.753012200, timestamp=null), recordMetadata=forex_topic-0@213]
2025-05-07 07:10:41.810 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:41.815 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.331545|34.896472|2025-05-07T07:10:41.794131700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.331545|34.896472|2025-05-07T07:10:41.794131700, timestamp=null), recordMetadata=forex_topic-0@214]
2025-05-07 07:10:41.832 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.234298|34.969558|2025-05-07T07:10:41.794131700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.234298|34.969558|2025-05-07T07:10:41.794131700, timestamp=null), recordMetadata=forex_topic-0@215]
2025-05-07 07:10:41.856 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:41.860 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.060067|1.074509|2025-05-07T07:10:41.839568200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.060067|1.074509|2025-05-07T07:10:41.839568200, timestamp=null), recordMetadata=forex_topic-0@216]
2025-05-07 07:10:41.872 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.234298|34.969558|2025-05-07T07:10:41.794131700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.234298|34.969558|2025-05-07T07:10:41.794131700, timestamp=null), recordMetadata=forex_topic-0@217]
2025-05-07 07:10:42.855 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:42.868 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.212702|34.776471|2025-05-07T07:10:42.838958300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.212702|34.776471|2025-05-07T07:10:42.838958300, timestamp=null), recordMetadata=forex_topic-0@218]
2025-05-07 07:10:42.883 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.174876|34.909558|2025-05-07T07:10:42.838958300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.174876|34.909558|2025-05-07T07:10:42.838958300, timestamp=null), recordMetadata=forex_topic-0@219]
2025-05-07 07:10:42.901 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:42.905 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053601|1.077560|2025-05-07T07:10:42.884625900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053601|1.077560|2025-05-07T07:10:42.884625900, timestamp=null), recordMetadata=forex_topic-0@220]
2025-05-07 07:10:42.918 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.174876|34.909558|2025-05-07T07:10:42.838958300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.174876|34.909558|2025-05-07T07:10:42.838958300, timestamp=null), recordMetadata=forex_topic-0@221]
2025-05-07 07:10:43.913 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:43.917 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.837513|34.774379|2025-05-07T07:10:43.896566400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.837513|34.774379|2025-05-07T07:10:43.896566400, timestamp=null), recordMetadata=forex_topic-0@222]
2025-05-07 07:10:43.930 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:43.932 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.987282|34.908512|2025-05-07T07:10:43.896566400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.987282|34.908512|2025-05-07T07:10:43.896566400, timestamp=null), recordMetadata=forex_topic-0@223]
2025-05-07 07:10:43.934 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041701|1.077131|2025-05-07T07:10:43.927911200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041701|1.077131|2025-05-07T07:10:43.927911200, timestamp=null), recordMetadata=forex_topic-0@224]
2025-05-07 07:10:43.947 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.987282|34.908512|2025-05-07T07:10:43.896566400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.987282|34.908512|2025-05-07T07:10:43.896566400, timestamp=null), recordMetadata=forex_topic-0@225]
2025-05-07 07:10:44.954 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:44.957 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.279382|35.193831|2025-05-07T07:10:44.937460300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.279382|35.193831|2025-05-07T07:10:44.937460300, timestamp=null), recordMetadata=forex_topic-0@226]
2025-05-07 07:10:44.971 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:44.973 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.208216|35.118238|2025-05-07T07:10:44.937460300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.208216|35.118238|2025-05-07T07:10:44.937460300, timestamp=null), recordMetadata=forex_topic-0@227]
2025-05-07 07:10:44.975 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.046527|1.059908|2025-05-07T07:10:44.952754100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.046527|1.059908|2025-05-07T07:10:44.952754100, timestamp=null), recordMetadata=forex_topic-0@228]
2025-05-07 07:10:44.988 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.208216|35.118238|2025-05-07T07:10:44.937460300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.208216|35.118238|2025-05-07T07:10:44.937460300, timestamp=null), recordMetadata=forex_topic-0@229]
2025-05-07 07:10:45.993 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:46.002 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.821839|34.885379|2025-05-07T07:10:45.976955300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.821839|34.885379|2025-05-07T07:10:45.976955300, timestamp=null), recordMetadata=forex_topic-0@230]
2025-05-07 07:10:46.008 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:46.013 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053766|1.066513|2025-05-07T07:10:45.992237800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053766|1.066513|2025-05-07T07:10:45.992237800, timestamp=null), recordMetadata=forex_topic-0@231]
2025-05-07 07:10:46.018 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.979444|34.964012|2025-05-07T07:10:45.976955300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.979444|34.964012|2025-05-07T07:10:45.976955300, timestamp=null), recordMetadata=forex_topic-0@232]
2025-05-07 07:10:46.027 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.979444|34.964012|2025-05-07T07:10:45.976955300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.979444|34.964012|2025-05-07T07:10:45.976955300, timestamp=null), recordMetadata=forex_topic-0@233]
2025-05-07 07:10:47.048 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:47.048 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:47.052 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.055527|1.068520|2025-05-07T07:10:47.031542 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.055527|1.068520|2025-05-07T07:10:47.031542, timestamp=null), recordMetadata=forex_topic-0@234]
2025-05-07 07:10:47.055 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.208739|34.998456|2025-05-07T07:10:47.031542 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.208739|34.998456|2025-05-07T07:10:47.031542, timestamp=null), recordMetadata=forex_topic-0@235]
2025-05-07 07:10:47.068 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.172895|35.020550|2025-05-07T07:10:47.031542 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.172895|35.020550|2025-05-07T07:10:47.031542, timestamp=null), recordMetadata=forex_topic-0@236]
2025-05-07 07:10:47.068 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.172895|35.020550|2025-05-07T07:10:47.031542 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.172895|35.020550|2025-05-07T07:10:47.031542, timestamp=null), recordMetadata=forex_topic-0@237]
2025-05-07 07:10:48.093 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:48.093 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:48.096 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.671096|34.860868|2025-05-07T07:10:48.077254300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.671096|34.860868|2025-05-07T07:10:48.077254300, timestamp=null), recordMetadata=forex_topic-0@238]
2025-05-07 07:10:48.096 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.044428|1.062229|2025-05-07T07:10:48.077254300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.044428|1.062229|2025-05-07T07:10:48.077254300, timestamp=null), recordMetadata=forex_topic-0@239]
2025-05-07 07:10:48.113 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.904073|34.951756|2025-05-07T07:10:48.077254300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.904073|34.951756|2025-05-07T07:10:48.077254300, timestamp=null), recordMetadata=forex_topic-0@240]
2025-05-07 07:10:48.113 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.904073|34.951756|2025-05-07T07:10:48.077254300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.904073|34.951756|2025-05-07T07:10:48.077254300, timestamp=null), recordMetadata=forex_topic-0@241]
2025-05-07 07:10:49.138 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:49.138 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:49.142 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.040828|1.077277|2025-05-07T07:10:49.121432 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.040828|1.077277|2025-05-07T07:10:49.121432, timestamp=null), recordMetadata=forex_topic-0@242]
2025-05-07 07:10:49.143 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.008106|34.988224|2025-05-07T07:10:49.121432 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.008106|34.988224|2025-05-07T07:10:49.121432, timestamp=null), recordMetadata=forex_topic-0@243]
2025-05-07 07:10:49.159 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.072578|35.015434|2025-05-07T07:10:49.121432 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.072578|35.015434|2025-05-07T07:10:49.121432, timestamp=null), recordMetadata=forex_topic-0@244]
2025-05-07 07:10:49.160 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.072578|35.015434|2025-05-07T07:10:49.121432 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.072578|35.015434|2025-05-07T07:10:49.121432, timestamp=null), recordMetadata=forex_topic-0@245]
2025-05-07 07:10:50.179 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:50.179 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:50.183 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056672|1.076353|2025-05-07T07:10:50.163880500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056672|1.076353|2025-05-07T07:10:50.163880500, timestamp=null), recordMetadata=forex_topic-0@246]
2025-05-07 07:10:50.185 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.846004|35.308009|2025-05-07T07:10:50.163880500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.846004|35.308009|2025-05-07T07:10:50.163880500, timestamp=null), recordMetadata=forex_topic-0@247]
2025-05-07 07:10:50.198 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.991527|35.175327|2025-05-07T07:10:50.163880500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.991527|35.175327|2025-05-07T07:10:50.163880500, timestamp=null), recordMetadata=forex_topic-0@248]
2025-05-07 07:10:50.198 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.991527|35.175327|2025-05-07T07:10:50.163880500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.991527|35.175327|2025-05-07T07:10:50.163880500, timestamp=null), recordMetadata=forex_topic-0@249]
2025-05-07 07:10:51.222 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:51.222 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:51.227 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056475|1.069639|2025-05-07T07:10:51.203967700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056475|1.069639|2025-05-07T07:10:51.203967700, timestamp=null), recordMetadata=forex_topic-0@250]
2025-05-07 07:10:51.227 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.073776|35.306356|2025-05-07T07:10:51.203967700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.073776|35.306356|2025-05-07T07:10:51.203967700, timestamp=null), recordMetadata=forex_topic-0@251]
2025-05-07 07:10:51.241 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.105413|35.174500|2025-05-07T07:10:51.203967700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.105413|35.174500|2025-05-07T07:10:51.203967700, timestamp=null), recordMetadata=forex_topic-0@252]
2025-05-07 07:10:51.242 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.105413|35.174500|2025-05-07T07:10:51.203967700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.105413|35.174500|2025-05-07T07:10:51.203967700, timestamp=null), recordMetadata=forex_topic-0@253]
2025-05-07 07:10:52.266 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:52.266 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:52.273 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.044456|1.059923|2025-05-07T07:10:52.248701700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.044456|1.059923|2025-05-07T07:10:52.248701700, timestamp=null), recordMetadata=forex_topic-0@254]
2025-05-07 07:10:52.277 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.982572|35.155061|2025-05-07T07:10:52.248535600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.982572|35.155061|2025-05-07T07:10:52.248535600, timestamp=null), recordMetadata=forex_topic-0@255]
2025-05-07 07:10:52.297 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.059811|35.098853|2025-05-07T07:10:52.248535600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.059811|35.098853|2025-05-07T07:10:52.248535600, timestamp=null), recordMetadata=forex_topic-0@256]
2025-05-07 07:10:52.298 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.059811|35.098853|2025-05-07T07:10:52.248535600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.059811|35.098853|2025-05-07T07:10:52.248535600, timestamp=null), recordMetadata=forex_topic-0@257]
2025-05-07 07:10:53.322 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:53.322 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:53.327 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.682003|35.342169|2025-05-07T07:10:53.305250200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.682003|35.342169|2025-05-07T07:10:53.305250200, timestamp=null), recordMetadata=forex_topic-0@258]
2025-05-07 07:10:53.328 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.044338|1.068465|2025-05-07T07:10:53.305250200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.044338|1.068465|2025-05-07T07:10:53.305250200, timestamp=null), recordMetadata=forex_topic-0@259]
2025-05-07 07:10:53.359 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.909526|35.192407|2025-05-07T07:10:53.305250200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.909526|35.192407|2025-05-07T07:10:53.305250200, timestamp=null), recordMetadata=forex_topic-0@260]
2025-05-07 07:10:53.360 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.909526|35.192407|2025-05-07T07:10:53.305250200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.909526|35.192407|2025-05-07T07:10:53.305250200, timestamp=null), recordMetadata=forex_topic-0@261]
2025-05-07 07:10:54.373 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:54.373 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:54.379 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053710|1.067422|2025-05-07T07:10:54.358569500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053710|1.067422|2025-05-07T07:10:54.358569500, timestamp=null), recordMetadata=forex_topic-0@262]
2025-05-07 07:10:54.380 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.295984|34.791444|2025-05-07T07:10:54.358569500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.295984|34.791444|2025-05-07T07:10:54.358569500, timestamp=null), recordMetadata=forex_topic-0@263]
2025-05-07 07:10:54.394 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.216517|34.917044|2025-05-07T07:10:54.358569500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.216517|34.917044|2025-05-07T07:10:54.358569500, timestamp=null), recordMetadata=forex_topic-0@264]
2025-05-07 07:10:54.395 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.216517|34.917044|2025-05-07T07:10:54.358569500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.216517|34.917044|2025-05-07T07:10:54.358569500, timestamp=null), recordMetadata=forex_topic-0@265]
2025-05-07 07:10:55.417 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:55.417 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:55.425 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.327008|35.049324|2025-05-07T07:10:55.400263100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.327008|35.049324|2025-05-07T07:10:55.400263100, timestamp=null), recordMetadata=forex_topic-0@266]
2025-05-07 07:10:55.426 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048405|1.075442|2025-05-07T07:10:55.400263100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048405|1.075442|2025-05-07T07:10:55.400263100, timestamp=null), recordMetadata=forex_topic-0@267]
2025-05-07 07:10:55.437 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.232029|35.045984|2025-05-07T07:10:55.400263100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.232029|35.045984|2025-05-07T07:10:55.400263100, timestamp=null), recordMetadata=forex_topic-0@268]
2025-05-07 07:10:55.437 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.232029|35.045984|2025-05-07T07:10:55.400263100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.232029|35.045984|2025-05-07T07:10:55.400263100, timestamp=null), recordMetadata=forex_topic-0@269]
2025-05-07 07:10:56.462 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:56.462 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:56.467 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.043111|1.060523|2025-05-07T07:10:56.445460300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.043111|1.060523|2025-05-07T07:10:56.445460300, timestamp=null), recordMetadata=forex_topic-0@270]
2025-05-07 07:10:56.468 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.701873|34.710152|2025-05-07T07:10:56.445460300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.701873|34.710152|2025-05-07T07:10:56.445460300, timestamp=null), recordMetadata=forex_topic-0@271]
2025-05-07 07:10:56.483 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.919461|34.876398|2025-05-07T07:10:56.445460300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.919461|34.876398|2025-05-07T07:10:56.445460300, timestamp=null), recordMetadata=forex_topic-0@272]
2025-05-07 07:10:56.483 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.919461|34.876398|2025-05-07T07:10:56.445460300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.919461|34.876398|2025-05-07T07:10:56.445460300, timestamp=null), recordMetadata=forex_topic-0@273]
2025-05-07 07:10:57.507 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:57.507 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:57.511 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.046561|34.886226|2025-05-07T07:10:57.490816900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.046561|34.886226|2025-05-07T07:10:57.490816900, timestamp=null), recordMetadata=forex_topic-0@274]
2025-05-07 07:10:57.512 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056626|1.069957|2025-05-07T07:10:57.490816900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056626|1.069957|2025-05-07T07:10:57.490816900, timestamp=null), recordMetadata=forex_topic-0@275]
2025-05-07 07:10:57.528 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.091805|34.964435|2025-05-07T07:10:57.490816900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.091805|34.964435|2025-05-07T07:10:57.490816900, timestamp=null), recordMetadata=forex_topic-0@276]
2025-05-07 07:10:57.529 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.091805|34.964435|2025-05-07T07:10:57.490816900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.091805|34.964435|2025-05-07T07:10:57.490816900, timestamp=null), recordMetadata=forex_topic-0@277]
2025-05-07 07:10:58.547 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:58.547 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:58.549 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.054206|1.059452|2025-05-07T07:10:58.530753800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.054206|1.059452|2025-05-07T07:10:58.530753800, timestamp=null), recordMetadata=forex_topic-0@278]
2025-05-07 07:10:58.550 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.055337|34.837145|2025-05-07T07:10:58.530753800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.055337|34.837145|2025-05-07T07:10:58.530753800, timestamp=null), recordMetadata=forex_topic-0@279]
2025-05-07 07:10:58.564 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.096193|34.939895|2025-05-07T07:10:58.530753800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.096193|34.939895|2025-05-07T07:10:58.530753800, timestamp=null), recordMetadata=forex_topic-0@280]
2025-05-07 07:10:58.564 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.096193|34.939895|2025-05-07T07:10:58.530753800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.096193|34.939895|2025-05-07T07:10:58.530753800, timestamp=null), recordMetadata=forex_topic-0@281]
2025-05-07 07:10:59.589 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:10:59.589 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:10:59.592 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.060356|1.069324|2025-05-07T07:10:59.573100500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.060356|1.069324|2025-05-07T07:10:59.573100500, timestamp=null), recordMetadata=forex_topic-0@282]
2025-05-07 07:10:59.593 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.848802|34.759105|2025-05-07T07:10:59.573100500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.848802|34.759105|2025-05-07T07:10:59.573100500, timestamp=null), recordMetadata=forex_topic-0@283]
2025-05-07 07:10:59.605 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.992926|34.900875|2025-05-07T07:10:59.573100500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.992926|34.900875|2025-05-07T07:10:59.573100500, timestamp=null), recordMetadata=forex_topic-0@284]
2025-05-07 07:10:59.606 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.992926|34.900875|2025-05-07T07:10:59.573100500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.992926|34.900875|2025-05-07T07:10:59.573100500, timestamp=null), recordMetadata=forex_topic-0@285]
2025-05-07 07:11:00.638 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:00.638 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:00.645 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.054917|1.062830|2025-05-07T07:11:00.617156200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.054917|1.062830|2025-05-07T07:11:00.617156200, timestamp=null), recordMetadata=forex_topic-0@286]
2025-05-07 07:11:00.646 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.121696|34.956832|2025-05-07T07:11:00.617156200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.121696|34.956832|2025-05-07T07:11:00.617156200, timestamp=null), recordMetadata=forex_topic-0@287]
2025-05-07 07:11:00.666 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.129373|34.999738|2025-05-07T07:11:00.617156200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.129373|34.999738|2025-05-07T07:11:00.617156200, timestamp=null), recordMetadata=forex_topic-0@288]
2025-05-07 07:11:00.666 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.129373|34.999738|2025-05-07T07:11:00.617156200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.129373|34.999738|2025-05-07T07:11:00.617156200, timestamp=null), recordMetadata=forex_topic-0@289]
2025-05-07 07:11:01.695 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:01.695 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:01.698 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041710|1.067458|2025-05-07T07:11:01.678523200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041710|1.067458|2025-05-07T07:11:01.678523200, timestamp=null), recordMetadata=forex_topic-0@290]
2025-05-07 07:11:01.698 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.084649|35.173336|2025-05-07T07:11:01.678523200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.084649|35.173336|2025-05-07T07:11:01.678523200, timestamp=null), recordMetadata=forex_topic-0@291]
2025-05-07 07:11:01.710 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.110850|35.107990|2025-05-07T07:11:01.678523200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.110850|35.107990|2025-05-07T07:11:01.678523200, timestamp=null), recordMetadata=forex_topic-0@292]
2025-05-07 07:11:01.710 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.110850|35.107990|2025-05-07T07:11:01.678523200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.110850|35.107990|2025-05-07T07:11:01.678523200, timestamp=null), recordMetadata=forex_topic-0@293]
2025-05-07 07:11:02.738 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:02.738 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:02.741 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.975352|35.192853|2025-05-07T07:11:02.720977500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.975352|35.192853|2025-05-07T07:11:02.720977500, timestamp=null), recordMetadata=forex_topic-0@294]
2025-05-07 07:11:02.741 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051455|1.070034|2025-05-07T07:11:02.720977500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051455|1.070034|2025-05-07T07:11:02.720977500, timestamp=null), recordMetadata=forex_topic-0@295]
2025-05-07 07:11:02.753 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.056201|35.117749|2025-05-07T07:11:02.720977500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.056201|35.117749|2025-05-07T07:11:02.720977500, timestamp=null), recordMetadata=forex_topic-0@296]
2025-05-07 07:11:02.753 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.056201|35.117749|2025-05-07T07:11:02.720977500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.056201|35.117749|2025-05-07T07:11:02.720977500, timestamp=null), recordMetadata=forex_topic-0@297]
2025-05-07 07:11:03.779 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:03.779 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:03.782 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.253586|35.088895|2025-05-07T07:11:03.763656600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.253586|35.088895|2025-05-07T07:11:03.763656600, timestamp=null), recordMetadata=forex_topic-0@298]
2025-05-07 07:11:03.783 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.044259|1.062716|2025-05-07T07:11:03.763656600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.044259|1.062716|2025-05-07T07:11:03.763656600, timestamp=null), recordMetadata=forex_topic-0@299]
2025-05-07 07:11:03.796 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.195318|35.065770|2025-05-07T07:11:03.763656600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.195318|35.065770|2025-05-07T07:11:03.763656600, timestamp=null), recordMetadata=forex_topic-0@300]
2025-05-07 07:11:03.796 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.195318|35.065770|2025-05-07T07:11:03.763656600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.195318|35.065770|2025-05-07T07:11:03.763656600, timestamp=null), recordMetadata=forex_topic-0@301]
2025-05-07 07:11:04.822 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:04.822 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:04.826 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.912411|34.924302|2025-05-07T07:11:04.805842 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.912411|34.924302|2025-05-07T07:11:04.805842, timestamp=null), recordMetadata=forex_topic-0@302]
2025-05-07 07:11:04.828 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.055728|1.076971|2025-05-07T07:11:04.805842 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.055728|1.076971|2025-05-07T07:11:04.805842, timestamp=null), recordMetadata=forex_topic-0@303]
2025-05-07 07:11:04.848 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.024731|34.983473|2025-05-07T07:11:04.805842 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.024731|34.983473|2025-05-07T07:11:04.805842, timestamp=null), recordMetadata=forex_topic-0@304]
2025-05-07 07:11:04.848 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.024731|34.983473|2025-05-07T07:11:04.805842 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.024731|34.983473|2025-05-07T07:11:04.805842, timestamp=null), recordMetadata=forex_topic-0@305]
2025-05-07 07:11:05.372 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:11:05.377 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.202518|35.131426|2025-05-07T07:11:05.370863400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.202518|35.131426|2025-05-07T07:11:05.370863400, timestamp=null), recordMetadata=forex_topic-0@306]
2025-05-07 07:11:05.389 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.057465|35.027864|2025-05-07T07:11:04.805842 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.057465|35.027864|2025-05-07T07:11:04.805842, timestamp=null), recordMetadata=forex_topic-0@307]
2025-05-07 07:11:05.864 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:05.864 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:05.868 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056318|1.067038|2025-05-07T07:11:05.847516200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056318|1.067038|2025-05-07T07:11:05.847516200, timestamp=null), recordMetadata=forex_topic-0@308]
2025-05-07 07:11:05.869 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.703815|35.086686|2025-05-07T07:11:05.847516200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.703815|35.086686|2025-05-07T07:11:05.847516200, timestamp=null), recordMetadata=forex_topic-0@309]
2025-05-07 07:11:05.882 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.953167|35.109056|2025-05-07T07:11:05.847516200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.953167|35.109056|2025-05-07T07:11:05.847516200, timestamp=null), recordMetadata=forex_topic-0@310]
2025-05-07 07:11:05.882 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.953167|35.109056|2025-05-07T07:11:05.847516200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.953167|35.109056|2025-05-07T07:11:05.847516200, timestamp=null), recordMetadata=forex_topic-0@311]
2025-05-07 07:11:05.909 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:11:05.912 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.766835|34.677858|2025-05-07T07:11:05.892795900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.766835|34.677858|2025-05-07T07:11:05.892795900, timestamp=null), recordMetadata=forex_topic-0@312]
2025-05-07 07:11:05.924 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.735325|34.882272|2025-05-07T07:11:05.847516200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.735325|34.882272|2025-05-07T07:11:05.847516200, timestamp=null), recordMetadata=forex_topic-0@313]
2025-05-07 07:11:06.424 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:11:06.427 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.120206|34.729443|2025-05-07T07:11:06.411841500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.120206|34.729443|2025-05-07T07:11:06.411841500, timestamp=null), recordMetadata=forex_topic-0@314]
2025-05-07 07:11:06.440 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.912011|34.908064|2025-05-07T07:11:05.847516200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.912011|34.908064|2025-05-07T07:11:05.847516200, timestamp=null), recordMetadata=forex_topic-0@315]
2025-05-07 07:11:06.857 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-07 07:11:06.862 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.907276|35.102326|2025-05-07T07:11:06.843311800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.907276|35.102326|2025-05-07T07:11:06.843311800, timestamp=null), recordMetadata=forex_topic-0@316]
2025-05-07 07:11:06.883 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.805546|35.094506|2025-05-07T07:11:05.847516200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.805546|35.094506|2025-05-07T07:11:05.847516200, timestamp=null), recordMetadata=forex_topic-0@317]
2025-05-07 07:11:06.903 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:06.903 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:06.907 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.290673|35.074125|2025-05-07T07:11:06.887133500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.290673|35.074125|2025-05-07T07:11:06.887133500, timestamp=null), recordMetadata=forex_topic-0@318]
2025-05-07 07:11:06.907 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.060249|1.074154|2025-05-07T07:11:06.887133500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.060249|1.074154|2025-05-07T07:11:06.887133500, timestamp=null), recordMetadata=forex_topic-0@319]
2025-05-07 07:11:06.922 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.098975|35.088226|2025-05-07T07:11:06.887133500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.098975|35.088226|2025-05-07T07:11:06.887133500, timestamp=null), recordMetadata=forex_topic-0@320]
2025-05-07 07:11:06.922 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.098975|35.088226|2025-05-07T07:11:06.887133500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.098975|35.088226|2025-05-07T07:11:06.887133500, timestamp=null), recordMetadata=forex_topic-0@321]
2025-05-07 07:11:07.947 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:07.947 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:07.952 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.019942|35.108792|2025-05-07T07:11:07.931033500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.019942|35.108792|2025-05-07T07:11:07.931033500, timestamp=null), recordMetadata=forex_topic-0@322]
2025-05-07 07:11:07.953 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.045118|1.061977|2025-05-07T07:11:07.931033500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.045118|1.061977|2025-05-07T07:11:07.931033500, timestamp=null), recordMetadata=forex_topic-0@323]
2025-05-07 07:11:07.970 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.963609|35.105559|2025-05-07T07:11:07.931033500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.963609|35.105559|2025-05-07T07:11:07.931033500, timestamp=null), recordMetadata=forex_topic-0@324]
2025-05-07 07:11:07.972 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.963609|35.105559|2025-05-07T07:11:07.931033500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.963609|35.105559|2025-05-07T07:11:07.931033500, timestamp=null), recordMetadata=forex_topic-0@325]
2025-05-07 07:11:08.993 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:08.993 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:08.997 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041687|1.073936|2025-05-07T07:11:08.977121800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041687|1.073936|2025-05-07T07:11:08.977121800, timestamp=null), recordMetadata=forex_topic-0@326]
2025-05-07 07:11:08.998 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.276414|34.894822|2025-05-07T07:11:08.977121800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.276414|34.894822|2025-05-07T07:11:08.977121800, timestamp=null), recordMetadata=forex_topic-0@327]
2025-05-07 07:11:09.016 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.091845|34.998574|2025-05-07T07:11:08.977121800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.091845|34.998574|2025-05-07T07:11:08.977121800, timestamp=null), recordMetadata=forex_topic-0@328]
2025-05-07 07:11:09.016 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.091845|34.998574|2025-05-07T07:11:08.977121800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.091845|34.998574|2025-05-07T07:11:08.977121800, timestamp=null), recordMetadata=forex_topic-0@329]
2025-05-07 07:11:10.037 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:10.037 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:10.041 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.755105|35.327215|2025-05-07T07:11:10.020618800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.755105|35.327215|2025-05-07T07:11:10.020618800, timestamp=null), recordMetadata=forex_topic-0@330]
2025-05-07 07:11:10.041 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041808|1.064494|2025-05-07T07:11:10.020618800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041808|1.064494|2025-05-07T07:11:10.020618800, timestamp=null), recordMetadata=forex_topic-0@331]
2025-05-07 07:11:10.059 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.831190|35.214770|2025-05-07T07:11:10.020618800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.831190|35.214770|2025-05-07T07:11:10.020618800, timestamp=null), recordMetadata=forex_topic-0@332]
2025-05-07 07:11:10.059 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.831190|35.214770|2025-05-07T07:11:10.020618800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.831190|35.214770|2025-05-07T07:11:10.020618800, timestamp=null), recordMetadata=forex_topic-0@333]
2025-05-07 07:11:11.081 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:11.081 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:11.085 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051556|1.063978|2025-05-07T07:11:11.065456100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051556|1.063978|2025-05-07T07:11:11.065456100, timestamp=null), recordMetadata=forex_topic-0@334]
2025-05-07 07:11:11.086 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.809567|35.133301|2025-05-07T07:11:11.065456100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.809567|35.133301|2025-05-07T07:11:11.065456100, timestamp=null), recordMetadata=forex_topic-0@335]
2025-05-07 07:11:11.098 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.858422|35.117814|2025-05-07T07:11:11.065456100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.858422|35.117814|2025-05-07T07:11:11.065456100, timestamp=null), recordMetadata=forex_topic-0@336]
2025-05-07 07:11:11.099 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.858422|35.117814|2025-05-07T07:11:11.065456100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.858422|35.117814|2025-05-07T07:11:11.065456100, timestamp=null), recordMetadata=forex_topic-0@337]
2025-05-07 07:11:12.120 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:12.120 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:12.124 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.055473|1.061073|2025-05-07T07:11:12.104258800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.055473|1.061073|2025-05-07T07:11:12.104258800, timestamp=null), recordMetadata=forex_topic-0@338]
2025-05-07 07:11:12.129 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.821411|34.709979|2025-05-07T07:11:12.104258800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.821411|34.709979|2025-05-07T07:11:12.104258800, timestamp=null), recordMetadata=forex_topic-0@339]
2025-05-07 07:11:12.152 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.864343|34.906153|2025-05-07T07:11:12.104258800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.864343|34.906153|2025-05-07T07:11:12.104258800, timestamp=null), recordMetadata=forex_topic-0@340]
2025-05-07 07:11:12.153 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.864343|34.906153|2025-05-07T07:11:12.104258800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.864343|34.906153|2025-05-07T07:11:12.104258800, timestamp=null), recordMetadata=forex_topic-0@341]
2025-05-07 07:11:13.181 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:13.181 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:13.184 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.050820|1.060989|2025-05-07T07:11:13.163702300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.050820|1.060989|2025-05-07T07:11:13.163702300, timestamp=null), recordMetadata=forex_topic-0@342]
2025-05-07 07:11:13.186 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.208284|34.975622|2025-05-07T07:11:13.163702300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.208284|34.975622|2025-05-07T07:11:13.163702300, timestamp=null), recordMetadata=forex_topic-0@343]
2025-05-07 07:11:13.201 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.057780|35.038974|2025-05-07T07:11:13.163702300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.057780|35.038974|2025-05-07T07:11:13.163702300, timestamp=null), recordMetadata=forex_topic-0@344]
2025-05-07 07:11:13.201 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.057780|35.038974|2025-05-07T07:11:13.163702300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.057780|35.038974|2025-05-07T07:11:13.163702300, timestamp=null), recordMetadata=forex_topic-0@345]
2025-05-07 07:11:14.220 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:14.220 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:14.224 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.801664|34.907046|2025-05-07T07:11:14.204208 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.801664|34.907046|2025-05-07T07:11:14.204208, timestamp=null), recordMetadata=forex_topic-0@346]
2025-05-07 07:11:14.224 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048556|1.075469|2025-05-07T07:11:14.204208 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048556|1.075469|2025-05-07T07:11:14.204208, timestamp=null), recordMetadata=forex_topic-0@347]
2025-05-07 07:11:14.238 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.854470|35.004686|2025-05-07T07:11:14.204208 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.854470|35.004686|2025-05-07T07:11:14.204208, timestamp=null), recordMetadata=forex_topic-0@348]
2025-05-07 07:11:14.238 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.854470|35.004686|2025-05-07T07:11:14.204208 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.854470|35.004686|2025-05-07T07:11:14.204208, timestamp=null), recordMetadata=forex_topic-0@349]
2025-05-07 07:11:15.264 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:15.264 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:15.268 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.046248|1.079602|2025-05-07T07:11:15.248353700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.046248|1.079602|2025-05-07T07:11:15.248353700, timestamp=null), recordMetadata=forex_topic-0@350]
2025-05-07 07:11:15.268 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.991196|35.079199|2025-05-07T07:11:15.248353700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.991196|35.079199|2025-05-07T07:11:15.248353700, timestamp=null), recordMetadata=forex_topic-0@351]
2025-05-07 07:11:15.281 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.949236|35.090763|2025-05-07T07:11:15.248353700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.949236|35.090763|2025-05-07T07:11:15.248353700, timestamp=null), recordMetadata=forex_topic-0@352]
2025-05-07 07:11:15.281 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.949236|35.090763|2025-05-07T07:11:15.248353700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.949236|35.090763|2025-05-07T07:11:15.248353700, timestamp=null), recordMetadata=forex_topic-0@353]
2025-05-07 07:11:16.308 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:16.308 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:16.316 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.045330|1.076155|2025-05-07T07:11:16.291063400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.045330|1.076155|2025-05-07T07:11:16.291063400, timestamp=null), recordMetadata=forex_topic-0@354]
2025-05-07 07:11:16.318 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.236653|34.969807|2025-05-07T07:11:16.291063400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.236653|34.969807|2025-05-07T07:11:16.291063400, timestamp=null), recordMetadata=forex_topic-0@355]
2025-05-07 07:11:16.329 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.071965|35.036067|2025-05-07T07:11:16.291063400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.071965|35.036067|2025-05-07T07:11:16.291063400, timestamp=null), recordMetadata=forex_topic-0@356]
2025-05-07 07:11:16.331 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.071965|35.036067|2025-05-07T07:11:16.291063400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.071965|35.036067|2025-05-07T07:11:16.291063400, timestamp=null), recordMetadata=forex_topic-0@357]
2025-05-07 07:11:17.353 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:17.353 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:17.369 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052832|1.059692|2025-05-07T07:11:17.336802300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052832|1.059692|2025-05-07T07:11:17.336802300, timestamp=null), recordMetadata=forex_topic-0@358]
2025-05-07 07:11:17.369 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.066250|35.023924|2025-05-07T07:11:17.336802300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.066250|35.023924|2025-05-07T07:11:17.336802300, timestamp=null), recordMetadata=forex_topic-0@359]
2025-05-07 07:11:17.384 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.986763|35.063125|2025-05-07T07:11:17.336802300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.986763|35.063125|2025-05-07T07:11:17.336802300, timestamp=null), recordMetadata=forex_topic-0@360]
2025-05-07 07:11:17.384 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.986763|35.063125|2025-05-07T07:11:17.336802300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.986763|35.063125|2025-05-07T07:11:17.336802300, timestamp=null), recordMetadata=forex_topic-0@361]
2025-05-07 07:11:18.405 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:18.405 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:18.409 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.811475|35.102235|2025-05-07T07:11:18.388991500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.811475|35.102235|2025-05-07T07:11:18.388991500, timestamp=null), recordMetadata=forex_topic-0@362]
2025-05-07 07:11:18.410 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.043254|1.061499|2025-05-07T07:11:18.388991500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.043254|1.061499|2025-05-07T07:11:18.388991500, timestamp=null), recordMetadata=forex_topic-0@363]
2025-05-07 07:11:18.424 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.859376|35.102281|2025-05-07T07:11:18.388991500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.859376|35.102281|2025-05-07T07:11:18.388991500, timestamp=null), recordMetadata=forex_topic-0@364]
2025-05-07 07:11:18.425 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.859376|35.102281|2025-05-07T07:11:18.388991500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.859376|35.102281|2025-05-07T07:11:18.388991500, timestamp=null), recordMetadata=forex_topic-0@365]
2025-05-07 07:11:19.443 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:19.443 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:19.469 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.057773|1.074103|2025-05-07T07:11:19.426763500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.057773|1.074103|2025-05-07T07:11:19.426763500, timestamp=null), recordMetadata=forex_topic-0@366]
2025-05-07 07:11:19.469 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.281295|35.193726|2025-05-07T07:11:19.426763500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.281295|35.193726|2025-05-07T07:11:19.426763500, timestamp=null), recordMetadata=forex_topic-0@367]
2025-05-07 07:11:19.483 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.094286|35.148026|2025-05-07T07:11:19.426763500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.094286|35.148026|2025-05-07T07:11:19.426763500, timestamp=null), recordMetadata=forex_topic-0@368]
2025-05-07 07:11:19.484 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.094286|35.148026|2025-05-07T07:11:19.426763500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.094286|35.148026|2025-05-07T07:11:19.426763500, timestamp=null), recordMetadata=forex_topic-0@369]
2025-05-07 07:11:20.502 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:20.502 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:20.505 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.036623|34.815080|2025-05-07T07:11:20.486106 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.036623|34.815080|2025-05-07T07:11:20.486106, timestamp=null), recordMetadata=forex_topic-0@370]
2025-05-07 07:11:20.505 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.042051|1.071960|2025-05-07T07:11:20.486106 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.042051|1.071960|2025-05-07T07:11:20.486106, timestamp=null), recordMetadata=forex_topic-0@371]
2025-05-07 07:11:20.517 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.971950|34.958703|2025-05-07T07:11:20.486106 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.971950|34.958703|2025-05-07T07:11:20.486106, timestamp=null), recordMetadata=forex_topic-0@372]
2025-05-07 07:11:20.518 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.971950|34.958703|2025-05-07T07:11:20.486106 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.971950|34.958703|2025-05-07T07:11:20.486106, timestamp=null), recordMetadata=forex_topic-0@373]
2025-05-07 07:11:21.533 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:21.533 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:21.536 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.054878|1.067553|2025-05-07T07:11:21.517885100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.054878|1.067553|2025-05-07T07:11:21.517885100, timestamp=null), recordMetadata=forex_topic-0@374]
2025-05-07 07:11:21.537 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.668235|35.092616|2025-05-07T07:11:21.517885100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.668235|35.092616|2025-05-07T07:11:21.517885100, timestamp=null), recordMetadata=forex_topic-0@375]
2025-05-07 07:11:21.549 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.787756|35.097471|2025-05-07T07:11:21.517885100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.787756|35.097471|2025-05-07T07:11:21.517885100, timestamp=null), recordMetadata=forex_topic-0@376]
2025-05-07 07:11:21.551 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.787756|35.097471|2025-05-07T07:11:21.517885100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.787756|35.097471|2025-05-07T07:11:21.517885100, timestamp=null), recordMetadata=forex_topic-0@377]
2025-05-07 07:11:22.572 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:22.572 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:22.576 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.689767|34.858854|2025-05-07T07:11:22.556548500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.689767|34.858854|2025-05-07T07:11:22.556548500, timestamp=null), recordMetadata=forex_topic-0@378]
2025-05-07 07:11:22.577 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.040913|1.062103|2025-05-07T07:11:22.556548500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.040913|1.062103|2025-05-07T07:11:22.556548500, timestamp=null), recordMetadata=forex_topic-0@379]
2025-05-07 07:11:22.591 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.798522|34.980590|2025-05-07T07:11:22.556548500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.798522|34.980590|2025-05-07T07:11:22.556548500, timestamp=null), recordMetadata=forex_topic-0@380]
2025-05-07 07:11:22.591 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.798522|34.980590|2025-05-07T07:11:22.556548500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.798522|34.980590|2025-05-07T07:11:22.556548500, timestamp=null), recordMetadata=forex_topic-0@381]
2025-05-07 07:11:23.617 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:23.617 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:23.621 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.006042|35.019015|2025-05-07T07:11:23.599989100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.006042|35.019015|2025-05-07T07:11:23.599989100, timestamp=null), recordMetadata=forex_topic-0@382]
2025-05-07 07:11:23.621 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051414|1.065308|2025-05-07T07:11:23.599989100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051414|1.065308|2025-05-07T07:11:23.599989100, timestamp=null), recordMetadata=forex_topic-0@383]
2025-05-07 07:11:23.637 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.956659|35.060670|2025-05-07T07:11:23.599989100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.956659|35.060670|2025-05-07T07:11:23.599989100, timestamp=null), recordMetadata=forex_topic-0@384]
2025-05-07 07:11:23.637 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.956659|35.060670|2025-05-07T07:11:23.599989100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.956659|35.060670|2025-05-07T07:11:23.599989100, timestamp=null), recordMetadata=forex_topic-0@385]
2025-05-07 07:11:24.656 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:24.657 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:24.666 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.050197|1.072223|2025-05-07T07:11:24.638397600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.050197|1.072223|2025-05-07T07:11:24.638397600, timestamp=null), recordMetadata=forex_topic-0@386]
2025-05-07 07:11:24.666 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.746315|34.855530|2025-05-07T07:11:24.638397600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.746315|34.855530|2025-05-07T07:11:24.638397600, timestamp=null), recordMetadata=forex_topic-0@387]
2025-05-07 07:11:24.693 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.826796|34.978928|2025-05-07T07:11:24.638397600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.826796|34.978928|2025-05-07T07:11:24.638397600, timestamp=null), recordMetadata=forex_topic-0@388]
2025-05-07 07:11:24.693 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.826796|34.978928|2025-05-07T07:11:24.638397600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.826796|34.978928|2025-05-07T07:11:24.638397600, timestamp=null), recordMetadata=forex_topic-0@389]
2025-05-07 07:11:25.712 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:25.713 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:25.721 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041807|1.074638|2025-05-07T07:11:25.696636 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041807|1.074638|2025-05-07T07:11:25.696636, timestamp=null), recordMetadata=forex_topic-0@390]
2025-05-07 07:11:25.721 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.232550|35.105383|2025-05-07T07:11:25.696636 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.232550|35.105383|2025-05-07T07:11:25.696636, timestamp=null), recordMetadata=forex_topic-0@391]
2025-05-07 07:11:25.735 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.069913|35.103855|2025-05-07T07:11:25.696636 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.069913|35.103855|2025-05-07T07:11:25.696636, timestamp=null), recordMetadata=forex_topic-0@392]
2025-05-07 07:11:25.736 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.069913|35.103855|2025-05-07T07:11:25.696636 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.069913|35.103855|2025-05-07T07:11:25.696636, timestamp=null), recordMetadata=forex_topic-0@393]
2025-05-07 07:11:26.758 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:26.758 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:26.763 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.906774|35.058390|2025-05-07T07:11:26.742249100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.906774|35.058390|2025-05-07T07:11:26.742249100, timestamp=null), recordMetadata=forex_topic-0@394]
2025-05-07 07:11:26.763 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.057276|1.069811|2025-05-07T07:11:26.742249100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.057276|1.069811|2025-05-07T07:11:26.742249100, timestamp=null), recordMetadata=forex_topic-0@395]
2025-05-07 07:11:26.775 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.907025|35.080358|2025-05-07T07:11:26.742249100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.907025|35.080358|2025-05-07T07:11:26.742249100, timestamp=null), recordMetadata=forex_topic-0@396]
2025-05-07 07:11:26.775 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.907025|35.080358|2025-05-07T07:11:26.742249100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.907025|35.080358|2025-05-07T07:11:26.742249100, timestamp=null), recordMetadata=forex_topic-0@397]
2025-05-07 07:11:27.800 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:27.800 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:27.803 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.053636|1.060418|2025-05-07T07:11:27.782955300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.053636|1.060418|2025-05-07T07:11:27.782955300, timestamp=null), recordMetadata=forex_topic-0@398]
2025-05-07 07:11:27.803 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.972979|34.737957|2025-05-07T07:11:27.782955300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.972979|34.737957|2025-05-07T07:11:27.782955300, timestamp=null), recordMetadata=forex_topic-0@399]
2025-05-07 07:11:27.818 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.940127|34.920141|2025-05-07T07:11:27.782955300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.940127|34.920141|2025-05-07T07:11:27.782955300, timestamp=null), recordMetadata=forex_topic-0@400]
2025-05-07 07:11:27.818 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.940127|34.920141|2025-05-07T07:11:27.782955300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.940127|34.920141|2025-05-07T07:11:27.782955300, timestamp=null), recordMetadata=forex_topic-0@401]
2025-05-07 07:11:28.843 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:28.843 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:28.849 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.011722|34.912186|2025-05-07T07:11:28.826051600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.011722|34.912186|2025-05-07T07:11:28.826051600, timestamp=null), recordMetadata=forex_topic-0@402]
2025-05-07 07:11:28.851 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.043879|1.079166|2025-05-07T07:11:28.826051600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.043879|1.079166|2025-05-07T07:11:28.826051600, timestamp=null), recordMetadata=forex_topic-0@403]
2025-05-07 07:11:28.863 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.959499|35.007256|2025-05-07T07:11:28.826051600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.959499|35.007256|2025-05-07T07:11:28.826051600, timestamp=null), recordMetadata=forex_topic-0@404]
2025-05-07 07:11:28.864 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.959499|35.007256|2025-05-07T07:11:28.826051600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.959499|35.007256|2025-05-07T07:11:28.826051600, timestamp=null), recordMetadata=forex_topic-0@405]
2025-05-07 07:11:29.889 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:29.889 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:29.891 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.049321|1.077911|2025-05-07T07:11:29.870827400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.049321|1.077911|2025-05-07T07:11:29.870827400, timestamp=null), recordMetadata=forex_topic-0@406]
2025-05-07 07:11:29.892 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.262829|34.952333|2025-05-07T07:11:29.870827400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.262829|34.952333|2025-05-07T07:11:29.870827400, timestamp=null), recordMetadata=forex_topic-0@407]
2025-05-07 07:11:29.906 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.085053|35.027330|2025-05-07T07:11:29.870827400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.085053|35.027330|2025-05-07T07:11:29.870827400, timestamp=null), recordMetadata=forex_topic-0@408]
2025-05-07 07:11:29.906 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.085053|35.027330|2025-05-07T07:11:29.870827400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.085053|35.027330|2025-05-07T07:11:29.870827400, timestamp=null), recordMetadata=forex_topic-0@409]
2025-05-07 07:11:30.927 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:30.927 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:30.932 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.040085|1.071188|2025-05-07T07:11:30.911248 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.040085|1.071188|2025-05-07T07:11:30.911248, timestamp=null), recordMetadata=forex_topic-0@410]
2025-05-07 07:11:30.932 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.182087|34.950909|2025-05-07T07:11:30.911248 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.182087|34.950909|2025-05-07T07:11:30.911248, timestamp=null), recordMetadata=forex_topic-0@411]
2025-05-07 07:11:30.947 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.044681|35.026618|2025-05-07T07:11:30.911248 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.044681|35.026618|2025-05-07T07:11:30.911248, timestamp=null), recordMetadata=forex_topic-0@412]
2025-05-07 07:11:30.947 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.044681|35.026618|2025-05-07T07:11:30.911248 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.044681|35.026618|2025-05-07T07:11:30.911248, timestamp=null), recordMetadata=forex_topic-0@413]
2025-05-07 07:11:31.975 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:31.975 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:31.979 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.313498|35.339725|2025-05-07T07:11:31.957576 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.313498|35.339725|2025-05-07T07:11:31.957576, timestamp=null), recordMetadata=forex_topic-0@414]
2025-05-07 07:11:31.981 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.050155|1.073612|2025-05-07T07:11:31.957576 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.050155|1.073612|2025-05-07T07:11:31.957576, timestamp=null), recordMetadata=forex_topic-0@415]
2025-05-07 07:11:31.994 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.110387|35.221026|2025-05-07T07:11:31.957576 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.110387|35.221026|2025-05-07T07:11:31.957576, timestamp=null), recordMetadata=forex_topic-0@416]
2025-05-07 07:11:31.994 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.110387|35.221026|2025-05-07T07:11:31.957576 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.110387|35.221026|2025-05-07T07:11:31.957576, timestamp=null), recordMetadata=forex_topic-0@417]
2025-05-07 07:11:33.020 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:33.020 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:33.023 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.039876|1.063683|2025-05-07T07:11:33.004049900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.039876|1.063683|2025-05-07T07:11:33.004049900, timestamp=null), recordMetadata=forex_topic-0@418]
2025-05-07 07:11:33.024 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.249436|35.268498|2025-05-07T07:11:33.004049900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.249436|35.268498|2025-05-07T07:11:33.004049900, timestamp=null), recordMetadata=forex_topic-0@419]
2025-05-07 07:11:33.037 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.078356|35.185412|2025-05-07T07:11:33.004049900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.078356|35.185412|2025-05-07T07:11:33.004049900, timestamp=null), recordMetadata=forex_topic-0@420]
2025-05-07 07:11:33.037 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.078356|35.185412|2025-05-07T07:11:33.004049900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.078356|35.185412|2025-05-07T07:11:33.004049900, timestamp=null), recordMetadata=forex_topic-0@421]
2025-05-07 07:11:34.064 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:34.064 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:34.067 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.985214|34.857988|2025-05-07T07:11:34.047754700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.985214|34.857988|2025-05-07T07:11:34.047754700, timestamp=null), recordMetadata=forex_topic-0@422]
2025-05-07 07:11:34.068 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041234|1.069195|2025-05-07T07:11:34.047754700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041234|1.069195|2025-05-07T07:11:34.047754700, timestamp=null), recordMetadata=forex_topic-0@423]
2025-05-07 07:11:34.080 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.946245|34.980157|2025-05-07T07:11:34.047754700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.946245|34.980157|2025-05-07T07:11:34.047754700, timestamp=null), recordMetadata=forex_topic-0@424]
2025-05-07 07:11:34.080 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.946245|34.980157|2025-05-07T07:11:34.047754700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.946245|34.980157|2025-05-07T07:11:34.047754700, timestamp=null), recordMetadata=forex_topic-0@425]
2025-05-07 07:11:35.108 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:35.108 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:35.112 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.188211|35.072909|2025-05-07T07:11:35.091751300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.188211|35.072909|2025-05-07T07:11:35.091751300, timestamp=null), recordMetadata=forex_topic-0@426]
2025-05-07 07:11:35.112 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.046589|1.060992|2025-05-07T07:11:35.091751300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.046589|1.060992|2025-05-07T07:11:35.091751300, timestamp=null), recordMetadata=forex_topic-0@427]
2025-05-07 07:11:35.123 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.047744|35.087618|2025-05-07T07:11:35.091751300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.047744|35.087618|2025-05-07T07:11:35.091751300, timestamp=null), recordMetadata=forex_topic-0@428]
2025-05-07 07:11:35.123 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.047744|35.087618|2025-05-07T07:11:35.091751300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.047744|35.087618|2025-05-07T07:11:35.091751300, timestamp=null), recordMetadata=forex_topic-0@429]
2025-05-07 07:11:36.138 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:36.138 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:36.141 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.051624|1.068370|2025-05-07T07:11:36.122257400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.051624|1.068370|2025-05-07T07:11:36.122257400, timestamp=null), recordMetadata=forex_topic-0@430]
2025-05-07 07:11:36.143 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.057466|34.755143|2025-05-07T07:11:36.122257400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.057466|34.755143|2025-05-07T07:11:36.122257400, timestamp=null), recordMetadata=forex_topic-0@431]
2025-05-07 07:11:36.163 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.982371|34.928735|2025-05-07T07:11:36.122257400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.982371|34.928735|2025-05-07T07:11:36.122257400, timestamp=null), recordMetadata=forex_topic-0@432]
2025-05-07 07:11:36.164 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.982371|34.928735|2025-05-07T07:11:36.122257400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.982371|34.928735|2025-05-07T07:11:36.122257400, timestamp=null), recordMetadata=forex_topic-0@433]
2025-05-07 07:11:37.189 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:37.189 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:37.197 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.041879|1.079633|2025-05-07T07:11:37.173251400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.041879|1.079633|2025-05-07T07:11:37.173251400, timestamp=null), recordMetadata=forex_topic-0@434]
2025-05-07 07:11:37.198 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.908611|34.753300|2025-05-07T07:11:37.173251400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.908611|34.753300|2025-05-07T07:11:37.173251400, timestamp=null), recordMetadata=forex_topic-0@435]
2025-05-07 07:11:37.208 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.907943|34.927813|2025-05-07T07:11:37.173251400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.907943|34.927813|2025-05-07T07:11:37.173251400, timestamp=null), recordMetadata=forex_topic-0@436]
2025-05-07 07:11:37.208 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.907943|34.927813|2025-05-07T07:11:37.173251400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.907943|34.927813|2025-05-07T07:11:37.173251400, timestamp=null), recordMetadata=forex_topic-0@437]
2025-05-07 07:11:38.233 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:38.233 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:38.246 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.126900|35.158205|2025-05-07T07:11:38.217690400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.126900|35.158205|2025-05-07T07:11:38.217690400, timestamp=null), recordMetadata=forex_topic-0@438]
2025-05-07 07:11:38.247 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.044841|1.080123|2025-05-07T07:11:38.217573200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.044841|1.080123|2025-05-07T07:11:38.217573200, timestamp=null), recordMetadata=forex_topic-0@439]
2025-05-07 07:11:38.260 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017088|35.130266|2025-05-07T07:11:38.217690400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017088|35.130266|2025-05-07T07:11:38.217690400, timestamp=null), recordMetadata=forex_topic-0@440]
2025-05-07 07:11:38.260 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.017088|35.130266|2025-05-07T07:11:38.217690400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.017088|35.130266|2025-05-07T07:11:38.217690400, timestamp=null), recordMetadata=forex_topic-0@441]
2025-05-07 07:11:39.278 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:39.278 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:39.282 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.978420|35.000193|2025-05-07T07:11:39.261467300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.978420|35.000193|2025-05-07T07:11:39.261467300, timestamp=null), recordMetadata=forex_topic-0@442]
2025-05-07 07:11:39.282 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.058122|1.077515|2025-05-07T07:11:39.261467300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.058122|1.077515|2025-05-07T07:11:39.261467300, timestamp=null), recordMetadata=forex_topic-0@443]
2025-05-07 07:11:39.296 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.942848|35.051260|2025-05-07T07:11:39.261467300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.942848|35.051260|2025-05-07T07:11:39.261467300, timestamp=null), recordMetadata=forex_topic-0@444]
2025-05-07 07:11:39.296 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.942848|35.051260|2025-05-07T07:11:39.261467300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.942848|35.051260|2025-05-07T07:11:39.261467300, timestamp=null), recordMetadata=forex_topic-0@445]
2025-05-07 07:11:40.323 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:40.323 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:40.326 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.706094|34.758797|2025-05-07T07:11:40.306357900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.706094|34.758797|2025-05-07T07:11:40.306357900, timestamp=null), recordMetadata=forex_topic-0@446]
2025-05-07 07:11:40.329 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052018|1.078373|2025-05-07T07:11:40.306357900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052018|1.078373|2025-05-07T07:11:40.306357900, timestamp=null), recordMetadata=forex_topic-0@447]
2025-05-07 07:11:40.342 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.806685|34.930562|2025-05-07T07:11:40.306357900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.806685|34.930562|2025-05-07T07:11:40.306357900, timestamp=null), recordMetadata=forex_topic-0@448]
2025-05-07 07:11:40.342 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.806685|34.930562|2025-05-07T07:11:40.306357900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.806685|34.930562|2025-05-07T07:11:40.306357900, timestamp=null), recordMetadata=forex_topic-0@449]
2025-05-07 07:11:41.366 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:41.366 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:41.369 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.739478|34.663530|2025-05-07T07:11:41.349963400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.739478|34.663530|2025-05-07T07:11:41.349963400, timestamp=null), recordMetadata=forex_topic-0@450]
2025-05-07 07:11:41.369 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052614|1.063520|2025-05-07T07:11:41.349963400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052614|1.063520|2025-05-07T07:11:41.349963400, timestamp=null), recordMetadata=forex_topic-0@451]
2025-05-07 07:11:41.381 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.823377|34.882928|2025-05-07T07:11:41.349963400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.823377|34.882928|2025-05-07T07:11:41.349963400, timestamp=null), recordMetadata=forex_topic-0@452]
2025-05-07 07:11:41.382 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.823377|34.882928|2025-05-07T07:11:41.349963400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.823377|34.882928|2025-05-07T07:11:41.349963400, timestamp=null), recordMetadata=forex_topic-0@453]
2025-05-07 07:11:42.408 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:42.408 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:42.412 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.293009|34.979385|2025-05-07T07:11:42.391569 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.293009|34.979385|2025-05-07T07:11:42.391569, timestamp=null), recordMetadata=forex_topic-0@454]
2025-05-07 07:11:42.412 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048368|1.059980|2025-05-07T07:11:42.391569 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048368|1.059980|2025-05-07T07:11:42.391569, timestamp=null), recordMetadata=forex_topic-0@455]
2025-05-07 07:11:42.425 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.100143|35.040856|2025-05-07T07:11:42.391569 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.100143|35.040856|2025-05-07T07:11:42.391569, timestamp=null), recordMetadata=forex_topic-0@456]
2025-05-07 07:11:42.427 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.100143|35.040856|2025-05-07T07:11:42.391569 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.100143|35.040856|2025-05-07T07:11:42.391569, timestamp=null), recordMetadata=forex_topic-0@457]
2025-05-07 07:11:43.453 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:43.453 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:43.457 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.049092|1.075551|2025-05-07T07:11:43.435574700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.049092|1.075551|2025-05-07T07:11:43.435574700, timestamp=null), recordMetadata=forex_topic-0@458]
2025-05-07 07:11:43.458 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.331821|35.280633|2025-05-07T07:11:43.435574700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.331821|35.280633|2025-05-07T07:11:43.435574700, timestamp=null), recordMetadata=forex_topic-0@459]
2025-05-07 07:11:43.477 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.119549|35.191480|2025-05-07T07:11:43.435574700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.119549|35.191480|2025-05-07T07:11:43.435574700, timestamp=null), recordMetadata=forex_topic-0@460]
2025-05-07 07:11:43.478 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.119549|35.191480|2025-05-07T07:11:43.435574700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.119549|35.191480|2025-05-07T07:11:43.435574700, timestamp=null), recordMetadata=forex_topic-0@461]
2025-05-07 07:11:44.508 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:44.508 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:44.511 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.040821|1.059603|2025-05-07T07:11:44.492001400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.040821|1.059603|2025-05-07T07:11:44.492001400, timestamp=null), recordMetadata=forex_topic-0@462]
2025-05-07 07:11:44.514 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.038872|35.227348|2025-05-07T07:11:44.492001400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.038872|35.227348|2025-05-07T07:11:44.492001400, timestamp=null), recordMetadata=forex_topic-0@463]
2025-05-07 07:11:44.525 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.973074|35.164837|2025-05-07T07:11:44.492001400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.973074|35.164837|2025-05-07T07:11:44.492001400, timestamp=null), recordMetadata=forex_topic-0@464]
2025-05-07 07:11:44.525 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.973074|35.164837|2025-05-07T07:11:44.492001400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.973074|35.164837|2025-05-07T07:11:44.492001400, timestamp=null), recordMetadata=forex_topic-0@465]
2025-05-07 07:11:45.551 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:45.551 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:45.561 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.989674|35.152978|2025-05-07T07:11:45.535137200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.989674|35.152978|2025-05-07T07:11:45.535137200, timestamp=null), recordMetadata=forex_topic-0@466]
2025-05-07 07:11:45.561 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.058162|1.067394|2025-05-07T07:11:45.535137200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.058162|1.067394|2025-05-07T07:11:45.535137200, timestamp=null), recordMetadata=forex_topic-0@467]
2025-05-07 07:11:45.575 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.948475|35.127652|2025-05-07T07:11:45.535137200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.948475|35.127652|2025-05-07T07:11:45.535137200, timestamp=null), recordMetadata=forex_topic-0@468]
2025-05-07 07:11:45.575 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.948475|35.127652|2025-05-07T07:11:45.535137200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.948475|35.127652|2025-05-07T07:11:45.535137200, timestamp=null), recordMetadata=forex_topic-0@469]
2025-05-07 07:11:46.595 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:46.595 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:46.601 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.071005|35.263279|2025-05-07T07:11:46.578424100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.071005|35.263279|2025-05-07T07:11:46.578424100, timestamp=null), recordMetadata=forex_topic-0@470]
2025-05-07 07:11:46.603 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.047941|1.066086|2025-05-07T07:11:46.578424100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.047941|1.066086|2025-05-07T07:11:46.578424100, timestamp=null), recordMetadata=forex_topic-0@471]
2025-05-07 07:11:46.611 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.989141|35.182803|2025-05-07T07:11:46.578424100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.989141|35.182803|2025-05-07T07:11:46.578424100, timestamp=null), recordMetadata=forex_topic-0@472]
2025-05-07 07:11:46.612 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.989141|35.182803|2025-05-07T07:11:46.578424100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.989141|35.182803|2025-05-07T07:11:46.578424100, timestamp=null), recordMetadata=forex_topic-0@473]
2025-05-07 07:11:47.639 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:47.639 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:47.642 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.857500|34.969464|2025-05-07T07:11:47.622305300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.857500|34.969464|2025-05-07T07:11:47.622305300, timestamp=null), recordMetadata=forex_topic-0@474]
2025-05-07 07:11:47.643 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.050044|1.063674|2025-05-07T07:11:47.622305300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.050044|1.063674|2025-05-07T07:11:47.622305300, timestamp=null), recordMetadata=forex_topic-0@475]
2025-05-07 07:11:47.656 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.882388|35.035895|2025-05-07T07:11:47.622305300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.882388|35.035895|2025-05-07T07:11:47.622305300, timestamp=null), recordMetadata=forex_topic-0@476]
2025-05-07 07:11:47.657 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.882388|35.035895|2025-05-07T07:11:47.622305300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.882388|35.035895|2025-05-07T07:11:47.622305300, timestamp=null), recordMetadata=forex_topic-0@477]
2025-05-07 07:11:48.684 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:48.685 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:48.691 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.760343|35.203046|2025-05-07T07:11:48.667924700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.760343|35.203046|2025-05-07T07:11:48.667924700, timestamp=null), recordMetadata=forex_topic-0@478]
2025-05-07 07:11:48.692 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.042483|1.061043|2025-05-07T07:11:48.667924700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.042483|1.061043|2025-05-07T07:11:48.667924700, timestamp=null), recordMetadata=forex_topic-0@479]
2025-05-07 07:11:48.707 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.833810|35.152686|2025-05-07T07:11:48.667924700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.833810|35.152686|2025-05-07T07:11:48.667924700, timestamp=null), recordMetadata=forex_topic-0@480]
2025-05-07 07:11:48.707 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.833810|35.152686|2025-05-07T07:11:48.667924700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.833810|35.152686|2025-05-07T07:11:48.667924700, timestamp=null), recordMetadata=forex_topic-0@481]
2025-05-07 07:11:49.725 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:49.725 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:49.729 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052343|1.077615|2025-05-07T07:11:49.709262100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052343|1.077615|2025-05-07T07:11:49.709262100, timestamp=null), recordMetadata=forex_topic-0@482]
2025-05-07 07:11:49.730 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.155909|35.022923|2025-05-07T07:11:49.709262100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.155909|35.022923|2025-05-07T07:11:49.709262100, timestamp=null), recordMetadata=forex_topic-0@483]
2025-05-07 07:11:49.744 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.031593|35.062625|2025-05-07T07:11:49.709262100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.031593|35.062625|2025-05-07T07:11:49.709262100, timestamp=null), recordMetadata=forex_topic-0@484]
2025-05-07 07:11:49.745 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.031593|35.062625|2025-05-07T07:11:49.709262100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.031593|35.062625|2025-05-07T07:11:49.709262100, timestamp=null), recordMetadata=forex_topic-0@485]
2025-05-07 07:11:50.766 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:50.766 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:50.770 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.137108|34.774545|2025-05-07T07:11:50.748727900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.137108|34.774545|2025-05-07T07:11:50.748727900, timestamp=null), recordMetadata=forex_topic-0@486]
2025-05-07 07:11:50.770 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052218|1.071270|2025-05-07T07:11:50.748727900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052218|1.071270|2025-05-07T07:11:50.748727900, timestamp=null), recordMetadata=forex_topic-0@487]
2025-05-07 07:11:50.782 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.022192|34.938436|2025-05-07T07:11:50.748727900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.022192|34.938436|2025-05-07T07:11:50.748727900, timestamp=null), recordMetadata=forex_topic-0@488]
2025-05-07 07:11:50.782 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.022192|34.938436|2025-05-07T07:11:50.748727900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.022192|34.938436|2025-05-07T07:11:50.748727900, timestamp=null), recordMetadata=forex_topic-0@489]
2025-05-07 07:11:51.806 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:51.806 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:51.810 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.058588|1.066264|2025-05-07T07:11:51.789245800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.058588|1.066264|2025-05-07T07:11:51.789245800, timestamp=null), recordMetadata=forex_topic-0@490]
2025-05-07 07:11:51.811 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.984964|34.845510|2025-05-07T07:11:51.789245800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.984964|34.845510|2025-05-07T07:11:51.789245800, timestamp=null), recordMetadata=forex_topic-0@491]
2025-05-07 07:11:51.823 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.946120|34.973918|2025-05-07T07:11:51.789245800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.946120|34.973918|2025-05-07T07:11:51.789245800, timestamp=null), recordMetadata=forex_topic-0@492]
2025-05-07 07:11:51.823 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.946120|34.973918|2025-05-07T07:11:51.789245800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.946120|34.973918|2025-05-07T07:11:51.789245800, timestamp=null), recordMetadata=forex_topic-0@493]
2025-05-07 07:11:52.851 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:52.851 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:52.855 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.042911|1.076944|2025-05-07T07:11:52.835281900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.042911|1.076944|2025-05-07T07:11:52.835281900, timestamp=null), recordMetadata=forex_topic-0@494]
2025-05-07 07:11:52.855 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.807360|35.125056|2025-05-07T07:11:52.835281900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.807360|35.125056|2025-05-07T07:11:52.835281900, timestamp=null), recordMetadata=forex_topic-0@495]
2025-05-07 07:11:52.868 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.857318|35.113691|2025-05-07T07:11:52.835281900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.857318|35.113691|2025-05-07T07:11:52.835281900, timestamp=null), recordMetadata=forex_topic-0@496]
2025-05-07 07:11:52.869 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.857318|35.113691|2025-05-07T07:11:52.835281900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.857318|35.113691|2025-05-07T07:11:52.835281900, timestamp=null), recordMetadata=forex_topic-0@497]
2025-05-07 07:11:53.897 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:53.897 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:53.900 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.050114|1.072072|2025-05-07T07:11:53.880383100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.050114|1.072072|2025-05-07T07:11:53.880383100, timestamp=null), recordMetadata=forex_topic-0@498]
2025-05-07 07:11:53.900 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.904057|35.268438|2025-05-07T07:11:53.880383100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.904057|35.268438|2025-05-07T07:11:53.880383100, timestamp=null), recordMetadata=forex_topic-0@499]
2025-05-07 07:11:53.911 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.905667|35.185382|2025-05-07T07:11:53.880383100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.905667|35.185382|2025-05-07T07:11:53.880383100, timestamp=null), recordMetadata=forex_topic-0@500]
2025-05-07 07:11:53.912 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.905667|35.185382|2025-05-07T07:11:53.880383100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.905667|35.185382|2025-05-07T07:11:53.880383100, timestamp=null), recordMetadata=forex_topic-0@501]
2025-05-07 07:11:54.940 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:54.940 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:54.946 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.057824|1.067385|2025-05-07T07:11:54.922099400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.057824|1.067385|2025-05-07T07:11:54.922099400, timestamp=null), recordMetadata=forex_topic-0@502]
2025-05-07 07:11:54.946 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.999383|34.827033|2025-05-07T07:11:54.922099400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.999383|34.827033|2025-05-07T07:11:54.922099400, timestamp=null), recordMetadata=forex_topic-0@503]
2025-05-07 07:11:54.961 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.953329|34.964680|2025-05-07T07:11:54.922099400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.953329|34.964680|2025-05-07T07:11:54.922099400, timestamp=null), recordMetadata=forex_topic-0@504]
2025-05-07 07:11:54.962 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.953329|34.964680|2025-05-07T07:11:54.922099400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.953329|34.964680|2025-05-07T07:11:54.922099400, timestamp=null), recordMetadata=forex_topic-0@505]
2025-05-07 07:11:55.987 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:55.987 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:55.990 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.224853|35.222459|2025-05-07T07:11:55.969718600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.224853|35.222459|2025-05-07T07:11:55.969718600, timestamp=null), recordMetadata=forex_topic-0@506]
2025-05-07 07:11:55.991 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.039802|1.059648|2025-05-07T07:11:55.969718600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.039802|1.059648|2025-05-07T07:11:55.969718600, timestamp=null), recordMetadata=forex_topic-0@507]
2025-05-07 07:11:56.005 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.066064|35.162392|2025-05-07T07:11:55.969718600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.066064|35.162392|2025-05-07T07:11:55.969718600, timestamp=null), recordMetadata=forex_topic-0@508]
2025-05-07 07:11:56.005 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.066064|35.162392|2025-05-07T07:11:55.969718600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.066064|35.162392|2025-05-07T07:11:55.969718600, timestamp=null), recordMetadata=forex_topic-0@509]
2025-05-07 07:11:57.021 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:57.022 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:57.026 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.187686|34.974351|2025-05-07T07:11:57.005229900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.187686|34.974351|2025-05-07T07:11:57.005229900, timestamp=null), recordMetadata=forex_topic-0@510]
2025-05-07 07:11:57.026 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.054053|1.079882|2025-05-07T07:11:57.005229900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.054053|1.079882|2025-05-07T07:11:57.005229900, timestamp=null), recordMetadata=forex_topic-0@511]
2025-05-07 07:11:57.043 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.047481|35.038338|2025-05-07T07:11:57.005229900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.047481|35.038338|2025-05-07T07:11:57.005229900, timestamp=null), recordMetadata=forex_topic-0@512]
2025-05-07 07:11:57.045 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.047481|35.038338|2025-05-07T07:11:57.005229900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.047481|35.038338|2025-05-07T07:11:57.005229900, timestamp=null), recordMetadata=forex_topic-0@513]
2025-05-07 07:11:58.069 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:58.069 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:58.073 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.045208|1.063391|2025-05-07T07:11:58.053871 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.045208|1.063391|2025-05-07T07:11:58.053871, timestamp=null), recordMetadata=forex_topic-0@514]
2025-05-07 07:11:58.074 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.887929|35.038285|2025-05-07T07:11:58.053871 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.887929|35.038285|2025-05-07T07:11:58.053871, timestamp=null), recordMetadata=forex_topic-0@515]
2025-05-07 07:11:58.103 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.897603|35.070306|2025-05-07T07:11:58.053871 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.897603|35.070306|2025-05-07T07:11:58.053871, timestamp=null), recordMetadata=forex_topic-0@516]
2025-05-07 07:11:58.103 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.897603|35.070306|2025-05-07T07:11:58.053871 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.897603|35.070306|2025-05-07T07:11:58.053871, timestamp=null), recordMetadata=forex_topic-0@517]
2025-05-07 07:11:59.129 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:11:59.129 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:11:59.134 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.043711|1.069925|2025-05-07T07:11:59.112862300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.043711|1.069925|2025-05-07T07:11:59.112862300, timestamp=null), recordMetadata=forex_topic-0@518]
2025-05-07 07:11:59.134 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.758314|35.160519|2025-05-07T07:11:59.112862300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.758314|35.160519|2025-05-07T07:11:59.112862300, timestamp=null), recordMetadata=forex_topic-0@519]
2025-05-07 07:11:59.154 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.832795|35.131422|2025-05-07T07:11:59.112862300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.832795|35.131422|2025-05-07T07:11:59.112862300, timestamp=null), recordMetadata=forex_topic-0@520]
2025-05-07 07:11:59.154 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.832795|35.131422|2025-05-07T07:11:59.112862300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.832795|35.131422|2025-05-07T07:11:59.112862300, timestamp=null), recordMetadata=forex_topic-0@521]
2025-05-07 07:12:00.185 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:00.185 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:00.188 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052445|1.067383|2025-05-07T07:12:00.168000300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052445|1.067383|2025-05-07T07:12:00.168000300, timestamp=null), recordMetadata=forex_topic-0@522]
2025-05-07 07:12:00.191 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.230638|35.122708|2025-05-07T07:12:00.168000300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.230638|35.122708|2025-05-07T07:12:00.168000300, timestamp=null), recordMetadata=forex_topic-0@523]
2025-05-07 07:12:00.208 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.068957|35.112517|2025-05-07T07:12:00.168000300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.068957|35.112517|2025-05-07T07:12:00.168000300, timestamp=null), recordMetadata=forex_topic-0@524]
2025-05-07 07:12:00.209 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.068957|35.112517|2025-05-07T07:12:00.168000300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.068957|35.112517|2025-05-07T07:12:00.168000300, timestamp=null), recordMetadata=forex_topic-0@525]
2025-05-07 07:12:01.226 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:01.226 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:01.230 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.267729|34.816859|2025-05-07T07:12:01.209934800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.267729|34.816859|2025-05-07T07:12:01.209934800, timestamp=null), recordMetadata=forex_topic-0@526]
2025-05-07 07:12:01.231 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048588|1.072870|2025-05-07T07:12:01.210058400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048588|1.072870|2025-05-07T07:12:01.210058400, timestamp=null), recordMetadata=forex_topic-0@527]
2025-05-07 07:12:01.244 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.087502|34.959593|2025-05-07T07:12:01.209934800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.087502|34.959593|2025-05-07T07:12:01.209934800, timestamp=null), recordMetadata=forex_topic-0@528]
2025-05-07 07:12:01.244 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.087502|34.959593|2025-05-07T07:12:01.209934800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.087502|34.959593|2025-05-07T07:12:01.209934800, timestamp=null), recordMetadata=forex_topic-0@529]
2025-05-07 07:12:02.270 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:02.271 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:02.277 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.045699|1.076912|2025-05-07T07:12:02.254108 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.045699|1.076912|2025-05-07T07:12:02.254108, timestamp=null), recordMetadata=forex_topic-0@530]
2025-05-07 07:12:02.278 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.177189|34.984076|2025-05-07T07:12:02.253981900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.177189|34.984076|2025-05-07T07:12:02.253981900, timestamp=null), recordMetadata=forex_topic-0@531]
2025-05-07 07:12:02.289 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.042232|35.043201|2025-05-07T07:12:02.253981900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.042232|35.043201|2025-05-07T07:12:02.253981900, timestamp=null), recordMetadata=forex_topic-0@532]
2025-05-07 07:12:02.290 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.042232|35.043201|2025-05-07T07:12:02.253981900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.042232|35.043201|2025-05-07T07:12:02.253981900, timestamp=null), recordMetadata=forex_topic-0@533]
2025-05-07 07:12:03.314 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:03.314 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:03.317 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.200927|34.742601|2025-05-07T07:12:03.297990400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.200927|34.742601|2025-05-07T07:12:03.297990400, timestamp=null), recordMetadata=forex_topic-0@534]
2025-05-07 07:12:03.319 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.050850|1.063605|2025-05-07T07:12:03.298519800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.050850|1.063605|2025-05-07T07:12:03.298519800, timestamp=null), recordMetadata=forex_topic-0@535]
2025-05-07 07:12:03.334 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.054102|34.922464|2025-05-07T07:12:03.297990400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.054102|34.922464|2025-05-07T07:12:03.297990400, timestamp=null), recordMetadata=forex_topic-0@536]
2025-05-07 07:12:03.335 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.054102|34.922464|2025-05-07T07:12:03.297990400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.054102|34.922464|2025-05-07T07:12:03.297990400, timestamp=null), recordMetadata=forex_topic-0@537]
2025-05-07 07:12:04.359 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:04.359 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:04.365 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.267382|34.676980|2025-05-07T07:12:04.344558200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.267382|34.676980|2025-05-07T07:12:04.344558200, timestamp=null), recordMetadata=forex_topic-0@538]
2025-05-07 07:12:04.365 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.052926|1.063025|2025-05-07T07:12:04.344558200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.052926|1.063025|2025-05-07T07:12:04.344558200, timestamp=null), recordMetadata=forex_topic-0@539]
2025-05-07 07:12:04.376 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.087329|34.889653|2025-05-07T07:12:04.344558200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.087329|34.889653|2025-05-07T07:12:04.344558200, timestamp=null), recordMetadata=forex_topic-0@540]
2025-05-07 07:12:04.376 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.087329|34.889653|2025-05-07T07:12:04.344558200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.087329|34.889653|2025-05-07T07:12:04.344558200, timestamp=null), recordMetadata=forex_topic-0@541]
2025-05-07 07:12:05.403 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:05.403 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:05.406 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.050686|35.078068|2025-05-07T07:12:05.386399400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.050686|35.078068|2025-05-07T07:12:05.386399400, timestamp=null), recordMetadata=forex_topic-0@542]
2025-05-07 07:12:05.406 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.055574|1.065825|2025-05-07T07:12:05.386399400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.055574|1.065825|2025-05-07T07:12:05.386399400, timestamp=null), recordMetadata=forex_topic-0@543]
2025-05-07 07:12:05.421 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.978981|35.090197|2025-05-07T07:12:05.386399400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.978981|35.090197|2025-05-07T07:12:05.386399400, timestamp=null), recordMetadata=forex_topic-0@544]
2025-05-07 07:12:05.421 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.978981|35.090197|2025-05-07T07:12:05.386399400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.978981|35.090197|2025-05-07T07:12:05.386399400, timestamp=null), recordMetadata=forex_topic-0@545]
2025-05-07 07:12:06.447 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:06.447 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:06.451 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.711568|35.182978|2025-05-07T07:12:06.430251 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.711568|35.182978|2025-05-07T07:12:06.430251, timestamp=null), recordMetadata=forex_topic-0@546]
2025-05-07 07:12:06.453 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.039977|1.070032|2025-05-07T07:12:06.429780300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.039977|1.070032|2025-05-07T07:12:06.429780300, timestamp=null), recordMetadata=forex_topic-0@547]
2025-05-07 07:12:06.466 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.809422|35.142652|2025-05-07T07:12:06.430251 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.809422|35.142652|2025-05-07T07:12:06.430251, timestamp=null), recordMetadata=forex_topic-0@548]
2025-05-07 07:12:06.467 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.809422|35.142652|2025-05-07T07:12:06.430251 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.809422|35.142652|2025-05-07T07:12:06.430251, timestamp=null), recordMetadata=forex_topic-0@549]
2025-05-07 07:12:07.493 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:07.493 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:07.496 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.984666|35.046364|2025-05-07T07:12:07.476810500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.984666|35.046364|2025-05-07T07:12:07.476810500, timestamp=null), recordMetadata=forex_topic-0@550]
2025-05-07 07:12:07.496 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.047211|1.071769|2025-05-07T07:12:07.476810500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.047211|1.071769|2025-05-07T07:12:07.476810500, timestamp=null), recordMetadata=forex_topic-0@551]
2025-05-07 07:12:07.513 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.945971|35.074345|2025-05-07T07:12:07.476810500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.945971|35.074345|2025-05-07T07:12:07.476810500, timestamp=null), recordMetadata=forex_topic-0@552]
2025-05-07 07:12:07.513 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.945971|35.074345|2025-05-07T07:12:07.476810500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.945971|35.074345|2025-05-07T07:12:07.476810500, timestamp=null), recordMetadata=forex_topic-0@553]
2025-05-07 07:12:08.538 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:08.538 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:08.541 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.042396|1.074058|2025-05-07T07:12:08.520903200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.042396|1.074058|2025-05-07T07:12:08.520903200, timestamp=null), recordMetadata=forex_topic-0@554]
2025-05-07 07:12:08.541 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.083417|35.239871|2025-05-07T07:12:08.520903200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.083417|35.239871|2025-05-07T07:12:08.520903200, timestamp=null), recordMetadata=forex_topic-0@555]
2025-05-07 07:12:08.552 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.995347|35.171099|2025-05-07T07:12:08.520903200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.995347|35.171099|2025-05-07T07:12:08.520903200, timestamp=null), recordMetadata=forex_topic-0@556]
2025-05-07 07:12:08.553 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.995347|35.171099|2025-05-07T07:12:08.520903200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.995347|35.171099|2025-05-07T07:12:08.520903200, timestamp=null), recordMetadata=forex_topic-0@557]
2025-05-07 07:12:09.569 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:09.569 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:09.572 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.176084|34.892474|2025-05-07T07:12:09.552051100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.176084|34.892474|2025-05-07T07:12:09.552051100, timestamp=null), recordMetadata=forex_topic-0@558]
2025-05-07 07:12:09.572 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.042446|1.073604|2025-05-07T07:12:09.552051100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.042446|1.073604|2025-05-07T07:12:09.552051100, timestamp=null), recordMetadata=forex_topic-0@559]
2025-05-07 07:12:09.591 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.041680|34.997400|2025-05-07T07:12:09.552051100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.041680|34.997400|2025-05-07T07:12:09.552051100, timestamp=null), recordMetadata=forex_topic-0@560]
2025-05-07 07:12:09.591 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.041680|34.997400|2025-05-07T07:12:09.552051100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.041680|34.997400|2025-05-07T07:12:09.552051100, timestamp=null), recordMetadata=forex_topic-0@561]
2025-05-07 07:12:10.612 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:10.612 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:10.614 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.044550|1.072090|2025-05-07T07:12:10.595223700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.044550|1.072090|2025-05-07T07:12:10.595223700, timestamp=null), recordMetadata=forex_topic-0@562]
2025-05-07 07:12:10.615 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.038509|35.301666|2025-05-07T07:12:10.595223700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.038509|35.301666|2025-05-07T07:12:10.595223700, timestamp=null), recordMetadata=forex_topic-0@563]
2025-05-07 07:12:10.627 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.972893|35.201996|2025-05-07T07:12:10.595223700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.972893|35.201996|2025-05-07T07:12:10.595223700, timestamp=null), recordMetadata=forex_topic-0@564]
2025-05-07 07:12:10.627 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.972893|35.201996|2025-05-07T07:12:10.595223700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.972893|35.201996|2025-05-07T07:12:10.595223700, timestamp=null), recordMetadata=forex_topic-0@565]
2025-05-07 07:12:11.653 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:11.653 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:11.657 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056186|1.070197|2025-05-07T07:12:11.637664400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056186|1.070197|2025-05-07T07:12:11.637664400, timestamp=null), recordMetadata=forex_topic-0@566]
2025-05-07 07:12:11.657 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.027109|35.140505|2025-05-07T07:12:11.637664400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.027109|35.140505|2025-05-07T07:12:11.637664400, timestamp=null), recordMetadata=forex_topic-0@567]
2025-05-07 07:12:11.677 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.967193|35.121415|2025-05-07T07:12:11.637664400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.967193|35.121415|2025-05-07T07:12:11.637664400, timestamp=null), recordMetadata=forex_topic-0@568]
2025-05-07 07:12:11.677 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.967193|35.121415|2025-05-07T07:12:11.637664400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.967193|35.121415|2025-05-07T07:12:11.637664400, timestamp=null), recordMetadata=forex_topic-0@569]
2025-05-07 07:12:12.699 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:12.699 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:12.703 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.048520|1.074841|2025-05-07T07:12:12.683077100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.048520|1.074841|2025-05-07T07:12:12.683077100, timestamp=null), recordMetadata=forex_topic-0@570]
2025-05-07 07:12:12.703 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.683604|34.668253|2025-05-07T07:12:12.683181700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.683604|34.668253|2025-05-07T07:12:12.683181700, timestamp=null), recordMetadata=forex_topic-0@571]
2025-05-07 07:12:12.716 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.795440|34.885290|2025-05-07T07:12:12.683181700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.795440|34.885290|2025-05-07T07:12:12.683181700, timestamp=null), recordMetadata=forex_topic-0@572]
2025-05-07 07:12:12.718 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.795440|34.885290|2025-05-07T07:12:12.683181700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.795440|34.885290|2025-05-07T07:12:12.683181700, timestamp=null), recordMetadata=forex_topic-0@573]
2025-05-07 07:12:13.740 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:13.740 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:13.748 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.049361|1.065684|2025-05-07T07:12:13.723699900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.049361|1.065684|2025-05-07T07:12:13.723699900, timestamp=null), recordMetadata=forex_topic-0@574]
2025-05-07 07:12:13.748 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.830691|35.015347|2025-05-07T07:12:13.723699900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.830691|35.015347|2025-05-07T07:12:13.723699900, timestamp=null), recordMetadata=forex_topic-0@575]
2025-05-07 07:12:13.763 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.868984|35.058836|2025-05-07T07:12:13.723699900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.868984|35.058836|2025-05-07T07:12:13.723699900, timestamp=null), recordMetadata=forex_topic-0@576]
2025-05-07 07:12:13.763 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.868984|35.058836|2025-05-07T07:12:13.723699900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.868984|35.058836|2025-05-07T07:12:13.723699900, timestamp=null), recordMetadata=forex_topic-0@577]
2025-05-07 07:12:14.793 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-07 07:12:14.793 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_EURUSD
2025-05-07 07:12:14.803 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.056686|34.974235|2025-05-07T07:12:14.774842300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.056686|34.974235|2025-05-07T07:12:14.774842300, timestamp=null), recordMetadata=forex_topic-0@578]
2025-05-07 07:12:14.805 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_EURUSD|1.056864|1.065110|2025-05-07T07:12:14.774842300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_EURUSD|1.056864|1.065110|2025-05-07T07:12:14.774842300, timestamp=null), recordMetadata=forex_topic-0@579]
2025-05-07 07:12:14.814 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.981981|35.038281|2025-05-07T07:12:14.774842300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.981981|35.038281|2025-05-07T07:12:14.774842300, timestamp=null), recordMetadata=forex_topic-0@580]
2025-05-07 07:12:14.814 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.981981|35.038281|2025-05-07T07:12:14.774842300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.981981|35.038281|2025-05-07T07:12:14.774842300, timestamp=null), recordMetadata=forex_topic-0@581]
2025-05-08 18:19:01.424 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 18:19:02.167 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 18:19:02.169 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 18:19:02.194 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.
2025-05-08 18:19:02.219 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 18:19:02.220 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 18:19:02.232 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-08 18:19:02.747 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 18:19:02.760 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 18:19:02.761 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 18:19:02.762 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 18:19:02.805 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 18:19:02.806 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1154 ms
2025-05-08 18:19:03.073 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 18:19:03.120 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 18:19:03.149 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 18:19:03.391 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 18:19:03.474 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 18:19:03.761 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 18:19:03.765 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 18:19:04.071 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 18:19:04.072 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 18:19:04.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 18:19:04.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 18:19:04.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 18:19:04.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 18:19:04.073 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 18:19:04.074 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-08 18:19:04.505 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 18:19:04.523 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 18:56:54.306 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 18:56:55.010 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 18:56:55.012 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 18:56:55.029 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.
2025-05-08 18:56:55.051 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 18:56:55.052 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 18:56:55.061 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-08 18:56:55.592 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 18:56:55.610 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 18:56:55.612 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 18:56:55.613 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 18:56:55.668 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 18:56:55.669 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1127 ms
2025-05-08 18:56:55.964 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 18:56:56.000 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 18:56:56.023 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 18:56:56.221 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 18:56:56.288 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 18:56:56.519 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 18:56:56.522 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 18:56:56.848 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 18:56:56.850 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 18:56:56.850 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 18:56:56.851 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 18:56:56.851 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 18:56:56.851 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 18:56:56.851 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 18:56:56.853 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:13) [classes/:?]
2025-05-08 18:56:57.357 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 18:56:57.371 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 19:02:54.512 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-08 19:02:54.519 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-08 19:02:54.520 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-08 19:02:54.675 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:02:55.887 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.099560|35.259027|2025-05-08T19:02:54.375780500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.099560|35.259027|2025-05-08T19:02:54.375780500, timestamp=null), recordMetadata=forex_topic-0@0]
2025-05-08 19:02:56.871 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:02:56.900 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.070869|34.877006|2025-05-08T19:02:56.852679300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.070869|34.877006|2025-05-08T19:02:56.852679300, timestamp=null), recordMetadata=forex_topic-0@1]
2025-05-08 19:02:57.902 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:02:57.908 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.795911|34.707141|2025-05-08T19:02:57.885550400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.795911|34.707141|2025-05-08T19:02:57.885550400, timestamp=null), recordMetadata=forex_topic-0@2]
2025-05-08 19:02:58.927 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:02:58.931 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.167204|34.930515|2025-05-08T19:02:58.910217 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.167204|34.930515|2025-05-08T19:02:58.910217, timestamp=null), recordMetadata=forex_topic-0@3]
2025-05-08 19:02:59.952 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:02:59.959 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.800658|35.229364|2025-05-08T19:02:59.935227500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.800658|35.229364|2025-05-08T19:02:59.935227500, timestamp=null), recordMetadata=forex_topic-0@4]
2025-05-08 19:03:00.975 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:00.979 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.078183|34.778333|2025-05-08T19:03:00.958486200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.078183|34.778333|2025-05-08T19:03:00.958486200, timestamp=null), recordMetadata=forex_topic-0@5]
2025-05-08 19:03:01.997 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:02.005 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.877508|34.760124|2025-05-08T19:03:01.980561300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.877508|34.760124|2025-05-08T19:03:01.980561300, timestamp=null), recordMetadata=forex_topic-0@6]
2025-05-08 19:03:03.036 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:03.042 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.882824|34.894208|2025-05-08T19:03:03.018818500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.882824|34.894208|2025-05-08T19:03:03.018818500, timestamp=null), recordMetadata=forex_topic-0@7]
2025-05-08 19:03:04.065 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:04.069 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.895915|34.656738|2025-05-08T19:03:04.047489800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.895915|34.656738|2025-05-08T19:03:04.047489800, timestamp=null), recordMetadata=forex_topic-0@8]
2025-05-08 19:03:05.095 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:05.102 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.838272|34.823943|2025-05-08T19:03:05.078670200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.838272|34.823943|2025-05-08T19:03:05.078670200, timestamp=null), recordMetadata=forex_topic-0@9]
2025-05-08 19:03:06.134 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:06.140 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.315236|34.925860|2025-05-08T19:03:06.117305 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.315236|34.925860|2025-05-08T19:03:06.117305, timestamp=null), recordMetadata=forex_topic-0@10]
2025-05-08 19:03:07.159 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:07.164 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.099243|34.686681|2025-05-08T19:03:07.141693400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.099243|34.686681|2025-05-08T19:03:07.141693400, timestamp=null), recordMetadata=forex_topic-0@11]
2025-05-08 19:03:08.184 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:08.191 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.996978|34.659769|2025-05-08T19:03:08.168051200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.996978|34.659769|2025-05-08T19:03:08.168051200, timestamp=null), recordMetadata=forex_topic-0@12]
2025-05-08 19:03:09.209 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:09.214 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.181580|34.695920|2025-05-08T19:03:09.191921600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.181580|34.695920|2025-05-08T19:03:09.191921600, timestamp=null), recordMetadata=forex_topic-0@13]
2025-05-08 19:03:10.232 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:10.237 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.023619|34.892101|2025-05-08T19:03:10.216315200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.023619|34.892101|2025-05-08T19:03:10.216315200, timestamp=null), recordMetadata=forex_topic-0@14]
2025-05-08 19:03:11.258 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:11.266 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.881412|35.132840|2025-05-08T19:03:11.238877100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.881412|35.132840|2025-05-08T19:03:11.238877100, timestamp=null), recordMetadata=forex_topic-0@15]
2025-05-08 19:03:12.297 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:12.301 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.071268|34.909066|2025-05-08T19:03:12.279705600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.071268|34.909066|2025-05-08T19:03:12.279705600, timestamp=null), recordMetadata=forex_topic-0@16]
2025-05-08 19:03:13.317 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:03:13.324 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.280790|34.879457|2025-05-08T19:03:13.303092200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.280790|34.879457|2025-05-08T19:03:13.303092200, timestamp=null), recordMetadata=forex_topic-0@17]
2025-05-08 19:04:51.686 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 19:04:52.356 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:04:52.357 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 19:04:52.382 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
2025-05-08 19:04:52.396 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:04:52.396 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 19:04:52.404 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-08 19:04:52.932 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 19:04:52.947 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 19:04:52.948 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 19:04:52.949 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 19:04:52.998 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 19:04:53.000 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1108 ms
2025-05-08 19:04:53.280 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 19:04:53.320 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 19:04:53.341 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 19:04:53.546 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 19:04:53.606 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 19:04:53.825 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 19:04:53.829 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 19:04:54.122 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 19:04:54.125 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 19:04:54.125 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 19:04:54.125 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 19:04:54.125 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 19:04:54.125 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 19:04:54.125 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 19:04:54.126 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-08 19:04:54.655 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 19:04:54.672 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 19:23:09.612 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 19:23:10.934 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:23:10.936 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 19:23:10.961 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
2025-05-08 19:23:10.982 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:23:10.983 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 19:23:10.997 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-08 19:23:11.585 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 19:23:11.607 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 19:23:11.610 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 19:23:11.611 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 19:23:11.665 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 19:23:11.667 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1678 ms
2025-05-08 19:23:11.999 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 19:23:12.044 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 19:23:12.067 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 19:23:12.320 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 19:23:12.392 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 19:23:12.655 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 19:23:12.661 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 19:23:13.142 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 19:23:13.144 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 19:23:13.144 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 19:23:13.144 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 19:23:13.144 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 19:23:13.146 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 19:23:13.146 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 19:23:13.146 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-08 19:23:13.842 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 19:23:13.854 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 19:23:21.184 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-08 19:23:21.184 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-08 19:23:21.186 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-08 19:23:21.347 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:23:22.466 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.787918|35.071127|2025-05-08T19:23:21.033883900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.787918|35.071127|2025-05-08T19:23:21.033883900, timestamp=null), recordMetadata=forex_topic-0@18]
2025-05-08 19:23:51.557 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:23:51.562 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.917871|34.931834|2025-05-08T19:23:51.546137100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.917871|34.931834|2025-05-08T19:23:51.546137100, timestamp=null), recordMetadata=forex_topic-0@19]
2025-05-08 19:24:41.886 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 19:24:42.658 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:24:42.662 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 19:24:42.694 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
2025-05-08 19:24:42.708 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:24:42.708 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 19:24:42.717 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-08 19:24:43.370 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 19:24:43.387 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 19:24:43.389 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 19:24:43.389 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 19:24:43.444 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 19:24:43.446 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1310 ms
2025-05-08 19:24:43.811 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 19:24:43.857 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 19:24:43.883 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 19:24:44.100 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 19:24:44.171 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 19:24:44.396 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 19:24:44.399 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 19:24:44.711 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 19:24:44.713 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 19:24:44.713 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 19:24:44.713 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 19:24:44.715 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 19:24:44.715 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 19:24:44.715 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 19:24:44.715 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-08 19:24:45.205 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 19:24:45.216 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 19:28:13.541 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 19:28:14.687 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:28:14.689 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 19:28:14.712 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
2025-05-08 19:28:14.727 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:28:14.728 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 19:28:14.746 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-08 19:28:15.354 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 19:28:15.368 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 19:28:15.369 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 19:28:15.369 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 19:28:15.437 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 19:28:15.438 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1570 ms
2025-05-08 19:28:15.774 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 19:28:15.844 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 19:28:15.882 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 19:28:16.174 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 19:28:16.373 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 19:28:16.811 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 19:28:16.818 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 19:28:17.196 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 19:28:17.198 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 19:28:17.199 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 19:28:17.199 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 19:28:17.199 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 19:28:17.199 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 19:28:17.200 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 19:28:17.200 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-08 19:28:17.660 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 19:28:17.675 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 19:29:51.994 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-08 19:29:51.995 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-08 19:29:51.996 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-08 19:29:52.116 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:29:52.901 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.770979|35.063149|2025-05-08T19:29:51.884733300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.770979|35.063149|2025-05-08T19:29:51.884733300, timestamp=null), recordMetadata=forex_topic-0@0]
2025-05-08 19:29:53.876 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:29:53.892 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.178554|34.947721|2025-05-08T19:29:53.858764700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.178554|34.947721|2025-05-08T19:29:53.858764700, timestamp=null), recordMetadata=forex_topic-0@1]
2025-05-08 19:29:54.901 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:29:54.907 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.022371|35.196844|2025-05-08T19:29:54.884119 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.022371|35.196844|2025-05-08T19:29:54.884119, timestamp=null), recordMetadata=forex_topic-0@2]
2025-05-08 19:29:55.930 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:29:55.947 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.870492|35.216399|2025-05-08T19:29:55.914370200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.870492|35.216399|2025-05-08T19:29:55.914370200, timestamp=null), recordMetadata=forex_topic-0@3]
2025-05-08 19:29:56.975 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:29:56.983 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.330228|35.212596|2025-05-08T19:29:56.959318800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.330228|35.212596|2025-05-08T19:29:56.959318800, timestamp=null), recordMetadata=forex_topic-0@4]
2025-05-08 19:29:58.004 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:29:58.011 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.958311|34.667107|2025-05-08T19:29:57.987880100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.958311|34.667107|2025-05-08T19:29:57.987880100, timestamp=null), recordMetadata=forex_topic-0@5]
2025-05-08 19:29:59.028 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:29:59.036 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.069332|35.151971|2025-05-08T19:29:59.011359400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.069332|35.151971|2025-05-08T19:29:59.011359400, timestamp=null), recordMetadata=forex_topic-0@6]
2025-05-08 19:30:00.055 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:00.060 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.015402|34.894107|2025-05-08T19:30:00.039125900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.015402|34.894107|2025-05-08T19:30:00.039125900, timestamp=null), recordMetadata=forex_topic-0@7]
2025-05-08 19:30:01.083 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:01.088 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.873841|35.243664|2025-05-08T19:30:01.066820300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.873841|35.243664|2025-05-08T19:30:01.066820300, timestamp=null), recordMetadata=forex_topic-0@8]
2025-05-08 19:30:02.109 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:02.117 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.067888|35.074476|2025-05-08T19:30:02.090886700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.067888|35.074476|2025-05-08T19:30:02.090886700, timestamp=null), recordMetadata=forex_topic-0@9]
2025-05-08 19:30:03.149 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:03.152 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.707445|34.798360|2025-05-08T19:30:03.131763200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.707445|34.798360|2025-05-08T19:30:03.131763200, timestamp=null), recordMetadata=forex_topic-0@10]
2025-05-08 19:30:04.173 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:04.178 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.762675|34.881301|2025-05-08T19:30:04.156842300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.762675|34.881301|2025-05-08T19:30:04.156842300, timestamp=null), recordMetadata=forex_topic-0@11]
2025-05-08 19:30:05.198 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:05.202 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.313624|35.280528|2025-05-08T19:30:05.181045400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.313624|35.280528|2025-05-08T19:30:05.181045400, timestamp=null), recordMetadata=forex_topic-0@12]
2025-05-08 19:30:06.219 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:06.224 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.675127|34.922179|2025-05-08T19:30:06.202957800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.675127|34.922179|2025-05-08T19:30:06.202957800, timestamp=null), recordMetadata=forex_topic-0@13]
2025-05-08 19:30:07.252 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:07.257 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.250072|34.903486|2025-05-08T19:30:07.237292600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.250072|34.903486|2025-05-08T19:30:07.237292600, timestamp=null), recordMetadata=forex_topic-0@14]
2025-05-08 19:30:08.280 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:08.285 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.848139|34.748178|2025-05-08T19:30:08.262233 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.848139|34.748178|2025-05-08T19:30:08.262233, timestamp=null), recordMetadata=forex_topic-0@15]
2025-05-08 19:30:09.317 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:09.321 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.964573|35.284647|2025-05-08T19:30:09.300308400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.964573|35.284647|2025-05-08T19:30:09.300308400, timestamp=null), recordMetadata=forex_topic-0@16]
2025-05-08 19:30:10.344 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:10.350 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.228179|35.342343|2025-05-08T19:30:10.326900200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.228179|35.342343|2025-05-08T19:30:10.326900200, timestamp=null), recordMetadata=forex_topic-0@17]
2025-05-08 19:30:11.376 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:11.387 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.953984|34.810216|2025-05-08T19:30:11.359439900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.953984|34.810216|2025-05-08T19:30:11.359439900, timestamp=null), recordMetadata=forex_topic-0@18]
2025-05-08 19:30:12.412 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:12.417 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.748866|35.032697|2025-05-08T19:30:12.395681100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.748866|35.032697|2025-05-08T19:30:12.395681100, timestamp=null), recordMetadata=forex_topic-0@19]
2025-05-08 19:30:13.441 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:13.446 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.683658|34.792916|2025-05-08T19:30:13.424305600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.683658|34.792916|2025-05-08T19:30:13.424305600, timestamp=null), recordMetadata=forex_topic-0@20]
2025-05-08 19:30:14.463 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:14.468 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.089007|34.982404|2025-05-08T19:30:14.447841200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.089007|34.982404|2025-05-08T19:30:14.447841200, timestamp=null), recordMetadata=forex_topic-0@21]
2025-05-08 19:30:15.485 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:15.489 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.311572|35.162456|2025-05-08T19:30:15.469008700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.311572|35.162456|2025-05-08T19:30:15.469008700, timestamp=null), recordMetadata=forex_topic-0@22]
2025-05-08 19:30:16.510 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:16.518 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.679485|34.989328|2025-05-08T19:30:16.492494100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.679485|34.989328|2025-05-08T19:30:16.492494100, timestamp=null), recordMetadata=forex_topic-0@23]
2025-05-08 19:30:16.800 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:16.805 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.087046|35.035573|2025-05-08T19:30:16.742435 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.087046|35.035573|2025-05-08T19:30:16.742435, timestamp=null), recordMetadata=forex_topic-0@24]
2025-05-08 19:30:17.305 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.883266|35.012450|2025-05-08T19:30:16.492494100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.883266|35.012450|2025-05-08T19:30:16.492494100, timestamp=null), recordMetadata=forex_topic-0@25]
2025-05-08 19:30:17.547 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:17.551 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.279552|35.306490|2025-05-08T19:30:17.530189400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.279552|35.306490|2025-05-08T19:30:17.530189400, timestamp=null), recordMetadata=forex_topic-0@26]
2025-05-08 19:30:17.571 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.183299|35.171032|2025-05-08T19:30:17.530189400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.183299|35.171032|2025-05-08T19:30:17.530189400, timestamp=null), recordMetadata=forex_topic-0@27]
2025-05-08 19:30:17.904 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:17.908 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.769802|35.233495|2025-05-08T19:30:17.889641700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.769802|35.233495|2025-05-08T19:30:17.889641700, timestamp=null), recordMetadata=forex_topic-0@28]
2025-05-08 19:30:17.928 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.024677|35.269993|2025-05-08T19:30:17.530189400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.024677|35.269993|2025-05-08T19:30:17.530189400, timestamp=null), recordMetadata=forex_topic-0@29]
2025-05-08 19:30:18.569 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:18.602 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:18.604 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.664653|34.951258|2025-05-08T19:30:18.561898100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.664653|34.951258|2025-05-08T19:30:18.561898100, timestamp=null), recordMetadata=forex_topic-0@30]
2025-05-08 19:30:18.612 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.712235|35.278709|2025-05-08T19:30:18.585105100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.712235|35.278709|2025-05-08T19:30:18.585105100, timestamp=null), recordMetadata=forex_topic-0@31]
2025-05-08 19:30:18.628 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.972102|35.128874|2025-05-08T19:30:17.530189400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.972102|35.128874|2025-05-08T19:30:17.530189400, timestamp=null), recordMetadata=forex_topic-0@32]
2025-05-08 19:30:18.636 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.688444|35.114984|2025-05-08T19:30:18.585105100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.688444|35.114984|2025-05-08T19:30:18.585105100, timestamp=null), recordMetadata=forex_topic-0@33]
2025-05-08 19:30:19.350 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:19.354 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.904511|35.187748|2025-05-08T19:30:19.337689 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.904511|35.187748|2025-05-08T19:30:19.337689, timestamp=null), recordMetadata=forex_topic-0@34]
2025-05-08 19:30:19.377 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.808373|35.233229|2025-05-08T19:30:18.585105100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.808373|35.233229|2025-05-08T19:30:18.585105100, timestamp=null), recordMetadata=forex_topic-0@35]
2025-05-08 19:30:19.657 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:19.662 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.183442|35.079717|2025-05-08T19:30:19.640652400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.183442|35.079717|2025-05-08T19:30:19.640652400, timestamp=null), recordMetadata=forex_topic-0@36]
2025-05-08 19:30:19.683 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.043976|35.133733|2025-05-08T19:30:19.640652400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.043976|35.133733|2025-05-08T19:30:19.640652400, timestamp=null), recordMetadata=forex_topic-0@37]
2025-05-08 19:30:19.983 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:19.988 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.336722|35.003493|2025-05-08T19:30:19.968547800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.336722|35.003493|2025-05-08T19:30:19.968547800, timestamp=null), recordMetadata=forex_topic-0@38]
2025-05-08 19:30:20.009 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.260082|35.041605|2025-05-08T19:30:19.640652400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.260082|35.041605|2025-05-08T19:30:19.640652400, timestamp=null), recordMetadata=forex_topic-0@39]
2025-05-08 19:30:20.600 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:20.606 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.010503|35.088184|2025-05-08T19:30:20.590126300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.010503|35.088184|2025-05-08T19:30:20.590126300, timestamp=null), recordMetadata=forex_topic-0@40]
2025-05-08 19:30:20.641 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.096972|35.083951|2025-05-08T19:30:19.640652400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.096972|35.083951|2025-05-08T19:30:19.640652400, timestamp=null), recordMetadata=forex_topic-0@41]
2025-05-08 19:30:20.709 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:20.714 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.034551|35.096008|2025-05-08T19:30:20.692658300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.034551|35.096008|2025-05-08T19:30:20.692658300, timestamp=null), recordMetadata=forex_topic-0@42]
2025-05-08 19:30:20.732 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.022527|35.092096|2025-05-08T19:30:20.692658300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.022527|35.092096|2025-05-08T19:30:20.692658300, timestamp=null), recordMetadata=forex_topic-0@43]
2025-05-08 19:30:21.279 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:21.284 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.269160|35.129544|2025-05-08T19:30:21.265403800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.269160|35.129544|2025-05-08T19:30:21.265403800, timestamp=null), recordMetadata=forex_topic-0@44]
2025-05-08 19:30:21.303 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.151856|35.112776|2025-05-08T19:30:20.692658300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.151856|35.112776|2025-05-08T19:30:20.692658300, timestamp=null), recordMetadata=forex_topic-0@45]
2025-05-08 19:30:21.755 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:21.759 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.014698|34.920534|2025-05-08T19:30:21.738242200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.014698|34.920534|2025-05-08T19:30:21.738242200, timestamp=null), recordMetadata=forex_topic-0@46]
2025-05-08 19:30:21.778 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.141929|35.025039|2025-05-08T19:30:21.738242200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.141929|35.025039|2025-05-08T19:30:21.738242200, timestamp=null), recordMetadata=forex_topic-0@47]
2025-05-08 19:30:21.923 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:30:21.927 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.813387|35.245169|2025-05-08T19:30:21.914313200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.813387|35.245169|2025-05-08T19:30:21.914313200, timestamp=null), recordMetadata=forex_topic-0@48]
2025-05-08 19:30:21.945 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.914043|35.082852|2025-05-08T19:30:21.738242200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.914043|35.082852|2025-05-08T19:30:21.738242200, timestamp=null), recordMetadata=forex_topic-0@49]
2025-05-08 19:30:22.794 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:22.799 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.053263|35.002186|2025-05-08T19:30:22.777805100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.053263|35.002186|2025-05-08T19:30:22.777805100, timestamp=null), recordMetadata=forex_topic-0@50]
2025-05-08 19:30:22.817 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.933325|35.123678|2025-05-08T19:30:22.777805100 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.933325|35.123678|2025-05-08T19:30:22.777805100, timestamp=null), recordMetadata=forex_topic-0@51]
2025-05-08 19:30:23.848 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:23.851 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.277813|35.158344|2025-05-08T19:30:23.829938800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.277813|35.158344|2025-05-08T19:30:23.829938800, timestamp=null), recordMetadata=forex_topic-0@52]
2025-05-08 19:30:23.869 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.045600|35.201757|2025-05-08T19:30:23.829938800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.045600|35.201757|2025-05-08T19:30:23.829938800, timestamp=null), recordMetadata=forex_topic-0@53]
2025-05-08 19:30:24.886 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:24.891 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.085880|34.740776|2025-05-08T19:30:24.868808500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.085880|34.740776|2025-05-08T19:30:24.868808500, timestamp=null), recordMetadata=forex_topic-0@54]
2025-05-08 19:30:24.909 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.949634|34.992972|2025-05-08T19:30:24.868808500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.949634|34.992972|2025-05-08T19:30:24.868808500, timestamp=null), recordMetadata=forex_topic-0@55]
2025-05-08 19:30:25.932 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:25.943 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.831143|35.060103|2025-05-08T19:30:25.915155 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.831143|35.060103|2025-05-08T19:30:25.915155, timestamp=null), recordMetadata=forex_topic-0@56]
2025-05-08 19:30:25.956 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.822265|35.152636|2025-05-08T19:30:25.915155 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.822265|35.152636|2025-05-08T19:30:25.915155, timestamp=null), recordMetadata=forex_topic-0@57]
2025-05-08 19:30:26.976 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:26.981 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.179547|34.685066|2025-05-08T19:30:26.959311600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.179547|34.685066|2025-05-08T19:30:26.959311600, timestamp=null), recordMetadata=forex_topic-0@58]
2025-05-08 19:30:27.000 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.996467|34.965118|2025-05-08T19:30:26.959311600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.996467|34.965118|2025-05-08T19:30:26.959311600, timestamp=null), recordMetadata=forex_topic-0@59]
2025-05-08 19:30:28.016 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:28.049 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.853123|34.752123|2025-05-08T19:30:27.999866900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.853123|34.752123|2025-05-08T19:30:27.999866900, timestamp=null), recordMetadata=forex_topic-0@60]
2025-05-08 19:30:28.066 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.833255|34.998646|2025-05-08T19:30:27.999866900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.833255|34.998646|2025-05-08T19:30:27.999866900, timestamp=null), recordMetadata=forex_topic-0@61]
2025-05-08 19:30:29.090 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:29.094 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.953750|35.284569|2025-05-08T19:30:29.072950900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.953750|35.284569|2025-05-08T19:30:29.072950900, timestamp=null), recordMetadata=forex_topic-0@62]
2025-05-08 19:30:29.115 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.883569|35.264869|2025-05-08T19:30:29.072950900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.883569|35.264869|2025-05-08T19:30:29.072950900, timestamp=null), recordMetadata=forex_topic-0@63]
2025-05-08 19:30:30.144 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:30.148 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.301513|35.262416|2025-05-08T19:30:30.127818500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.301513|35.262416|2025-05-08T19:30:30.127818500, timestamp=null), recordMetadata=forex_topic-0@64]
2025-05-08 19:30:30.163 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.057450|35.253793|2025-05-08T19:30:30.127818500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.057450|35.253793|2025-05-08T19:30:30.127818500, timestamp=null), recordMetadata=forex_topic-0@65]
2025-05-08 19:30:31.185 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:31.189 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.228948|35.312631|2025-05-08T19:30:31.169172900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.228948|35.312631|2025-05-08T19:30:31.169172900, timestamp=null), recordMetadata=forex_topic-0@66]
2025-05-08 19:30:31.204 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.021168|35.278900|2025-05-08T19:30:31.169172900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.021168|35.278900|2025-05-08T19:30:31.169172900, timestamp=null), recordMetadata=forex_topic-0@67]
2025-05-08 19:30:32.229 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:32.235 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.330241|35.260015|2025-05-08T19:30:32.211997 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.330241|35.260015|2025-05-08T19:30:32.211997, timestamp=null), recordMetadata=forex_topic-0@68]
2025-05-08 19:30:32.256 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.071814|35.252592|2025-05-08T19:30:32.211997 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.071814|35.252592|2025-05-08T19:30:32.211997, timestamp=null), recordMetadata=forex_topic-0@69]
2025-05-08 19:30:33.286 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:33.291 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.840880|35.071676|2025-05-08T19:30:33.270410 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.840880|35.071676|2025-05-08T19:30:33.270410, timestamp=null), recordMetadata=forex_topic-0@70]
2025-05-08 19:30:33.308 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.827134|35.158423|2025-05-08T19:30:33.270410 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.827134|35.158423|2025-05-08T19:30:33.270410, timestamp=null), recordMetadata=forex_topic-0@71]
2025-05-08 19:30:34.326 [Coordinator] [http-nio-8090-exec-9] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:34.330 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.316566|34.820735|2025-05-08T19:30:34.310179500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.316566|34.820735|2025-05-08T19:30:34.310179500, timestamp=null), recordMetadata=forex_topic-0@72]
2025-05-08 19:30:34.346 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.064977|35.032952|2025-05-08T19:30:34.310179500 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.064977|35.032952|2025-05-08T19:30:34.310179500, timestamp=null), recordMetadata=forex_topic-0@73]
2025-05-08 19:30:35.371 [Coordinator] [http-nio-8090-exec-10] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:35.374 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.709069|34.738986|2025-05-08T19:30:35.354597700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.709069|34.738986|2025-05-08T19:30:35.354597700, timestamp=null), recordMetadata=forex_topic-0@74]
2025-05-08 19:30:35.434 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.761228|34.992078|2025-05-08T19:30:35.354597700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.761228|34.992078|2025-05-08T19:30:35.354597700, timestamp=null), recordMetadata=forex_topic-0@75]
2025-05-08 19:30:36.422 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:36.427 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.070703|34.723748|2025-05-08T19:30:36.406101600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.070703|34.723748|2025-05-08T19:30:36.406101600, timestamp=null), recordMetadata=forex_topic-0@76]
2025-05-08 19:30:36.449 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.942045|34.984459|2025-05-08T19:30:36.406101600 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.942045|34.984459|2025-05-08T19:30:36.406101600, timestamp=null), recordMetadata=forex_topic-0@77]
2025-05-08 19:30:37.479 [Coordinator] [http-nio-8090-exec-2] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:37.483 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.208092|35.334320|2025-05-08T19:30:37.463188200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.208092|35.334320|2025-05-08T19:30:37.463188200, timestamp=null), recordMetadata=forex_topic-0@78]
2025-05-08 19:30:37.497 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.010740|35.289744|2025-05-08T19:30:37.463188200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.010740|35.289744|2025-05-08T19:30:37.463188200, timestamp=null), recordMetadata=forex_topic-0@79]
2025-05-08 19:30:38.523 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:38.545 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.210711|35.080103|2025-05-08T19:30:38.505471700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.210711|35.080103|2025-05-08T19:30:38.505471700, timestamp=null), recordMetadata=forex_topic-0@80]
2025-05-08 19:30:38.563 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|34.012049|35.162636|2025-05-08T19:30:38.505471700 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|34.012049|35.162636|2025-05-08T19:30:38.505471700, timestamp=null), recordMetadata=forex_topic-0@81]
2025-05-08 19:30:39.591 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:39.596 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.661468|35.260827|2025-05-08T19:30:39.574474200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.661468|35.260827|2025-05-08T19:30:39.574474200, timestamp=null), recordMetadata=forex_topic-0@82]
2025-05-08 19:30:39.616 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.737427|35.252998|2025-05-08T19:30:39.574474200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.737427|35.252998|2025-05-08T19:30:39.574474200, timestamp=null), recordMetadata=forex_topic-0@83]
2025-05-08 19:30:40.632 [Coordinator] [http-nio-8090-exec-5] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:40.637 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|34.107368|34.913003|2025-05-08T19:30:40.616094800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|34.107368|34.913003|2025-05-08T19:30:40.616094800, timestamp=null), recordMetadata=forex_topic-0@84]
2025-05-08 19:30:40.661 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.960378|35.079086|2025-05-08T19:30:40.616094800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.960378|35.079086|2025-05-08T19:30:40.616094800, timestamp=null), recordMetadata=forex_topic-0@85]
2025-05-08 19:30:41.669 [Coordinator] [http-nio-8090-exec-6] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:41.679 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.940558|34.812860|2025-05-08T19:30:41.652583900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.940558|34.812860|2025-05-08T19:30:41.652583900, timestamp=null), recordMetadata=forex_topic-0@86]
2025-05-08 19:30:41.697 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.876973|35.029015|2025-05-08T19:30:41.652583900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.876973|35.029015|2025-05-08T19:30:41.652583900, timestamp=null), recordMetadata=forex_topic-0@87]
2025-05-08 19:30:42.726 [Coordinator] [http-nio-8090-exec-7] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:42.731 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.956906|34.950154|2025-05-08T19:30:42.709277200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.956906|34.950154|2025-05-08T19:30:42.709277200, timestamp=null), recordMetadata=forex_topic-0@88]
2025-05-08 19:30:42.751 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.885147|35.097662|2025-05-08T19:30:42.709277200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.885147|35.097662|2025-05-08T19:30:42.709277200, timestamp=null), recordMetadata=forex_topic-0@89]
2025-05-08 19:30:43.776 [Coordinator] [http-nio-8090-exec-8] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from TCP: PF1_USDTRY
2025-05-08 19:30:43.780 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF1_USDTRY|33.704665|34.658201|2025-05-08T19:30:43.761058800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF1_USDTRY|33.704665|34.658201|2025-05-08T19:30:43.761058800, timestamp=null), recordMetadata=forex_topic-0@90]
2025-05-08 19:30:43.794 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: USDTRY|33.759026|34.951685|2025-05-08T19:30:43.761058800 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=USDTRY|33.759026|34.951685|2025-05-08T19:30:43.761058800, timestamp=null), recordMetadata=forex_topic-0@91]
2025-05-08 19:31:47.970 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 19:31:48.697 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:31:48.700 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 19:31:48.726 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
2025-05-08 19:31:48.741 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:31:48.742 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 19:31:48.752 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-08 19:31:49.288 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 19:31:49.308 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 19:31:49.310 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 19:31:49.310 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 19:31:49.363 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 19:31:49.365 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1155 ms
2025-05-08 19:31:49.654 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 19:31:49.706 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 19:31:49.752 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 19:31:49.954 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 19:31:50.027 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 19:31:50.279 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 19:31:50.282 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 19:31:50.580 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.AlarmService - AlarmService initialized: enabled=true, interval=1000ms, threshold=30s, recipient=mtggamer51@gmail.com
2025-05-08 19:31:50.592 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 19:31:50.593 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 19:31:50.593 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 19:31:50.593 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 19:31:50.593 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 19:31:50.593 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 19:31:50.594 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 19:31:50.594 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-08 19:31:51.098 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 19:31:51.111 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 19:31:51.123 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:51.123865100 entries: []
2025-05-08 19:31:52.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:52.128076400 entries: []
2025-05-08 19:31:53.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:53.126685300 entries: []
2025-05-08 19:31:54.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:54.124604700 entries: []
2025-05-08 19:31:55.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:55.132918900 entries: []
2025-05-08 19:31:56.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:56.125609600 entries: []
2025-05-08 19:31:57.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:57.124365200 entries: []
2025-05-08 19:31:58.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:58.121730400 entries: []
2025-05-08 19:31:59.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:31:59.131979700 entries: []
2025-05-08 19:32:00.134 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:00.134322900 entries: []
2025-05-08 19:32:01.129 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:01.129265200 entries: []
2025-05-08 19:32:02.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:02.125587700 entries: []
2025-05-08 19:32:03.123 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:03.123029200 entries: []
2025-05-08 19:32:04.119 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:04.119191100 entries: []
2025-05-08 19:32:05.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:05.120334200 entries: []
2025-05-08 19:32:06.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:06.131243800 entries: []
2025-05-08 19:32:07.149 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:07.149151300 entries: []
2025-05-08 19:32:08.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:08.125663300 entries: []
2025-05-08 19:32:09.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:09.121746400 entries: []
2025-05-08 19:32:10.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:10.132943200 entries: []
2025-05-08 19:32:11.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:11.126637200 entries: []
2025-05-08 19:32:12.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:12.124549400 entries: []
2025-05-08 19:32:13.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:13.130722100 entries: []
2025-05-08 19:32:14.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:14.124262800 entries: []
2025-05-08 19:32:15.135 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:15.135527400 entries: []
2025-05-08 19:32:16.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:16.128333100 entries: []
2025-05-08 19:32:17.134 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:17.134340100 entries: []
2025-05-08 19:32:18.129 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:18.129372 entries: []
2025-05-08 19:32:19.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:19.128666700 entries: []
2025-05-08 19:32:20.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:20.125971600 entries: []
2025-05-08 19:32:21.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:21.131407800 entries: []
2025-05-08 19:32:22.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:22.126538300 entries: []
2025-05-08 19:32:23.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:23.124897700 entries: []
2025-05-08 19:32:24.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:24.130889800 entries: []
2025-05-08 19:32:25.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:25.124048100 entries: []
2025-05-08 19:32:26.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:26.120331100 entries: []
2025-05-08 19:32:27.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:27.131669900 entries: []
2025-05-08 19:32:28.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:28.125792500 entries: []
2025-05-08 19:32:29.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:29.121216700 entries: []
2025-05-08 19:32:30.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:30.121830900 entries: []
2025-05-08 19:32:31.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:31.132923400 entries: []
2025-05-08 19:32:32.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:32.126061700 entries: []
2025-05-08 19:32:33.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:33.120073600 entries: []
2025-05-08 19:32:34.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:34.131946100 entries: []
2025-05-08 19:32:35.129 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:35.129302400 entries: []
2025-05-08 19:32:36.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:36.128633500 entries: []
2025-05-08 19:32:37.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:37.128156200 entries: []
2025-05-08 19:32:38.122 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:38.122818500 entries: []
2025-05-08 19:32:39.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:39.132241 entries: []
2025-05-08 19:32:40.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:40.128638800 entries: []
2025-05-08 19:32:41.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:41.125031600 entries: []
2025-05-08 19:32:42.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:42.120112900 entries: []
2025-05-08 19:32:43.119 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:43.119256600 entries: []
2025-05-08 19:32:44.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:44.130912200 entries: []
2025-05-08 19:32:45.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:45.126738400 entries: []
2025-05-08 19:32:46.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:46.120344800 entries: []
2025-05-08 19:32:47.133 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:47.133206500 entries: []
2025-05-08 19:32:48.129 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:48.129741600 entries: []
2025-05-08 19:32:49.123 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:49.123578300 entries: []
2025-05-08 19:32:50.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:50.132364300 entries: []
2025-05-08 19:32:51.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:51.130293500 entries: []
2025-05-08 19:32:52.127 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:52.127975300 entries: []
2025-05-08 19:32:53.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:53.124920600 entries: []
2025-05-08 19:32:54.119 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:54.119906400 entries: []
2025-05-08 19:32:55.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:55.131499700 entries: []
2025-05-08 19:32:56.127 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:56.127397200 entries: []
2025-05-08 19:32:57.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:57.120934300 entries: []
2025-05-08 19:32:58.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:58.130524400 entries: []
2025-05-08 19:32:59.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:32:59.121558400 entries: []
2025-05-08 19:33:00.129 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:00.129037500 entries: []
2025-05-08 19:33:01.122 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:01.122560700 entries: []
2025-05-08 19:33:02.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:02.130757100 entries: []
2025-05-08 19:33:03.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:03.124534200 entries: []
2025-05-08 19:33:04.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:04.120465200 entries: []
2025-05-08 19:33:05.122 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:05.121910600 entries: []
2025-05-08 19:33:06.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:06.132518700 entries: []
2025-05-08 19:33:07.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:07.128364500 entries: []
2025-05-08 19:33:08.127 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:08.127896300 entries: []
2025-05-08 19:33:09.127 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:09.127733500 entries: []
2025-05-08 19:33:10.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:10.125067900 entries: []
2025-05-08 19:33:11.122 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:11.122594200 entries: []
2025-05-08 19:33:12.134 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:12.134450200 entries: []
2025-05-08 19:33:13.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:13.130767400 entries: []
2025-05-08 19:33:14.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:14.126374900 entries: []
2025-05-08 19:33:15.123 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:15.123803800 entries: []
2025-05-08 19:33:16.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:16.131257400 entries: []
2025-05-08 19:33:17.122 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:17.122910200 entries: []
2025-05-08 19:33:18.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:18.130874200 entries: []
2025-05-08 19:33:19.122 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:19.122838800 entries: []
2025-05-08 19:33:20.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:20.121721 entries: []
2025-05-08 19:33:21.129 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:21.129899500 entries: []
2025-05-08 19:33:22.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:22.124742 entries: []
2025-05-08 19:33:23.119 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:23.119376500 entries: []
2025-05-08 19:33:24.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:24.131659400 entries: []
2025-05-08 19:33:25.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:25.124965800 entries: []
2025-05-08 19:33:26.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:26.121562400 entries: []
2025-05-08 19:33:27.134 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:27.134762300 entries: []
2025-05-08 19:33:28.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:28.126673200 entries: []
2025-05-08 19:33:29.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:29.131783600 entries: []
2025-05-08 19:33:30.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:30.126825600 entries: []
2025-05-08 19:33:31.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:31.124104900 entries: []
2025-05-08 19:33:32.133 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:32.133283800 entries: []
2025-05-08 19:33:33.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:33.130473400 entries: []
2025-05-08 19:33:34.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:34.126760 entries: []
2025-05-08 19:33:35.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:35.131733900 entries: []
2025-05-08 19:33:36.126 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:36.126596900 entries: []
2025-05-08 19:33:37.122 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:37.122764100 entries: []
2025-05-08 19:33:38.133 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:38.133849900 entries: []
2025-05-08 19:33:39.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:39.132765300 entries: []
2025-05-08 19:33:40.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:40.125017300 entries: []
2025-05-08 19:33:41.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:41.121682600 entries: []
2025-05-08 19:33:42.120 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:42.120386700 entries: []
2025-05-08 19:33:43.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:43.132723700 entries: []
2025-05-08 19:33:44.123 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:44.123616100 entries: []
2025-05-08 19:33:45.133 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:45.133511500 entries: []
2025-05-08 19:33:46.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:46.121911200 entries: []
2025-05-08 19:33:47.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:47.132883400 entries: []
2025-05-08 19:33:48.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:48.130762200 entries: []
2025-05-08 19:33:49.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:49.124097700 entries: []
2025-05-08 19:33:50.119 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:50.119697900 entries: []
2025-05-08 19:33:51.127 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:51.127933900 entries: []
2025-05-08 19:33:52.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:52.124123300 entries: []
2025-05-08 19:33:53.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:53.121486400 entries: []
2025-05-08 19:33:54.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:54.131164200 entries: []
2025-05-08 19:33:55.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:55.130700100 entries: []
2025-05-08 19:33:56.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:56.124657900 entries: []
2025-05-08 19:33:57.128 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:57.128975 entries: []
2025-05-08 19:33:58.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:58.121644400 entries: []
2025-05-08 19:33:59.132 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:33:59.132768100 entries: []
2025-05-08 19:34:00.130 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:00.130425600 entries: []
2025-05-08 19:34:01.123 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:01.123886900 entries: []
2025-05-08 19:34:02.134 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:02.134210600 entries: []
2025-05-08 19:34:03.124 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:03.124566100 entries: []
2025-05-08 19:34:04.121 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:04.121665700 entries: []
2025-05-08 19:34:05.134 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:05.134295 entries: []
2025-05-08 19:34:06.125 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:06.125718300 entries: []
2025-05-08 19:34:07.123 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:07.123647400 entries: []
2025-05-08 19:34:08.131 [Coordinator] [scheduling-1] DEBUG com.example.forexproject.coordinator.service.AlarmService - AlarmService check at 2025-05-08T19:34:08.131964500 entries: []
2025-05-08 19:35:48.410 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-08 19:35:49.193 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:35:49.195 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-08 19:35:49.219 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.
2025-05-08 19:35:49.233 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-08 19:35:49.233 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-08 19:35:49.241 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-08 19:35:49.818 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-08 19:35:49.832 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-08 19:35:49.835 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-08 19:35:49.835 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-08 19:35:49.884 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-08 19:35:49.886 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1201 ms
2025-05-08 19:35:50.196 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-08 19:35:50.248 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-08 19:35:50.278 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-08 19:35:50.511 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-08 19:35:50.572 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-08 19:35:50.790 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-08 19:35:50.793 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-08 19:35:51.090 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.AlarmService - AlarmService initialized: enabled=true, interval=10000ms, threshold=30s, recipient=mtggamer51@gmail.com
2025-05-08 19:35:51.100 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-08 19:35:51.100 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-08 19:35:51.100 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-08 19:35:51.101 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-08 19:35:51.101 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-08 19:35:51.101 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-08 19:35:51.101 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-08 19:35:51.102 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-08 19:35:51.858 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-08 19:35:51.870 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-08 19:35:51.883 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:35:51.883788400 - tracking platforms: []
2025-05-08 19:36:01.892 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:36:01.892852100 - tracking platforms: []
2025-05-08 19:36:11.893 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:36:11.893832700 - tracking platforms: []
2025-05-08 19:36:21.893 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:36:21.893673800 - tracking platforms: []
2025-05-08 19:36:31.884 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:36:31.884671800 - tracking platforms: []
2025-05-08 19:36:41.891 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:36:41.891094900 - tracking platforms: []
2025-05-08 19:36:51.891 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:36:51.891613600 - tracking platforms: []
2025-05-08 19:37:01.891 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:37:01.891233700 - tracking platforms: []
2025-05-08 19:37:11.881 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:37:11.881703700 - tracking platforms: []
2025-05-08 19:37:21.887 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:37:21.887273600 - tracking platforms: []
2025-05-08 19:37:31.893 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:37:31.893079500 - tracking platforms: []
2025-05-08 19:37:41.887 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:37:41.887025500 - tracking platforms: []
2025-05-08 19:37:51.883 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:37:51.883866 - tracking platforms: []
2025-05-08 19:38:01.885 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:38:01.885694800 - tracking platforms: []
2025-05-08 19:38:11.886 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:38:11.886190600 - tracking platforms: []
2025-05-08 19:38:12.956 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-08 19:38:12.956 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-08 19:38:12.956 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-05-08 19:38:13.049 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-08 19:38:13.633 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.229950|34.874049|2025-05-08T19:38:12.869001400 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.229950|34.874049|2025-05-08T19:38:12.869001400, timestamp=null), recordMetadata=forex_topic-0@92]
2025-05-08 19:38:21.887 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:38:21.887827300 - tracking platforms: [PF2]
2025-05-08 19:38:31.890 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:38:31.890290200 - tracking platforms: [PF2]
2025-05-08 19:38:41.896 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:38:41.896033300 - tracking platforms: [PF2]
2025-05-08 19:38:51.896 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:38:51.896160100 - tracking platforms: [PF2]
2025-05-08 19:38:51.897 [Coordinator] [scheduling-1] WARN  com.example.forexproject.coordinator.service.AlarmService - ALERT: No response from PF2 for 38 seconds.
2025-05-08 19:38:54.130 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - Alarm email sent for PF2.
2025-05-08 19:39:01.883 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:39:01.883910400 - tracking platforms: [PF2]
2025-05-08 19:39:01.886 [Coordinator] [scheduling-1] WARN  com.example.forexproject.coordinator.service.AlarmService - ALERT: No response from PF2 for 48 seconds.
2025-05-08 19:39:03.700 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - Alarm email sent for PF2.
2025-05-08 19:39:11.886 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-08T19:39:11.886824500 - tracking platforms: [PF2]
2025-05-08 19:39:11.887 [Coordinator] [scheduling-1] WARN  com.example.forexproject.coordinator.service.AlarmService - ALERT: No response from PF2 for 58 seconds.
2025-05-08 19:39:14.314 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - Alarm email sent for PF2.
2025-05-14 20:10:03.835 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-14 20:10:04.645 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-14 20:10:04.647 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-14 20:10:04.677 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
2025-05-14 20:10:04.697 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-14 20:10:04.698 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-14 20:10:04.709 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-05-14 20:10:05.343 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-14 20:10:05.356 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-14 20:10:05.358 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-14 20:10:05.358 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-14 20:10:05.412 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-14 20:10:05.413 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1306 ms
2025-05-14 20:10:05.811 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-14 20:10:05.867 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-14 20:10:05.923 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-14 20:10:06.139 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-14 20:10:06.216 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-14 20:10:06.505 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-14 20:10:06.509 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-14 20:10:06.948 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.AlarmService - AlarmService initialized: enabled=true, interval=100000ms, threshold=300s, recipient=mtggamer51@gmail.com
2025-05-14 20:10:06.968 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-14 20:10:06.968 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-14 20:10:06.969 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-14 20:10:06.969 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-14 20:10:06.969 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-14 20:10:06.969 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-14 20:10:06.970 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-14 20:10:06.970 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-14 20:10:07.661 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-14 20:10:07.677 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-14 20:10:07.694 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-14T20:10:07.694295900 - tracking platforms: []
2025-05-14 20:10:25.351 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-14 20:10:25.352 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-14 20:10:25.353 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-14 20:10:25.747 [Coordinator] [http-nio-8090-exec-3] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-14 20:10:26.313 [Coordinator] [http-nio-8090-exec-3] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis error onRateAvailable for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultListOperations.rightPush(DefaultListOperations.java:208) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateAvailable(CoordinatorService.java:126) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.RatePushController.pushRate(RatePushController.java:18) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 63 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:10:26.858 [Coordinator] [http-nio-8090-exec-3] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis Stream error onRateAvailable for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultStreamOperations.add(DefaultStreamOperations.java:138) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:171) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:158) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateAvailable(CoordinatorService.java:132) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.RatePushController.pushRate(RatePushController.java:18) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 65 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:10:26.898 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate update from PF2: PF2_USDTRY
2025-05-14 20:10:26.984 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.110317|34.658419|2025-05-14T20:10:25.615694 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.110317|34.658419|2025-05-14T20:10:25.615694, timestamp=null), recordMetadata=forex_topic-0@0]
2025-05-14 20:10:27.053 [Coordinator] [http-nio-8090-exec-1] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis error onRateUpdate for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultListOperations.rightPush(DefaultListOperations.java:208) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateUpdate(CoordinatorService.java:162) ~[classes/:?]
	at com.example.forexproject.coordinator.provider.PF2RestProvider.poll(PF2RestProvider.java:114) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.ManualController.pollPf2(ManualController.java:21) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 64 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:10:27.262 [Coordinator] [http-nio-8090-exec-1] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis Stream error onRateUpdate for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultStreamOperations.add(DefaultStreamOperations.java:138) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:171) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:158) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateUpdate(CoordinatorService.java:168) ~[classes/:?]
	at com.example.forexproject.coordinator.provider.PF2RestProvider.poll(PF2RestProvider.java:114) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.ManualController.pollPf2(ManualController.java:21) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 66 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:10:27.267 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.110317|34.658419|2025-05-14T20:10:26.978256900 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.110317|34.658419|2025-05-14T20:10:26.978256900, timestamp=null), recordMetadata=forex_topic-0@1]
2025-05-14 20:10:27.364 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-14 20:10:27.391 [Coordinator] [http-nio-8090-exec-1] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis error onRateAvailable for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultListOperations.rightPush(DefaultListOperations.java:208) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateAvailable(CoordinatorService.java:126) ~[classes/:?]
	at com.example.forexproject.coordinator.provider.PF2RestProvider.poll(PF2RestProvider.java:115) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.ManualController.pollPf2(ManualController.java:21) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 64 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:10:27.426 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.110317|34.658419|2025-05-14T20:10:25.615694 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.110317|34.658419|2025-05-14T20:10:25.615694, timestamp=null), recordMetadata=forex_topic-0@2]
2025-05-14 20:10:27.426 [Coordinator] [http-nio-8090-exec-1] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis Stream error onRateAvailable for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultStreamOperations.add(DefaultStreamOperations.java:138) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:171) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:158) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateAvailable(CoordinatorService.java:132) ~[classes/:?]
	at com.example.forexproject.coordinator.provider.PF2RestProvider.poll(PF2RestProvider.java:115) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.ManualController.pollPf2(ManualController.java:21) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 66 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:10:44.556 [Coordinator] [http-nio-8090-exec-4] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-14 20:10:44.560 [Coordinator] [http-nio-8090-exec-4] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis error onRateAvailable for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultListOperations.rightPush(DefaultListOperations.java:208) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateAvailable(CoordinatorService.java:126) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.RatePushController.pushRate(RatePushController.java:18) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 63 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:10:44.567 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|33.988027|35.142575|2025-05-14T20:10:44.543858300 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|33.988027|35.142575|2025-05-14T20:10:44.543858300, timestamp=null), recordMetadata=forex_topic-0@3]
2025-05-14 20:10:44.566 [Coordinator] [http-nio-8090-exec-4] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Redis Stream error onRateAvailable for PF2_USDTRY: Unable to connect to Redis
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1858) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1789) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1586) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.lambda$getConnection$0(LettuceConnectionFactory.java:1566) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.doInLock(LettuceConnectionFactory.java:1527) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1563) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1249) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:1055) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:195) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:398) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:378) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:117) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.DefaultStreamOperations.add(DefaultStreamOperations.java:138) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:171) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.core.StreamOperations.add(StreamOperations.java:158) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.service.CoordinatorService.onRateAvailable(CoordinatorService.java:132) ~[classes/:?]
	at com.example.forexproject.coordinator.controller.RatePushController.pushRate(RatePushController.java:18) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:63) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:41) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:354) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:219) ~[lettuce-core-6.4.2.RELEASE.jar:6.4.2.RELEASE/f4dfb40]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at java.util.Optional.orElseGet(Optional.java:364) ~[?:?]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:112) ~[spring-data-redis-3.4.2.jar:3.4.2]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1787) ~[spring-data-redis-3.4.2.jar:3.4.2]
	... 65 more
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at sun.nio.ch.Net.pollConnect(Native Method) ~[?:?]
	at sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062) ~[?:?]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.117.Final.jar:4.1.117.Final]
	... 1 more
2025-05-14 20:12:31.617 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-14 20:12:32.525 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-14 20:12:32.526 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-14 20:12:32.557 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
2025-05-14 20:12:32.576 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-14 20:12:32.577 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-14 20:12:32.588 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-14 20:12:33.339 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-14 20:12:33.361 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-14 20:12:33.364 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-14 20:12:33.364 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-14 20:12:33.442 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-14 20:12:33.444 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1502 ms
2025-05-14 20:12:33.787 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-14 20:12:33.851 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-14 20:12:33.905 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-14 20:12:34.156 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-14 20:12:34.267 [Coordinator] [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.12
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-14 20:12:34.693 [Coordinator] [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-14 20:12:34.699 [Coordinator] [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-14 20:12:35.130 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.AlarmService - AlarmService initialized: enabled=true, interval=100000ms, threshold=300s, recipient=mtggamer51@gmail.com
2025-05-14 20:12:35.156 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF1TcpProvider - PF1TcpProvider auto-start disabled
2025-05-14 20:12:35.158 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF1TcpProvider
2025-05-14 20:12:35.158 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider auto-start disabled (enabled=false, manualMode=false)
2025-05-14 20:12:35.158 [Coordinator] [main] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Loaded and started DataProvider: PF2RestProvider
2025-05-14 20:12:35.158 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_USDTRY
2025-05-14 20:12:35.159 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_EURUSD
2025-05-14 20:12:35.159 [Coordinator] [main] INFO  com.example.forexproject.coordinator.provider.PF2RestProvider - PF2RestProvider subscribed to PF2_GBPUSD
2025-05-14 20:12:35.160 [Coordinator] [main] ERROR com.example.forexproject.coordinator.service.CoordinatorService - Failed to load dynamic provider com.example.forexproject.coordinator.provider.PF2RestProvider: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
java.lang.NullPointerException: Cannot invoke "com.example.forexproject.coordinator.config.Pf2RestProperties.isEnabled()" because "this.props" is null
	at com.example.forexproject.coordinator.provider.PF2RestProvider.startProvider(PF2RestProvider.java:68) ~[classes/:?]
	at com.example.forexproject.coordinator.service.CoordinatorService.initDataProviders(CoordinatorService.java:84) ~[classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:15) [classes/:?]
2025-05-14 20:12:36.112 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"]
2025-05-14 20:12:36.131 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8090 (http) with context path '/'
2025-05-14 20:12:36.153 [Coordinator] [scheduling-1] INFO  com.example.forexproject.coordinator.service.AlarmService - [AlarmService] scheduled check at 2025-05-14T20:12:36.153222500 - tracking platforms: []
2025-05-14 20:12:39.797 [Coordinator] [http-nio-8090-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-14 20:12:39.797 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-14 20:12:39.799 [Coordinator] [http-nio-8090-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-14 20:12:39.899 [Coordinator] [http-nio-8090-exec-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Rate available from PF2: PF2_USDTRY
2025-05-14 20:12:40.494 [Coordinator] [kafka-producer-network-thread | producer-1] INFO  com.example.forexproject.coordinator.service.CoordinatorService - Sent message to topic forex_topic: PF2_USDTRY|34.238162|35.066614|2025-05-14T20:12:39.708972200 | metadata: SendResult [producerRecord=ProducerRecord(topic=forex_topic, partition=null, headers=RecordHeaders(headers = [], isReadOnly = true), key=null, value=PF2_USDTRY|34.238162|35.066614|2025-05-14T20:12:39.708972200, timestamp=null), recordMetadata=forex_topic-0@0]
2025-05-21 01:05:48.558 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-21 01:05:49.268 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-21 01:05:49.270 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-21 01:05:49.287 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 JPA repository interfaces.
2025-05-21 01:05:49.303 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-21 01:05:49.305 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-21 01:05:49.316 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-05-21 01:05:49.819 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-21 01:05:49.832 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-21 01:05:49.834 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-21 01:05:49.834 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-21 01:05:49.877 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-21 01:05:49.879 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1091 ms
2025-05-21 01:05:53.734 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-21 01:05:53.772 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-21 01:05:53.792 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-21 01:05:54.002 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-21 01:05:55.034 [Coordinator] [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-05-21 01:05:55.034 [Coordinator] [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - The connection attempt failed.
2025-05-21 01:05:55.035 [Coordinator] [main] WARN  org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [The connection attempt failed.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:18) [classes/:?]
Caused by: org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.makeConnection(Driver.java:443) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.connect(Driver.java:297) ~[postgresql-42.6.0.jar:42.6.0]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	... 35 more
Caused by: java.net.UnknownHostException: postgres
	at sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[?:?]
	at java.net.Socket.connect(Socket.java:760) ~[?:?]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.makeConnection(Driver.java:443) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.connect(Driver.java:297) ~[postgresql-42.6.0.jar:42.6.0]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	... 35 more
2025-05-21 01:05:55.055 [Coordinator] [main] ERROR org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-05-21 01:05:55.055 [Coordinator] [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-05-21 01:05:55.059 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-21 01:05:55.077 [Coordinator] [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) ~[spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:18) [classes/:?]
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808) ~[spring-beans-6.2.2.jar:6.2.2]
	... 15 more
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808) ~[spring-beans-6.2.2.jar:6.2.2]
	... 15 more
2025-05-21 01:06:32.136 [Coordinator] [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-05-21 01:06:32.822 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-21 01:06:32.823 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-21 01:06:32.838 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 JPA repository interfaces.
2025-05-21 01:06:32.855 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-21 01:06:32.859 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-05-21 01:06:32.870 [Coordinator] [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-05-21 01:06:33.357 [Coordinator] [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8090 (http)
2025-05-21 01:06:33.369 [Coordinator] [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"]
2025-05-21 01:06:33.371 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-05-21 01:06:33.372 [Coordinator] [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-21 01:06:33.423 [Coordinator] [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-21 01:06:33.424 [Coordinator] [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1079 ms
2025-05-21 01:06:37.276 [Coordinator] [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-21 01:06:37.317 [Coordinator] [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-05-21 01:06:37.342 [Coordinator] [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-21 01:06:37.542 [Coordinator] [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-21 01:06:38.573 [Coordinator] [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-05-21 01:06:38.574 [Coordinator] [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - The connection attempt failed.
2025-05-21 01:06:38.574 [Coordinator] [main] WARN  org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [The connection attempt failed.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) [spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) [spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:18) [classes/:?]
Caused by: org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.makeConnection(Driver.java:443) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.connect(Driver.java:297) ~[postgresql-42.6.0.jar:42.6.0]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	... 35 more
Caused by: java.net.UnknownHostException: postgres
	at sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[?:?]
	at java.net.Socket.connect(Socket.java:760) ~[?:?]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.makeConnection(Driver.java:443) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.Driver.connect(Driver.java:297) ~[postgresql-42.6.0.jar:42.6.0]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	... 35 more
2025-05-21 01:06:38.581 [Coordinator] [main] ERROR org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-05-21 01:06:38.581 [Coordinator] [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-05-21 01:06:38.586 [Coordinator] [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-21 01:06:38.607 [Coordinator] [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970) ~[spring-context-6.2.2.jar:6.2.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.2.2.jar:6.2.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361) [spring-boot-3.4.2.jar:3.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350) [spring-boot-3.4.2.jar:3.4.2]
	at com.example.forexproject.coordinator.CoordinatorApplication.main(CoordinatorApplication.java:18) [classes/:?]
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808) ~[spring-beans-6.2.2.jar:6.2.2]
	... 15 more
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502) ~[hibernate-core-6.6.5.Final.jar:6.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859) ~[spring-beans-6.2.2.jar:6.2.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808) ~[spring-beans-6.2.2.jar:6.2.2]
	... 15 more
